searchState.loadedDescShard("iced_accessibility", 0, "Accessible tree of nodes\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWidget and Window IDs.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJoins multiple trees into a single tree\nCreate a new A11yTree XXX if you use this method, you will …\nHelper for creating an A11y tree with a single root node …\na custom id, which is equal to any <code>Id</code> with a matching …\nThe identifier of a generic widget.\nSimilar to PartialEq, but only intended for use when …\nInternal representation of an <code>Id</code>.\nXXX Do not use this as an id for an accessibility node, it …\na unique id\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a custom <code>Id</code>.\nresets the id counter\nCreates a unique <code>Id</code>.\nget window node id that won’t conflict with other node …")