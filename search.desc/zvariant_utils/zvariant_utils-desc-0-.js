searchState.loadedDescShard("zvariant_utils", 0, "Various utilities used by the <code>zvariant</code> crate and others.\nContains utilities used to convert strings between …\nGenerates one or more structures used for parsing …\nConvert to pascal or camel case, assuming snake or kebab …\nConvert to snake or kebab case, assuming camel or Pascal …\nReturns an iterator over the contents of all <code>MetaList</code>s …\nCompares <code>ident</code> and <code>attr</code> and in case they match ensures …\nCompares <code>ident</code> and <code>attr</code> and in case they match ensures …\nCompares <code>ident</code> and <code>attr</code> and in case they match ensures …\nChecks if a <code>Type</code>’s identifier is “Option”.\nD-Bus format.\nThe encoding format.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe signature for an array.\nThe signature for a boolean.\nA child signature of a container signature.\nThe signature for a dictionary.\nA dynamic child signature.\nError you get on failure to parse a signature string.\nThe signature for a 64-bit floating point number.\nThe signature for a file descriptor.\nSignatures of the fields of a <code>Signature::Structure</code>.\nThe signature for a 16-bit signed integer.\nThe signature for a 32-bit signed integer.\nThe signature for a 64-bit signed integer.\nInvalid signature.\nThe signature for an object path.\nA D-Bus signature in parsed form.\nThe signature for a signature.\nA static child signature.\nThe signature for a string.\nThe signature for a structure.\nThe signature for a 16-bit unsigned integer.\nThe signature for a 32-bit unsigned integer.\nThe signature for a 64-bit unsigned integer.\nThe signature for an 8-bit unsigned integer (AKA a byte).\nThe signature for the unit type (<code>()</code>). This is not a valid …\nThe signature for a variant.\nThe required padding alignment for the given format.\nCreate a <code>Signature::Array</code> for a given child signature.\nCreate a <code>Signature::Dict</code> for a given key and value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse signature from a byte slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether there are no fields.\nA iterator over the fields’ signatures.\nThe number of fields.\nThe underlying child <code>Signature</code>.\nCreate a <code>Signature::Array</code> for a given static child …\nCreate a <code>Signature::Dict</code> for a given static key and value …\nCreate a <code>Signature::Structure</code> for a given set of static …\nThe length of the child signature in string form.\nThe size of the string form of <code>self</code>.\nCreate a <code>Signature::Structure</code> for a given set of field …\nConvert <code>self</code> to a string.\nConvert <code>self</code> to a string, without any enclosing …\nValidate the given signature string.\nWrite the string form of <code>self</code> to the given formatter.\nThe signature for the key.\nThe signature for the value.")