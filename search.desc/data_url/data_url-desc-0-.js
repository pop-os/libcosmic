searchState.loadedDescShard("data_url", 0, "Processing of <code>data:</code> URLs according to the Fetch Standard: …\nThe URL’s fragment identifier (after <code>#</code>)\nStreaming-decode the data URL’s body to <code>write_body_bytes</code>,\nReturn the decoded body, and the URL’s fragment …\nhttps://infra.spec.whatwg.org/#forgiving-base64-decode\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://fetch.spec.whatwg.org/#data-url-processor but …\nLike in a parsed URL\nhttps://infra.spec.whatwg.org/#forgiving-base64-decode\n<code>input</code> is assumed to be in an ASCII-compatible encoding\nFeed to the decoder partial input in an ASCII-compatible …\nCall this to signal the end of the input\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://mimesniff.spec.whatwg.org/#mime-type-representation\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if this <code>Mime</code> matches a given type and subtype, …\nConstruct a new <code>Mime</code> with the given <code>type_</code> and <code>subtype</code> and …\n(name, value)")