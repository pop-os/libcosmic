searchState.loadedDescShard("fluent_bundle", 0, "Fluent is a modern localization system designed to improve …\nFluent messages can use arguments in order to …\n<code>FluentAttribute</code> is a component of a compound <code>FluentMessage</code>.\nSpecialized <code>FluentBundle</code> over non-concurrent …\nCore error type for Fluent runtime system.\n<code>FluentMessage</code> is a basic translation unit of the Fluent …\nA resource containing a list of localization messages.\nThe <code>FluentValue</code> enum represents values which can be …\nAn error which occurs when <code>FluentBundle::add_resource</code> adds …\nAn iterator over <code>FluentAttribute</code> elements.\n<code>FluentBundle</code> is a collection of localization messages in …\nReturns an iterator over <code>entries</code> of the <code>FluentResource</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the <code>FluentValue</code> at the <code>key</code> if it exists.\nRetrieve a single <code>FluentAttribute</code> element.\nReturns an <code>Entry</code> at the given index out of the …\nRetrieves an id of an attribute.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over a tuple of the key an <code>FluentValue</code>.\nCreates a new empty argument map.\nSets the key value pair.\nReturns a reference to the source string that was used to …\nA fallible constructor of a new <code>FluentResource</code>.\n<code>types</code> module contains types necessary for Fluent runtime …\nRetrieves an value of an attribute.\nRetrieves an option of a <code>ast::Pattern</code>.\nPre-allocates capacity for arguments.\nA collection of localization messages for a single locale, …\nAdds the builtin functions described in the FTL syntax …\nMakes the provided rust function available to messages …\nAdds a resource to the bundle, returning an empty <code>Result&lt;T&gt;</code>…\nAdds a resource to the bundle, returning an empty <code>Result&lt;T&gt;</code>…\nFormats a pattern which comes from a <code>FluentMessage</code>.\nReturns the argument unchanged.\nRetrieves a <code>FluentMessage</code> from a bundle.\nReturns true if this bundle contains a message with the …\nCalls <code>U::from(self)</code>.\nConstructs a <code>FluentBundle</code>. The first element in <code>locales</code> …\nA constructor analogous to <code>FluentBundle::new</code> but operating …\nThis method allows to specify a function that will be …\nThis method allows to specify a function that will be …\nWhen formatting patterns, <code>FluentBundle</code> inserts Unicode …\nWrites a formatted pattern which comes from a <code>FluentMessage</code>…\nSpecialized <code>FluentBundle</code> over concurrent <code>IntlLangMemoizer</code>.\nA constructor analogous to <code>FluentBundle::new</code> but operating …\nCustom types can implement the <code>FluentType</code> trait in order …\nThe <code>FluentValue</code> enum represents values which can be …\nConvert the custom type into a string value, for instance …\nConverts the <code>FluentValue</code> to a string.\nConvert the custom type into a string value, for instance …\nCreate a clone of the underlying type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>FluentValue</code> to a string.\nChecks to see if two <code>FluentValues</code> match each other by …\nAttempts to parse the string representation of a <code>value</code> …\nWrite out a string version of the <code>FluentValue</code> to <code>W</code>.")