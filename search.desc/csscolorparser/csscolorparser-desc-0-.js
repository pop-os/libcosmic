searchState.loadedDescShard("csscolorparser", 0, "Overview\nThe color\nA CSS color string was invalid color function.\nA CSS color string was invalid hex format.\nA CSS color string was invalid hsl format.\nA CSS color string was invalid hsv format.\nA CSS color string was invalid hwb format.\nA CSS color string was invalid oklab format.\nA CSS color string was invalid oklch format.\nA CSS color string was invalid rgb format.\nA CSS color string was invalid unknown format.\nNamed colors defined in …\nAn error which can be returned when parsing a CSS color …\nAlpha\nBlue\nRestricts R, G, B, A values to the range [0..1].\nReturns the argument unchanged.\nReturns the argument unchanged.\nArguments:\nArguments:\nArguments:\nArguments:\nCreate color from CSS color string.\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nArguments:\nGreen\nBlend this color with the other one, in the HSV …\nBlend this color with the other one, in the linear RGB …\nBlend this color with the other one, in the Oklab …\nBlend this color with the other one, in the RGB …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns name if there is a name for this color.\nArguments:\nParse CSS color string\nRed\nReturns: <code>(r, g, b, a)</code>\nReturns: <code>(r, g, b, a)</code>\nReturns: <code>[r, g, b, a]</code>\nGet CSS RGB hexadecimal color representation\nGet CSS <code>hsl()</code> color representation\nGet CSS <code>hwb()</code> color representation\nGet CSS <code>oklab()</code> color representation\nGet CSS <code>oklch()</code> color representation\nGet CSS <code>rgb()</code> color representation\nGet the RGB hexadecimal color string.\nReturns: <code>[h, s, l, a]</code>\nReturns: <code>[h, s, v, a]</code>\nReturns: <code>[h, w, b, a]</code>\nReturns: <code>[r, g, b, a]</code>\nReturns: <code>[r, g, b, a]</code>\nReturns: <code>[l, a, b, alpha]</code>\nReturns: <code>[l, c, h, alpha]</code>\nGet the CSS <code>rgb()</code> format string.\nReturns: <code>[r, g, b, a]</code>\nReturns: <code>[r, g, b, a]</code>")