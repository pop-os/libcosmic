searchState.loadedDescShard("type_map", 0, "A view into a single entry in a map, which may either be …\nPrepared key-value pair\nA view into an occupied entry in a <code>TypeMap</code>.\nThe typemap container\nA view into a vacant entry in a <code>TypeMap</code>.\nClear the <code>TypeMap</code> of all inserted values.\nProvides the same <code>TypeMap</code> container, but with <code>Send</code> + <code>Sync</code> …\nCheck if container contains value for type\nGet an entry in the <code>TypeMap</code> for in-place manipulation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the value in the entry.\nGet a reference to a value previously inserted on this …\nGets a mutable reference to the value in the entry.\nGet a mutable reference to a value previously inserted on …\nSets the value of the entry, and returns the entry’s old …\nSets the value of the entry with the key of the <code>VacantEntry</code>…\nInsert a value into this <code>TypeMap</code>.\nInsert a prepared <code>KvPair</code> into this <code>TypeMap</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nCreate an empty <code>TypeMap</code>.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nTakes the value out of the entry, and returns it.\nRemove a value from this <code>TypeMap</code>.\nA view into a single entry in a map, which may either be …\nPrepared key-value pair\nA view into an occupied entry in a <code>TypeMap</code>.\nThe typemap container\nA view into a vacant entry in a <code>TypeMap</code>.\nClear the <code>TypeMap</code> of all inserted values.\nCheck if container contains value for type\nGet an entry in the <code>TypeMap</code> for in-place manipulation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the value in the entry.\nGet a reference to a value previously inserted on this …\nGets a mutable reference to the value in the entry.\nGet a mutable reference to a value previously inserted on …\nSets the value of the entry, and returns the entry’s old …\nSets the value of the entry with the key of the <code>VacantEntry</code>…\nInsert a value into this <code>TypeMap</code>.\nInsert a prepared <code>KvPair</code> into this <code>TypeMap</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nCreate an empty <code>TypeMap</code>.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nTakes the value out of the entry, and returns it.\nRemove a value from this <code>TypeMap</code>.")