searchState.loadedDescShard("i18n_embed", 0, "Traits and macros to conveniently embed localization …\nA way to multiplex implementations of <code>I18nAssets</code>.\nA simple default implementation of the Localizer trait.\nA LanguageRequester for the desktop platform, supporting …\nA trait to handle the retrieval of localization assets.\nAn error that occurs in this library.\nA trait used by I18nAssets to load a language file for a …\nA trait used by I18nAssets to ascertain which languages …\nProvide the functionality for overrides and listeners for a\nA language resource file, and its associated <code>language</code>.\nThis trait provides dynamic access to an LanguageLoader …\nAn entity that watches for changes to localization …\nAdd a listener to this <code>LanguageRequester</code>. When the system …\nAdd a weak reference to a Localizer, which listens to …\nAdd a listener to this <code>LanguageRequester</code>. When the system …\nAdd a reference to Localizer, which listens to changes to …\nThe languages reported to be available in the listener …\nThe languages reported to be available in the listener …\nThe available languages that can be selected by this …\nCalculate the languages which are available to be loaded.\nGet the language which is currently loaded for this loader.\nThe languages currently loaded, keyed by the …\nGets a <code>HashMap</code> with what each language is currently set …\nThe domain for the translation that this loader is …\nGet the translation domain from the module path (first …\nThe fallback language for the module this loader is …\nThe data for the file containing the localizations.\nGet an iterator over the file paths of the localization …\nThis module contains the types and functions to interact …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet localization asset files that correspond to the …\nThe source of localization assets used by this localizer\nThe source of assets used by this localizer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe language which this resource is associated with.\nThe language file name to use for this loader’s domain.\nThe computed path to the language files, and data …\nThe LanguageLoader used by this localizer.\nThe LanguageLoader used by this localizer.\nLoad all available languages with …\nLoad the LanguageLoader::fallback_language().\nLoad the languages <code>language_ids</code> using the resources …\nConstruct a new <code>AssetsMultiplexor</code>. <code>assets</code> are specified in …\nCreate a new LanguageRequesterImpl.\nCreate a new DefaultLocalizer.\nCreate a new <code>DesktopLanguageRequester</code>.\nPoll the system’s currently selected language, and call …\nWith the provided <code>requested_languages</code> call …\nWith the provided <code>requested_languages</code> call …\nReload the currently loaded languages.\nThe currently requested languages.\nThe languages being requested by the operating …\nSelect the most suitable available language in order of …\nAutomatically the language currently requested by the …\nOverride the languages fed to the Localizer listeners …\nSet an override for the requested language which is used …\nA method to allow users of this trait to subscribe to …\nA method to allow users of this trait to subscribe to …\nCreate a new DefaultLocalizer.\nLanguageLoader implementation for the <code>fluent</code> localization …\nGet the language which is currently selected for this …\nThe languages associated with each actual currently loaded …\nThe domain for the translation that this loader is …\nThe fallback language for the module this loader is …\nA procedural macro to create a new <code>FluentLanguageLoader</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a localized message referenced by the <code>message_id</code>.\nGet a localized message referenced by the <code>message_id</code>, and …\nA non-generic version of FluentLanguageLoader::get_args().\nA non-generic version of FluentLanguageLoader::get_args() …\nGet a localized attribute referenced by the <code>message_id</code> and …\nGet a localized attribute referenced by the <code>message_id</code> and …\nA non-generic version of …\nA non-generic version of …\navailable in any of the languages currently loaded …\nDetermines if an attribute associated with the specified …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe language file name to use for this loader.\nLoad the languages <code>language_ids</code> using the resources …\nCreate a new <code>FluentLanguageLoader</code>, which loads messages for\nCreate a new loader with a subset of currently loaded …\nSelect the requested <code>languages</code> from the currently loaded …\nSet whether the underlying Fluent logic should insert …\nApply some configuration to each budle in this loader.\nRun the <code>closure</code> with the message that matches the specified\nSearches for a message named <code>message_id</code> in all languages …\nRuns the provided <code>closure</code> with an iterator over the …")