searchState.loadedDescShard("async_signal", 0, "Asynchronous signal handling.\n<code>SIGABRT</code>, aka <code>SIGIOT</code>\n<code>SIGALRM</code>\n<code>SIGBUS</code>\n<code>SIGCHLD</code>\n<code>SIGCONT</code>\n<code>SIGFPE</code>\n<code>SIGHUP</code>\n<code>SIGILL</code>\n<code>SIGINT</code>\n<code>SIGIO</code>, aka <code>SIGPOLL</code>\n<code>SIGKILL</code>\n<code>SIGPIPE</code>\n<code>SIGPROF</code>\n<code>SIGQUIT</code>\n<code>SIGSEGV</code>\nThe signal types that we are able to listen for.\nWait for a specific set of signals.\n<code>SIGSTOP</code>\n<code>SIGSYS</code>, aka <code>SIGUNUSED</code>\n<code>SIGTERM</code>\n<code>SIGTRAP</code>\n<code>SIGTSTP</code>\n<code>SIGTTIN</code>\n<code>SIGTTOU</code>\n<code>SIGURG</code>\n<code>SIGUSR1</code>\n<code>SIGUSR2</code>\n<code>SIGVTALRM</code>\n<code>SIGWINCH</code>\n<code>SIGXCPU</code>\n<code>SIGXFSZ</code>\nAdd signals to the set of signals to wait for.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Signals</code> instance with a set of signals.\nRemove signals from the set of signals to wait for.")