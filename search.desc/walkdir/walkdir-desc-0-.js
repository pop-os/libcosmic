searchState.loadedDescShard("walkdir", 0, "Crate <code>walkdir</code> provides an efficient and cross platform …\nA directory entry.\nUnix-specific extension methods for <code>walkdir::DirEntry</code>\nContains the error value\nAn error produced by recursively walking a directory.\nA recursive directory iterator that skips entries.\nAn iterator for recursively descending into a directory.\nContains the success value\nA result type for walkdir operations.\nA builder to create an iterator for recursively walking a …\nYield a directory’s contents before the directory …\nReturns the depth at which this entry was created relative …\nReturns the depth at which this error occurred relative to …\nReturn the file name of this entry.\nReturn the file type for the file that this entry points …\nYields only entries which satisfy the given predicate and …\nYields only entries which satisfy the given predicate and …\nFollow symbolic links. By default, this is disabled.\nFollow symbolic links if these are the root of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …\nReturns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSimilar to <code>io_error</code> except consumes self to convert to the …\nThe full path that this entry represents.\nInspect the original <code>io::Error</code> if there is one.\nReturns the path at which a cycle was detected.\nSet the maximum depth of entries yield by the iterator.\nSet the maximum number of simultaneously open file …\nReturn the metadata for the file that this entry points to.\nSet the minimum depth of entries yielded by the iterator.\nCreate a builder for a recursive directory iterator …\nAdvances the iterator and returns the next value.\nAdvances the iterator and returns the next value.\nThe full path that this entry represents.\nReturns the path associated with this error if one exists.\nReturns <code>true</code> if and only if this entry was created from a …\nDo not cross file system boundaries.\nSkips the current directory.\nSkips the current directory.\nSet a function for sorting directory entries with a …\nSort directory entries by file name, to ensure a …\nSet a function for sorting directory entries with a key …")