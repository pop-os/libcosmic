searchState.loadedDescShard("cosmic", 13, "Each pixel in this image is 16-bit Luma with alpha\nEach pixel in this image is 8-bit Luma with alpha\nA multi-format image reader.\nResult of an image decoding/encoding process\nEach pixel in this image is 16-bit Rgb\nEach pixel in this image is 32-bit float Rgb\nEach pixel in this image is 8-bit Rgb\nEach pixel in this image is 16-bit Rgb with alpha\nEach pixel in this image is 32-bit float Rgb with alpha\nEach pixel in this image is 8-bit Rgb with alpha\nAn error occurred while interacting with the environment.\nAn Image in JPEG Format\nPixel is 1-bit luminance\nPixel is 16-bit luminance\nPixel is 16-bit luminance\nPixel is 2-bit luminance\nPixel is 4-bit luminance\nPixel is 8-bit luminance\nPixel is 8-bit luminance\nPixel is 1-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 2-bit luminance with an alpha channel\nPixel is 4-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nSet of supported strict limits for a decoder.\nResource limits for decoding.\nCompleting the operation would have required more …\nGrayscale colors.\nGrayscale colors + alpha channel\nContains the success value\nAn Image in OpenEXR Format\nAn error was encountered in input arguments.\nA generalized pixel.\nThe type of pixel.\nThe pixel with an associated <code>ColorType</code>. Not all possible …\nImmutable pixel iterator\nAn Image in PNG Format\nAn Image in general PNM Format\nThe type of each channel in a pixel. For example, this can …\nAn Image in QOI Format\nRGB colors.\nPixel contains 1-bit R, G and B channels\nPixel is 16-bit RGB\nPixel contains 16-bit R, G and B channels\nPixel contains 2-bit R, G and B channels\nPixel is 32-bit float RGB\nPixel is 32-bit float RGB\nAn image buffer for 32-bit float RGB pixels, where the …\nPixel contains 4-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nSendable Rgb image buffer\nRGB colors + alpha channel\nPixel is 1-bit RGB with an alpha channel\nPixel is 16-bit RGBA\nPixel is 16-bit RGB with an alpha channel\nPixel is 2-bit RGB with an alpha channel\nPixel is 32-bit float RGBA\nPixel is 32-bit float RGBA\nAn image buffer for 32-bit float RGBA pixels, where the …\nPixel is 4-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nSendable Rgb + alpha channel image buffer\nA View into another image\nThe scalar type that is used to store each channel in this …\nAn Image in TGA Format\nAn Image in TIFF Format\nPixel is of unknown color type with the specified bits per …\nAn operation can not be completed by the chosen …\nAn Image in WEBP Format\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nApply the function <code>f</code> to each channel except the alpha …\nGet the bytes of this value.\nBlend the color of a given pixel into ourself, taking into …\nPut a pixel at location (x, y), taking into account alpha …\nIterators and other auxiliary structure for the <code>ImageBuffer</code>…\nReturns the components as a slice.\nReturns the channels of this pixel as a 4 tuple. If the …\nReturns the components as a mutable slice\nEncoding and decoding for various image file formats.\nSupplementary color information.\nReturns the color type of the image data produced by this …\nThe width and height of this image.\nReturns a tuple containing the width and height of the …\nContains detailed error representation.\nImage representations for ffi.\nConstruct a pixel from the 4 channels a, b, c and d. If …\nReturns a view into a slice.\nReturns mutable view into a mutable slice.\nReturns the pixel located at (x, y). Indexed from top left.\nGets a reference to the mutable pixel at location <code>(x, y)</code>. …\nGuess image format from memory block\nThis module provides a way to register decoding hooks for …\nRead a tuple containing the (width, height) of the image …\nImage Processing Functions\nConsume the decoder producing a series of frames.\nInvert this pixel\nDeprecated io module the original io module has been …\nA <code>repr(C)</code> description of the layout of buffer samples.\nCreate a new image from a Reader.\nCreate a new image from a byte slice\nCreate a new image from a byte slice\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nApply the function <code>f</code> to each channel except the alpha …\nMathematical helper functions and types.\nThe maximum allowed sum of allocations allocated by the …\nThe maximum allowed image height. This limit is strict. …\nThe maximum allowed image width. This limit is strict. The …\nTypes describing image metadata\nOpen the image located at the path specified. The image’…\nPut a pixel at location (x, y). Indexed from top left.\nReturns all the bytes in the image.\nUse <code>read_image</code> instead; this method is an implementation …\nDecode a rectangular section of the image.\nUnderlying linear container holding sample values.\nSaves the supplied buffer to a file at the path specified.\nSaves the supplied buffer to a file given the path and …\nConvert this pixel to luma\nConvert this pixel to luma with an alpha channel\nConvert this pixel to RGB\nConvert this pixel to RGB with an alpha channel\nWrites the supplied buffer to a writer in the specified …\nWrites all the bytes in an image to the encoder.\nProvides color conversions for whole image buffers.\nEnumerate the pixels of an image.\nEnumerate the pixels of an image.\nEnumerate the rows of an image.\nEnumerate the rows of an image.\nIterate over pixel refs.\nIterate over mutable pixel refs.\nIterate over rows of an image\nIterate over mutable rows of an image\nConverts <code>self</code> to a buffer of type T\nDecoding and Encoding of JPEG Images\nDecoding and Encoding of PNG Images\nPixels per centimeter\nPixels per inch (2.54 cm)\nJPEG decoder\nThe representation of a JPEG encoder\nRepresents the absence of a unit, the values indicate only …\nRepresents the pixel density of an image\nRepresents a unit in which the density of an image is …\nA couple of values for (Xdensity, Ydensity)\nThe unit in which the density is measured\nUses a heuristic to select one of the preceding filters …\nAn <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.\nFilters based on the average of left and right neighbor …\nHigh compression level\nCompression level of a PNG encoder. The default setting is …\nDefault compression level\nFast, minimal compression\nFilter algorithms used to process image data to improve …\nNo processing done, best used for low bit depth grayscale …\nAlgorithm that takes into account the left, upper left, …\nPNG decoder\nPNG encoder\nFilters based on previous pixel in the same scanline\nFilters based on the scanline above\nAn operation expected a concrete color space but another …\nThe required color type can not be handled.\nDealing with an intricate layout is not implemented for an …\nThe colors or transfer function of the CICP are not …\nAn error was encountered while decoding.\nAn error was encountered while decoding an image.\nThe resulting image exceed dimension limits in either …\nThe dimensions passed are wrong.\nAn error was encountered while encoding.\nAn error was encountered while encoding an image.\nContains the error value\nThe format is known exactly.\nRepeated an operation for which error that could not be …\nAn image format is not supported.\nA string describing the parameter. This is discouraged and …\nSome feature specified by string. This is discouraged and …\nThe generic error type for image operations.\nA best effort representation for image formats.\nResult of an image decoding/encoding process\nThe operation would have performed an allocation larger …\nAn error occurred while interacting with the environment.\nCompleting the operation would have required more …\nIndicates the limit that prevented an operation from …\nCompleting the operation would have required more …\nThe format can be identified by a name.\nThe end of the image has been reached.\nContains the success value\nAn error was encountered in input arguments.\nAn error was encountered in inputs arguments.\nDetails how a parameter is malformed.\nA common path extension for the format is known.\nThe cicp is required to be RGB-like but had other matrix …\nConverting <code>ExtendedColorType</code> to <code>ColorType</code> failed.\nThe format is not known or could not be determined.\nAn operation can not be completed by the chosen …\nThe specified strict limits are not supported for this …\nThe implementation for an operation was not provided.\nDetails what feature is not supported.\nThe given limits\nThe supported strict limits\nThe cicp that was expected.\nThe cicp that was found.\nThe color format did not match the channel count.\nThe samples are in column-major form and all samples are …\nDenotes invalid flat sample buffers when trying to convert …\nA flat buffer over a (multi channel) image.\nAll samples are packed.\nDifferent normal forms of buffers.\nThe represented image can not use this representation.\nAt least pixels are packed.\nThe samples are in row-major form and all samples are …\nA ffi compatible description of a sample buffer.\nThe represented image was too large.\nNo pixel aliases another.\nA flat buffer that can be used as an image view.\nA mutable owning version of a flat buffer.\nDeprecated - <code>ChannelCountMismatch</code> is used instead\nAdd this to an index to get to the sample in the next …\nThe number of channels in the color representation of the …\nSupplementary color information.\nThe height of the represented image.\nAdd this to an index to get to the next sample in …\nA <code>repr(C)</code> description of the layout of buffer samples.\nUnderlying linear container holding sample values.\nThe width of the represented image.\nAdd this to an index to get to the next sample in …\nA function to produce an <code>ImageDecoder</code> for a given image …\nA wrapper around a type-erased trait object that …\nReturns whether a decoding hook has been registered for …\nRegister a new decoding hook or returns false if one …\nRegisters a format detection hook.\nA bi-level color map\nCubic Filter\nThe color type on which the map operates on\nA color map\nAvailable Sampling Filters.\nGaussian Filter\nHolds analytical gaussian blur representation\nLanczos with window 3\nNearest Neighbor\nLinear Filter\nPerforms a Gaussian blur on the supplied image.\nPerforms a Gaussian blur on the supplied image.\nBrighten the supplied image. <code>value</code> is the amount to …\nFunctions for altering and converting the color of …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nReturn a mutable view into an image The coordinates set …\nReturn an immutable view into an image The coordinates set …\nReduces the colors of the image using the supplied …\nApproximation of Gaussian blur.\nPerform a 3x3 box filter on the supplied image.\nFlip an image horizontally\nFlip an image horizontally and put the result into the …\nFlip an image horizontally in place.\nFlip an image vertically\nFlip an image vertically and put the result into the …\nFlip an image vertically in place.\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nFill the image with a linear horizontal gradient\nHue rotate the supplied image. <code>value</code> is the degrees to …\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nLinearly sample from an image using coordinates in [0, w-1]…\nSample from an image using coordinates in [0, w-1] and [0, …\nInvert each pixel within the supplied image. This function …\nMaps <code>color</code> to the closest color in the color map.\nOverlay an image at a given coordinate (x, y)\nCalculate the region that can be copied from top to bottom.\nReplace the contents of an image at a given coordinate (x, …\nResize the supplied image to the specified dimensions.\nRotate an image 180 degrees clockwise.\nRotate an image 180 degrees clockwise and put the result …\nRotate an image 180 degrees clockwise in place.\nRotate an image 270 degrees clockwise.\nRotate an image 270 degrees clockwise and put the result …\nRotate an image 90 degrees clockwise.\nRotate an image 90 degrees clockwise and put the result …\nLinearly sample from an image using coordinates in [0, 1].\nSample from an image using coordinates in [0, 1], taking …\nResize the supplied image to the specific dimensions.\nTile an image by repeating it multiple times\nPerforms an unsharpen mask on the supplied image.\nFill the image with a linear vertical gradient\nA bi-level color map\nThe color type on which the map operates on\nA color map\nBrighten the supplied image. <code>value</code> is the amount to …\nBrighten the supplied image in place. <code>value</code> is the amount …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nAdjust the contrast of the supplied image in place. …\nReduces the colors of the image using the supplied …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nHue rotate the supplied image. <code>value</code> is the degrees to …\nHue rotate the supplied image in place.\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nInvert each pixel within the supplied image. This function …\nMaps <code>color</code> to the closest color in the color map.\nDeprecated re-export of <code>LimitSupport</code>\nDeprecated re-export of <code>Limits</code>\nDeprecated re-export of <code>ImageReader</code> as <code>Reader</code>\nThe maximum allowed sum of allocations allocated by the …\nThe maximum allowed image height. This limit is strict. …\nThe maximum allowed image width. This limit is strict. The …\nA Rectangle defined by its top left corner, width and …\nThe rectangle’s height.\nThe rectangle’s width.\nThe x coordinate of the top left corner.\nThe y coordinate of the top left corner.\nRec. ITU-R BT.1361-0 extended colour gamut system …\nRec. ITU-R BT.2020-2 (constant luminance)\nRec. ITU-R BT.2020-2 (non-constant luminance) Rec. ITU-R …\nRec. ITU-R BT.2020-2 (10-bit system) (functionally the …\nRec. ITU-R BT.2020-2 (12-bit system) (functionally the …\nRec. ITU-R BT.2100-2 ICTCp\nARIB STD-B67 Rec. ITU-R BT.2100-2 hybrid log- gamma (HLG) …\nRec. ITU-R BT.470-6 System B, G (historical)\nRec. ITU-R BT.470-6 System B, G (historical) Rec. ITU-R …\nRec. ITU-R BT.470-6 System M (historical) United States …\nSMPTE 170M functionally equivalent to 7\nRec. ITU-R BT.601-7 525 or 625 Rec. ITU-R BT.1358-1 525 or …\nRec. ITU-R BT.709-6 Rec. ITU-R BT.1361-0 conventional …\nRec. ITU-R BT.709-6 Rec. ITU-R BT.1361-0 conventional …\nChromaticity-derived constant luminance system\nChromaticity-derived non-constant luminance system\nReference: https://www.itu.int/rec/T-REC-H.273-202407-I/en …\nDefines the exact color of red, green, blue primary colors.\nRefer to Rec H.273 Table 4.\nThe transfer characteristics, expressing relation between …\nApply to colors of the input color space to get output …\nThe used encoded value range.\nFlip horizontally. Can be performed in-place.\nFlip vertically. Can be performed in-place.\nThe color components are encoded in the full range, e.g., …\nGeneric film (colour filters using Illuminant C)\nThe identity matrix. Typically used for GBR (often …\nIEC 61966-2-4\nCorresponds to value 22 but\nColour representation developed in SMPTE as IPT-PQ-C2.\nLinear transfer characteristics\nLogarithmic transfer characteristic (100:1 range)\nLogarithmic transfer characteristic (100 * Sqrt( 10 ) : 1 …\nThe color components are encoded in a limited range, e.g., …\nDo not perform any transformations.\nDescribes the transformations to be applied to the image. …\nRec. ITU-R BT.2020-2 Rec. ITU-R BT.2100-2\nSMPTE 240M functionally equivalent to 6\nITU-R BT.470-6 System B, G\nITU-R BT.470-6 System M\nRotate by 180 degrees. Can be performed in-place.\nRotate by 270 degrees clockwise. Equivalent to rotating by …\nRotate by 270 degrees clockwise and flip horizontally.\nRotate by 90 degrees clockwise.\nRotate by 90 degrees clockwise and flip horizontally.\nITU-R BT.709-6\nIEC 61966-2-1 sRGB (with MatrixCoefficients equal to 0) …\n(functionally the same as the value 5)\nSMPTE ST 2084 for 10-, 12-, 14- and 16-bit systems Rec. …\nSMPTE ST 2085\nSMPTE ST 240\nSMPTE ST 240\nSMPTE ST 428-1\nSMPTE RP 431-2 (aka. DCI P3)\nSMPTE EG 432-1, DCI P3 variant with the D65 whitepoint …\nExplicitly, the color space is not determined.\nExplicitly, the transfer characteristics are not …\nExplicitly, the matrix coefficients are not determined.\nUnited States Federal Communications Commission (2003) …\nSMPTE ST 428-1\nYCgCo\nYCgCo with added bit-depth (2-bit).\nYCgCo with added bit-depth (1-bit).\nWhether the color components use all bits of the encoded …\nA matrix between linear values and primary color …\nDefines the exact color of red, green, blue primary colors.\nThe electro-optical transfer function (EOTF) that maps …\nA layer of graphical primitives.\nA stack of layers used for drawing.\nFlushes and settles any pending group of primitives in the …\nClears all the layers contents and resets its bounds.\nResizes the <code>Layer</code> to the given bounds.\nCreates a new <code>Layer</code> with the given bounds.\nThe result of counting the attributes of a set of meshes.\nA mesh with a gradient.\nA vertex which contains 2D position &amp; packed gradient data.\nA set of vertices and indices representing a list of …\nA low-level primitive to render a mesh of triangles.\nA renderer capable of drawing a <code>Mesh</code>.\nA mesh with a solid color.\nA two-dimensional vertex with a color.\nReturns the number of total vertices &amp; total indices of …\nThe color of the vertex in <strong>linear</strong> RGBA.\nDraws the given <code>Mesh</code>.\nThe packed vertex data of the gradient.\nThe total amount of gradient vertices.\nThe total amount of gradient meshes.\nThe list of vertex indices that defines the triangles of …\nThe total amount of indices.\nThe vertex position in 2D space.\nThe vertex position in 2D space.\nThe total amount of solid vertices.\nThe total amount of solid meshes.\nThe vertices of the mesh\nThe vertices and indices of the mesh.\nThe vertices and indices of the mesh.\nThe clip bounds of the <code>Mesh</code>.\nThe clip bounds of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nA store of recently used sections of text.\nSome cached text.\nA multi-line text editor.\nAn editor.\nA set of system fonts.\nA bunch of text.\nA paragraph.\nA weak reference to a [<code>cosmic-text::Buffer</code>] that can be …\nSome raw text.\nA text primitive.\nA version number.\nA weak reference to a <code>cosmic_text::Buffer</code>.\nCache text.\nThe clip bounds of the text.\nThe color of the text.\nDraw and edit text.\nReturns the global <code>FontSystem</code>.\nMeasures the dimensions of the given <code>cosmic_text::Buffer</code>.\nDraw paragraphs.\nThe position of the text.\nReturns the attributes of the given <code>Font</code>.\nConverts some <code>Color</code> to a <code>cosmic_text::Color</code>.\nConverts some <code>Shaping</code> strategy to a <code>cosmic_text::Shaping</code> …\nConverts some <code>Wrapping</code> strategy to a <code>cosmic_text::Wrap</code> …\nThe bounds of the text.\nThe clip bounds of the text.\nThe color of the text.\nThe contents of the text.\nThe font of the text.\nThe horizontal alignment of the text.\nThe line height of the text.\nThe shaping strategy of the text.\nThe size of the text in logical pixels.\nThe vertical alignment of the text.\nA store of recently used sections of text.\nA cache entry.\nA cache key representing a section of text.\nThe hash of a <code>Key</code>.\nThe bounds of the text.\nThe buffer of text, ready for drawing.\nThe content of the text.\nThe <code>Font</code> of the text.\nThe line height of the text.\nThe minimum bounds of the text.\nThe shaping strategy of the text.\nThe size of the text.\nAn action to perform on an <code>Editor</code>\nAdvanced text shaping and font fallback.\nWhether to associate cursors placed at a boundary between …\nAlign or justify\nRepresents an angle in degrees or radians.\nText attributes\nList of text attributes to apply to a line\nAn owned version of <code>Attrs</code>\nDelete text behind cursor\nBasic shaping with no font fallback.\nAn iterator over the paragraphs in the input text. It is …\nA value borrowed together with an <code>FontSystem</code>\nA buffer of text that is shaped and laid out\nMove cursor to the end of the document\nA line (or paragraph) of text that is shaped and laid out\nMove cursor to the start of the document\nKey for building a glyph cache\nFlags that change rendering\nMetrics, but implementing Eq and Hash using u32 …\nHelper for caching a value when the value is optionally …\nA set of change items grouped into one logical change\nA unique change to an editor\nMouse click at specified position\nCloses a subpath, connecting the final point to the …\nText color\n32-bit RGBA bitmap.\nPath command.\nUse <code>\\r</code> for line ending (many legacy systems)\nUse <code>\\r\\n</code> for line ending (Windows-style)\nGlyphs in cursive fonts generally use a more informal …\nCurrent cursor location\nA cubic bezier curve from the previous point to the final …\nDelete text in front of cursor\nMouse double click at specified position\nMove cursor down\nMouse drag to specified position\nA trait to allow easy replacements of <code>Editor</code>, like …\nA wrapper of [<code>Buffer</code>] for easy editing\nMove cursor to end of line\nCreate new line\nEscape, clears selection\nThe <code>Fallback</code> trait allows for configurable font fallback …\nA font family.\nAn owned version of <code>Family</code>\nFantasy fonts are primarily decorative or expressive fonts …\nA 4-byte <code>OpenType</code> feature tag identifier\nA font\nFont-specific part of <code>Attrs</code> to be used for matching\nAccess to the system fonts.\nWraps at a glyph level\nMove cursor to specific line\nMove cursor to start of line\nInsert character at cursor\nA form that is generally cursive in nature.\nThe position of a cursor within a [<code>Buffer</code>].\nApply specific <code>LayoutCursor</code>\nA laid out glyph\nA line of laid out glyphs\nA line of visible text for rendering\nAn iterator of visible text lines, see <code>LayoutRun</code>\nMove cursor left\nMove cursor to next word boundary to the left\nA wrapper for letter spacing to get around that f32 doesn…\nUse <code>\\n</code> for line ending (POSIX-style)\nUse <code>\\n\\r</code> for line ending (some legacy systems)\nSelect by lines\nLine ending\nIterator over lines terminated by <code>LineEnding</code>\nA straight line from the previous point to the specified …\n8-bit alpha mask.\nMetrics of text\nThe sole criterion of a monospace font is that all glyphs …\nA motion to perform on a <code>Cursor</code>\nMove the cursor with some motion\nBegins a new subpath at the specified point.\nThe name of a font family of choice.\nMove cursor to next character (<code>Self::Right</code> in LTR, …\nMove cursor to next word boundary\nNo selection\nNo wrapping\nNo line ending\nA face that is neither italic not obliqued.\nNormal selection\nA typically-sloped version of the regular face.\nMove cursor down one page\nMove cursor up one page\nMove cursor to end of paragraph\nMove cursor to start of paragraph\nDescribes the offset and dimensions of a rendered mask.\nA platform-specific font fallback list, for Unix.\nMove cursor to previous character (<code>Self::Left</code> in LTR, …\nMove cursor to previous word boundary\nA quadratic curve from the previous point to the final …\nMove cursor right\nMove cursor to next word boundary to the right\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nScroll position in [<code>Buffer</code>]\nScroll specified number of pixels\nSelection mode\nSerif fonts represent the formal text style for a script.\nA set of buffers containing allocations for shaped text.\nA shaped glyph\nA shaped line (or paragraph)\nA helper structure for caching shape runs.\nKey for caching shape runs.\nA shaped span (for bidirectional processing)\nA shaped word (for word wrapping)\nThe shaping strategy of some text.\nMove cursor to start of line, skipping whitespace\nA face width.\nAllows italic or oblique faces to be selected.\nBinning of subpixel position for cache optimization\n32-bit RGBA subpixel mask.\nCache for rasterizing with the swash scaler\nContent of a scaled glyph image.\nScaled glyph image.\nTwo dimensional transformation matrix.\nMouse triple click at specified position\nMove cursor up\nMove cursor up or down by a number of pixels\nSpecifies the weight of glyphs in the font, their degree …\nSelect by words\nWraps at the word level\nWraps at the word level, or fallback to glyph level if a …\nWrapping mode\nPerform an Action on the editor\nWhether to associate the cursor with the run before it or …\nApply a change\nGet the current automatic indentation setting\nGet the internal <code>BufferRef</code>\nGet the internal <code>BufferRef</code>\nCache key, see <code>CacheKey</code>\n<code>CacheKeyFlags</code>\nOptional color override\nFallbacks to use after any script specific fallbacks\nContent of the image.\nCopy selection\nGet the current cursor\nGet X and Y position of the top left corner of the cursor\nRaw image data.\nDelete text starting at start Cursor and ending at end …\nDelete selection, adjusting cursor and returning true if …\nCursor indicating end of change\nEnd index of cluster in original line\nGet completed change\n<code>CacheKeyFlags</code>\nFont ID\nFont id of the glyph\nFont size in pixels\nFont size of the glyph\n<code>f32</code> bits of font size\nFont weight\nFont weight of the glyph\nFallbacks to never use\nIndex of [<code>LayoutGlyph</code>] in [<code>LayoutLine::glyphs</code>]\nGlyph ID\nFont id of the glyph\nThe array of layout glyphs to draw\nGlyphs in line\nHeight in pixels.\nThe horizontal position of scroll in fractional pixels\nFirst-byte-index of glyph at cursor (will insert behind …\nInsert if true, delete if false\nInsert text at specified cursor with specified <code>attrs_list</code>\nChange items grouped into one change\nIndex of [<code>LayoutLine</code>] in [<code>BufferLine::layout</code>]\nHorizontal offset with respect to the origin specified …\nLetter spacing (tracking) in EM\nLetter spacing (tracking) in EM\nUnicode <code>BiDi</code> embedding level, character is left-to-right …\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]. This will be …\nY offset to next line\nLine height in pixels\nLine height of the glyph, will override buffer setting\nMaximum line height of any spans in line\nThe index of the original text line\nY offset to top of line\nWidth of line\nY offset to baseline of line\n<code>BufferLine</code>s (or paragraphs) of text in the buffer\nMaximum ascent of the glyphs in line\nMaximum descent of the glyphs in line\nMetadata from <code>Attrs</code>\nOffset and size of the image.\nTrue if the original paragraph direction is RTL\nFallbacks to use per script\nGet the current selection position\nEnable or disable automatic indentation\nSet the current cursor\nSet the current selection position\nSet the current tab width. A <code>tab_width</code> of 0 is not …\nShape lines until scroll, after adjusting scroll if the …\nSource of the image.\nCursor indicating start of change\nStart index of cluster in original line\nStart collecting change\nGet the current tab width\nThe original text line\nText to be inserted or deleted\nVertical offset with respect to the origin specified when …\nPixel offset from the start of the [<code>BufferLine</code>]. This will …\nWidth of hitbox\nWidth of the line\nWidth in pixels.\nX offset of hitbox\nInteger component of X offset in line\nBinning of fractional X offset\nX offset in line\nY offset of hitbox\nInteger component of Y offset in line\nBinning of fractional Y offset\nY offset in line\nThe <code>Fallback</code> trait allows for configurable font fallback …\nA platform-specific font fallback list, for Unix.\nFallbacks to use after any script specific fallbacks\nFallbacks to never use\nFallbacks to use per script\nA font’s raw data, typically backed by a Vec.\nGlyphs in cursive fonts generally use a more informal …\nA font database.\nA single font face info.\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font’s path.\nA unique per database face ID.\nA form that is generally cursive in nature.\nA <code>Name</code> language.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nA face that is neither italic not obliqued.\nA typically-sloped version of the regular face.\nA database query.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nA font’s raw data originating from a shared file mapping.\nA font source.\nA face width.\nAllows italic or oblique faces to be selected.\nSpecifies the weight of glyphs in the font, their degree …\nA list of family names.\nA prioritized list of font family names or generic family …\nAn unique ID.\nA face index in the <code>source</code>.\nIndicates that the font face is monospaced.\nA PostScript name.\nA font source.\nA font face stretch.\nSelects a normal, condensed, or expanded face from a font …\nA font face style.\nAllows italic or oblique faces to be selected.\nA font face weight.\nSpecifies the weight of glyphs in the font, their degree …\nText is set vertically from bottom to top.\nA cluster level.\nFlags for buffers.\nDefines the direction in which text is to be read.\nA feature tag with an accompanying range specifying on …\nReference to an in-memory font.\nA buffer that contains the results of the shaping process.\nA glyph info.\nHolds the positions of the glyph in both horizontal and …\nInitial, unset direction.\nA language tag.\nText is set horizontally from left to right.\nType alias for a normalized variation coordinate.\nText is set horizontally from right to left.\nA text script.\nFlags used for serialization with a <code>BufferSerializer</code>.\nA reusable plan for shaping a text buffer.\nA key used for selecting a shape plan.\nA configured shaper.\nBuilder type for constructing a <code>Shaper</code>.\nData required for shaping with a single font.\nAn instance of a variable font.\nAn OpenType tag.\nText is set vertically from top to bottom.\nA buffer that contains an input string ready for shaping.\nA font variation.\nAn index to the start of the grapheme cluster in the …\nA selected glyph.\nPredefined scripts.\nHow much the line advances after drawing this glyph when …\nHow much the glyph moves on the X-axis before drawing it, …\nHow much the line advances after drawing this glyph when …\nHow much the glyph moves on the Y-axis before drawing it, …\nAxis of variation in a variable font.\nCollection of axes in a variable font.\nGlyph names are sourced from the <code>CFF</code> table.\nReference to an in-memory font.\nA 32-bit glyph identifier.\nA 16-bit glyph identifier.\nThe name of a glyph.\nSpecifies the chosen source for glyph names.\nMapping from glyph identifiers to names.\nInterface for types that can provide font metadata.\nNamed instance of a variation.\nCollection of named instances in a variable font.\nA scalable glyph outline.\nCollection of scalable glyph outlines.\nGlyph names are sourced from the <code>post</code> table.\nGlyph names are synthesized in the format <code>gidDDD</code> where <code>DDD</code> …\nAn OpenType tag.\nPrimary attributes typically used for font classification …\nReturns the primary attributes for font classification– …\nReturns the collection of variation axes.\nBitmap strikes and glyphs.\nReturns a collection of bitmap strikes.\nMapping of characters (codepoints, not graphemes) to …\nReturns the character to nominal glyph identifier mapping.\nDrawing color glyphs.\nBasic representation of an in-memory font resource.\nReturns the glyph specific metrics for the specified size …\nReturns the mapping from glyph identifiers to names.\nHelpers for selecting a font size and location in …\nReturns an iterator over the collection of localized …\nGlobal font and glyph specific metrics.\nReturns the global font metrics for the specified size and …\nReturns the collection of named variation instances.\nLoading, scaling and hinting of glyph outlines.\nReturns the collection of scalable glyph outlines.\nUseful collection of common types suitable for glob …\nDefinitions for specifying variations and typographic …\nLocalized strings describing font names and other metadata.\nStretch, style and weight attributes of a font.\nGenerally a slanted style, originally based on …\nAn upright or “roman” style.\nOblique (or slanted) style with an optional angle in …\nVisual width of a font– a relative change from the …\nVisual style or ‘slope’ of a font.\nVisual weight class of a font, typically on a scale from …\nUncompressed 32-bit color bitmap data, pre-multiplied in …\nData content of a bitmap.\nThe format (or table) containing the data backing a set of …\nAn embedded bitmap glyph.\nSet of embedded bitmap glyphs of a specific size.\nSet of strikes, each containing embedded bitmaps of a …\nThe origin is in the bottom-left.\nData representing a single channel alpha mask.\nA single channel alpha mask.\nThe origin point for drawing a bitmap glyph.\nCompressed PNG bitmap data.\nThe origin is in the top-left.\nThe horizontal advance width of the bitmap glyph in …\nOuter glyph bearings in the x direction, given in font …\nOuter glyph bearings in the y direction, given in font …\nNumber of bits-per-pixel. Always 1, 2, 4 or 8.\nThe underlying data of the bitmap glyph.\nRaw bitmap data.\nThe number of rows in the bitmap.\nInner glyph bearings in the x direction, given in pixels. …\nInner glyph bearings in the y direction, given in pixels. …\nTrue if each row of the data is bit-aligned. Otherwise, …\nThe placement origin of the bitmap.\nThe assumed pixels-per-em in the x direction.\nThe assumed pixels-per-em in the y direction.\nThe number of columns in the bitmap.\nMapping of characters to nominal glyph identifiers.\nResult of mapping a codepoint with a variation selector.\nCacheable indices of selected mapping tables for …\nIterator over all mappings of character to nominal glyph …\nThe variation selector should be ignored and the default …\nThe variant glyph mapped by a codepoint and associated …\nIterator over all mappings of character and variation …\nA fill type of a COLRv1 glyph (solid fill or various …\nA representation of a color glyph that can be painted …\nCollection of color glyphs.\nDistinguishes available color glyph formats.\nA group of required painting callbacks to be provided by …\nA color stop of a gradient.\nCompositeMode enumeration\nExtend enumeration\nA linear gradient, normalized from the P0, P1 and P2 …\nThe specified COLRv1 glyph has been successfully painted …\nSignals success of request to draw a COLRv1 sub glyph from …\nAn error during drawing a COLR glyph.\nA radial gradient, with color stops normalized to the …\nA solid fill with the color specified by <code>palette_index</code>. …\nA sweep gradient, also called conical gradient. The color …\nA transformation matrix to be applied to the drawing …\nThe client does not implement drawing COLRv1 glyphs from …\nAdditional alpha value, to be multiplied with the color …\nFill the current clip area with the specified gradient …\nSpecifies a color from the <code>CPAL</code> table.\nRestore the clip state to the state before a previous …\nRestore the transformation matrix to the state before the …\nApply a clip rectangle specified by <code>clip_rect</code>.\nApply a clip path in the shape of glyph specified by …\nOpen a new layer, and merge the layer down using …\nPush the specified transform by concatenating it to the …\nReference to an in-memory font.\nOrdered sequence of normalized variation coordinates.\nReference to an ordered sequence of normalized variation …\nType for a normalized variation coordinate.\nFont size in pixels per em units.\nType for a bounding box with single precision floating …\nMetrics for a text decoration.\nGlyph specific metrics.\nMetrics that apply to all glyphs in a font.\nDistance from the baseline to the top of the alignment box.\nAverage width of all non-zero width characters in the font.\nUnion of minimum and maximum extents for all glyphs in the …\nDistance from the baseline to the top of a typical English …\nDistance from the baseline to the bottom of the alignment …\nNumber of glyphs in the font.\nTrue if the font is not proportionally spaced.\nItalic angle in counter-clockwise degrees from the …\nRecommended additional spacing between lines.\nMaximum advance width of all characters in the font.\nOffset to the top of the decoration from the baseline.\nMetrics for a strikeout decoration.\nThickness of the decoration.\nMetrics for an underline decoration.\nNumber of font design units per em unit.\nDistance from the baseline to the top of the lowercase “x…\nMaximum extent in the x direction– the right side of a …\nMinimum extent in the x direction– the left side of a …\nMaximum extend in the y direction. In a Y-up coordinate …\nMinimum extent in the y direction. In a Y-up coordinate …\nInformation and adjusted metrics generated while drawing …\nThe automatic hinter that performs just-in-time adjustment …\nSelects the engine based on the same rules that FreeType …\nPostScript outlines sourced from the <code>CFF</code> table.\nPostScript outlines sourced from the <code>CFF2</code> table.\nErrors that may occur when drawing glyphs.\nOptions that define how a glyph is drawn to a pen.\nApplication of hints that are embedded in the font.\nSpecifies the backend to use when applying hints.\nTrueType outlines sourced from the <code>glyf</code> table.\nThe requested glyph was not present in the font.\nSet of derived glyph styles that are used for automatic …\nHarfBuzz style drawing with hints is not supported\nSpecifies the hinting strategy for memory size …\nError occurred during hinting.\nHinting instance that uses information embedded in the …\nConfiguration settings for a hinting instance.\nExceeded memory limits when loading a glyph.\nThe TrueType or PostScript interpreter.\nAn anchor point had invalid indices.\nHinting that is optimized for subpixel rendering with …\nHinting with a lighter touch, typically meaning less …\nStrong hinting style that should only be used for aliased, …\nNo viable sources were available.\nHinting is disabled.\nThe standard smooth hinting mode.\nA scalable glyph outline.\nCollection of scalable glyph outlines.\nSource format for an outline glyph.\nInterface for accepting a sequence of path commands.\nError occurred while loading a PostScript (CFF/CFF2) glyph.\nError occurred when reading font data.\nExceeded a recursion limit when loading a glyph.\nHinting style that is suitable for anti-aliased …\nMode selector for a smooth hinting target.\nDefines the target settings for hinting.\nConversion from outline to path failed.\nGlyph outline contains too many points.\nHinting that is optimized for subpixel rendering with …\nIf present, an adjusted advance width value generated by …\nEmit a command to close the current subpath.\nEmit a cubic bezier segment from the current point with …\nSpecifies the hinting engine to use.\nError types associated with outlines.\nTrue if the underlying glyph contains flags indicating the …\nEmit a line segment from the current point to (x, y).\nIf present, an adjusted left side bearing value generated …\nEmit a command to begin a new subpath at (x, y).\nTypes for collecting the output when drawing a glyph …\nEmit a quadratic bezier segment from the current point …\nDefines the properties of the intended target of a hinted …\nThe basic mode for smooth hinting.\nIf true, prevents adjustment of the outline in the …\nIf true, TrueType bytecode may assume that the resulting …\nErrors that are specific to PostScript processing.\nContour end point at this index was less than its …\nErrors that may occur when drawing glyphs.\nExpected a cubic off-curve point at this index.\nExpected a quadratic off-curve point at this index.\nExpected a quadratic off-curve or on-curve point at this …\nThe requested glyph was not present in the font.\nHarfBuzz style drawing with hints is not supported\nHinting error with additional context.\nError occurred during hinting.\nExceeded memory limits when loading a glyph.\nAn anchor point had invalid indices.\nNo viable sources were available.\nExpected number of points to == number of flags\nError occurred while loading a PostScript (CFF/CFF2) glyph.\nError occurred when reading font data.\nAn error that occurs when reading font data\nExceeded a recursion limit when loading a glyph.\nConversion from outline to path failed.\nErrors that can occur when converting an outline to a path.\nGlyph outline contains too many points.\nClose the current subpath.\nPen that generates the control bounds of a glyph outline.\nDraw a cubic bezier from the current point with control …\nIf the first point is off-curve, check if the last is …\nIf the first point is off-curve, check if the second is …\nDraw a line from the current point to (x, y).\nBegin a new subpath at (x, y).\nPen that drops all drawing output into the ether.\nInterface for accepting a sequence of path commands.\nSingle element of a path.\nStyle for path conversion.\nDraw a quadratic bezier from the current point with a …\nPen that generates SVG style path data.\nEmit a command to close the current subpath.\nEmit a cubic bezier segment from the current point with …\nEmit a line segment from the current point to (x, y).\nEmit a command to begin a new subpath at (x, y).\nEmit a quadratic bezier segment from the current point …\nReference to an in-memory font.\nA 32-bit glyph identifier.\nReference to an ordered sequence of normalized variation …\nInterface for types that can provide font metadata.\nType for a normalized variation coordinate.\nFont size in pixels per em units.\nAn OpenType tag.\nReturns the primary attributes for font classification– …\nReturns the collection of variation axes.\nReturns a collection of bitmap strikes.\nReturns the character to nominal glyph identifier mapping.\nReturns the glyph specific metrics for the specified size …\nReturns the mapping from glyph identifiers to names.\nReturns an iterator over the collection of localized …\nReturns the global font metrics for the specified size and …\nReturns the collection of named variation instances.\nReturns the collection of scalable glyph outlines.\nAn array of nullable offsets that can be resolved on …\nAn array of offsets that can be resolved on access.\nA collection of fonts.\nReference to the content of a font collection file.\nA type that can compute its size at runtime, based on some …\nReference to the content of a font or font collection file.\nA single font.\nA reference to raw binary font data.\nA type that can be read from raw table data.\nA trait for types that require external data in order to …\nReference to an in-memory font.\nReturn the minimum range of the table bytes\nAny offset type.\nA trait for a type that needs additional arguments to be …\nAn error that occurs when reading font data\nA helper trait providing a ‘resolve’ method for …\nA helper trait providing a ‘resolve’ method for offset …\nThe type of the first (length) field of the item.\nThe table’s tag.\nTTC Header\nThe OpenType Table Directory\nAn interface for accessing tables from a font (or …\nRecord for a table in a font.\nTyped access to raw table data.\nA table that has an associated tag.\nA trait for types that have variable length.\nCustom array types\nChecksum for the table.\nData structures useful for font work.\nCompute the number of bytes required to represent this …\nLength of the table.\nOffset from the beginning of the font data.\nRead an instance of <code>Self</code> from the provided data, …\nread an item, using the provided args.\nThe various font tables\nTable identifier.\nAn array whose items size is not known at compile time.\nAn array of items of non-uniform length.\nA fast &amp; efficient invertible ordered set for small (up to …\nA set of disjoint ranges over numeric types.\nA fast, efficient, sparse, &amp; ordered <code>u32</code> set.\nA fast, efficient, sparse, &amp; ordered unsigned integer …\nDefines the domain of <code>IntSet</code> member types.\nMarks a mapped value as being in the domain of <code>T</code> for <code>Domain</code>…\nA fast &amp; efficient invertible ordered set for small (up to …\nA fast, efficient, sparse, &amp; ordered <code>u32</code> set.\nReturns <code>true</code> if the value is part of this domain.\nReturns the number of members in the domain.\nConverts a mapped u32 value back to T.\nReturns true if all u32 values between the mapped u32 min …\nReturns an iterator which iterates over all values in the …\nReturn an iterator which iterates over all values of T in …\nProvides serialization of <code>IntSet</code>’s to a highly compact …\nConverts this value of <code>T</code> to a value in u32.\nEncode this set as a sparse bit set byte encoding with a …\nApple Advanced Typography common tables.\nThe anchor point table.\nThe Axis Variations table\nThe BASE table\nCommon bitmap (EBLC/EBDT/CBLC/CBDT) types.\nThe CBDT (Color Bitmap Data) table\nThe CBLC (Color Bitmap Location) table\nThe CFF table\nThe CFF2 table\nThe cmap table\nThe COLR table\nComputes the table checksum for the given data.\nThe CPAL table\nThe cvar (CVT Variations) table.\nThe DSIG table\nThe EBDT (Embedded Bitmap Data) table\nThe EBLC (Embedded Bitmap Location) table\nThe feature name table.\nThe Font Variations table\nThe gasp table\nthe GDEF table\nThe glyf (Glyph Data) table\nthe GPOS table\nthe GSUB table\nThe gvar (Glyph Variations) table\nThe Horizontal Device Metrics table.\nThe head table\nthe hhea (Horizontal Header) table\nThe hmtx (Horizontal Metrics) table\nThe HVAR (Horizontal Metrics Variation) table\nThe kerning table.\nThe Extended Kerning (kerx) table.\nOpenType Layout common table formats\nThe loca (Index to Location) table\nThe language tag table.\nThe maxp table\nThe meta (Metadata) table\nThe morx (Extended Glyph Metamorphosis) table.\nThe MVAR (Metrics Variation) table\nThe name (Naming) table\nThe os2 table\nthe post (PostScript) table\nPostScript (CFF and CFF2) common tables.\nThe sbix (Standard Bitmap Graphics) table\nThe STAT table\nThe SVG table\nThe tracking (trak) table.\nthe VARC (Variable Composite/Component) table\nOpenType font variations common tables.\nthe vhea (Horizontal Header) table\nThe vmtx (Vertical Metrics) table\nThe VORG (Vertical Origin) table.\nThe VVAR (Vertical Metrics Variation) table\nMaps the glyph indexes of your font into classes.\nLookup tables provide a way of looking up information …\nSimple array format. The lookup data is an array of lookup …\nTrimmed array format. The lookup data is a simple trimmed …\nSegment single format. Each non-overlapping segment has a …\nSegment array format. A segment mapping is performed (as …\nSingle table format. The lookup data is a sorted list of &lt;…\nTrimmed array format. The lookup data is a simple trimmed …\nLookup segment for format 2.\nLookup segment for format 4.\nLookup single record for format 6.\nTrait for values that can be read from lookup tables.\nEmpty data type for a state table entry with no payload.\nUsed for the <code>state_array</code> and <code>entry_table</code> fields in …\nUsed for the <code>state_array</code> in <code>StxHeader</code>.\nEntry in an (extended) state table.\nHeader for a state table.\nTable for driving a finite state machine for layout.\nHeader for an extended state table.\nPredefined classes.\nFirst glyph index in this segment.\nFirst glyph index in this segment.\nFlag values are table specific.\nThe glyph index.\nLast glyph index in this segment.\nLast glyph index in this segment.\nIndex of the next state.\nPayload is table specific.\nThe lookup value.\nThe lookup value.\nA 16-bit offset from the start of the table to the data.\nIndividual anchor point.\nThe anchor point table.\nThe avar (Axis Variations) table\nAxisValueMap record\nSegmentMaps record\nThe array of axis value map records for this axis.\nA normalized coordinate value obtained using default …\nThe number of correspondence pairs for this axis.\nThe modified, normalized coordinate value.\nAxis Table\nThe BASE (Baseline) table\nBaseCoordFormat1\nBaseCoordFormat2\nBaseCoordFormat3\nBaseLangSysRecord\nBaseScript Table\nBaseScriptList Table\nBaseScriptRecord\nBaseTagList Table\nBaseValues table\nFeatMinMaxRecord\nMinMax table\n4-byte language system identification tag\nOffset to BaseScript table, from beginning of …\n4-byte script identification tag\n4-byte feature identification tag — must match feature …\nOffset to BaseCoord table that defines the maximum extent …\nOffset to BaseCoord table that defines the minimum extent …\nOffset to MinMax table, from beginning of BaseScript table\nEbdtComponent record.\nBigGlyphMetrics record.\nThe full bitmap is tightly packed according to the bit …\nBitmap flags.\nBitmapSize record.\nEach row of the data is aligned to a byte boundary.\nGlyphIdOffsetPair record.\nIndexSubtables format type.\nIndexSubTable1: variable-metrics glyphs with 4-byte …\nIndexSubTable2: all glyphs have identical metrics.\nIndexSubTable3: variable-metrics glyphs with 2-byte …\nIndexSubTable4: variable-metrics glyphs with sparse glyph …\nIndexSubTable5: constant-metrics glyphs with sparse glyph …\nIndexSubtableList table.\nSbitLineMetrics record.\nSmallGlyphMetrics record.\nHorizontal or vertical advance width in pixels.\nDistance in pixels from the horizontal origin to the left …\nDistance in pixels from the horizontal origin to the top …\nThe Microsoft rasterizer v.1.7 or greater supports the …\nBit depth from the associated size. Required for computing …\nNot used; set to 0.\nOffset in bytes from the start of the EBDT/CBDT table.\nSize of the image data in bytes.\nHighest glyph index for this size.\nFirst glyph ID of this range.\nVertical or horizontal.\nFormat of EBDT/CBDT image data.\nGlyph ID of glyph present.\nComponent glyph ID.\nNumber of rows of data.\nNumber of rows of data.\nLine metrics for text rendered horizontally.\nHorizontal advance width in pixels.\nDistance in pixels from the horizontal origin to the left …\nDistance in pixels from the horizontal origin to the top …\nOffset to IndexSubtableList, from beginning of EBLC/CBLC.\nTotal size in bytes of the IndexSubtableList including its …\nOffset to an IndexSubtable from the start of the …\nLast glyph ID of this range (inclusive).\nFull metrics, if present in the EBLC/CBLC table.\nNumber of IndexSubtables in the IndexSubtableList.\nHorizontal pixels per em.\nVertical pixels per em.\nLocation in EBDT.\nLowest glyph index for this size.\nLine metrics for text rendered vertically.\nVertical advance width in pixels.\nDistance in pixels from the vertical origin to the left …\nDistance in pixels from the vertical origin to the top …\nNumber of columns of data.\nNumber of columns of data.\nPosition of component left.\nPosition of component top.\nThe Color Bitmap Data table\nThe Color Bitmap Location table\nThe Compact Font Format table.\nCompact Font Format table header\nThe Compact Font Format (CFF) version 2 table\nCompact Font Format (CFF) version 2 table header\ncmap\ncmap Format 0: Byte encoding table\ncmap Format 10: Tr\ncmap Format 12: Segmented coverage\nIterator over all (codepoint, glyph identifier) pairs in …\ncmap Format 13: Many-to-one range mappings\nIterator over all (codepoint, glyph identifier) pairs in …\ncmap Format 14: Unicode Variation Sequences\nIterator over all (codepoint, selector, mapping variant) …\ncmap Format 2: High-byte mapping through table\ncmap Format 4: Segment mapping to delta values\nIterator over all (codepoint, glyph identifier) pairs in …\ncmap Format 6: Trimmed table mapping\ncmap Format 8: mixed 16-bit and 32-bit coverage\nCharacter and glyph limits for iterating format 12 and 13 …\nThe different cmap subtable formats.\nPart of Cmap13\nDefault UVS table\nEncoding Record\nResult of mapping a codepoint with a variation selector.\nNon-Default UVS table\n…\nUsed in Cmap8 and Cmap12\nPart of Cmap2\nPart of Cmap14\nThe variation selector should be ignored and the default …\nPart of Cmap14\nThe variant glyph mapped by a codepoint and associated …\nPart of Cmap14\nNumber of additional values in this range\nOffset from the start of the <code>Cmap14</code> subtable to Default UVS\nPlatform-specific encoding ID.\nLast character code in this group; same condition as listed\nLast character code in this group\nNumber of valid low bytes for this SubHeader.\nFirst valid low byte for this SubHeader.\nThe number of glyphs in the font.\nGlyph index to be used for all the characters in the …\nGlyph ID of the UVS\nSee text below.\nSee text below.\nThe maximum valid character.\nOffset from the start of the <code>Cmap14</code> subtable to Non-Default\nPlatform ID.\nFirst character code in this group; note that if this …\nFirst character code in this group\nGlyph index corresponding to the starting character code\nFirst value in this range\nByte offset from beginning of the <code>Cmap</code> table to the …\nBase Unicode value of the UVS\nVariation selector\nAffine2x3 record\nBaseGlyph record\nBaseGlyphList table\nBaseGlyphPaint record\nClip record\nClipBox table\nClipBoxFormat1 record\nClipBoxFormat2 record\nClipList table\nColorIndex record\nColorLine table\nColorStop record\nCOLR (Color) table\nCompositeMode enumeration\nExtend enumeration\nLayer record\nLayerList table\nPaint tables\nPaintColrGlyph table\nPaintColrLayers table\nPaintComposite table\nPaintGlyph table\nUnique paint identifier used for detecting cycles in the …\nPaintLinearGradient table\nPaintRadialGradient table\nPaintRotate table\nPaintRotateAroundCenter table\nPaintScale table\nPaintScaleAroundCenter table\nPaintScaleUniform table\nPaintScaleUniformAroundCenter table\nPaintSkew table\nPaintSkewAroundCenter table\nPaintSolid table\nPaintSweepGradient table\nPaintTransform table\nPaintTranslate table\nPaintVarLinearGradient table\nPaintVarRadialGradient table\nPaintVarRotate table\nPaintVarRotateAroundCenter table\nPaintVarScale table\nPaintVarScaleAroundCenter table\nPaintVarScaleUniform table\nPaintVarScaleUniformAroundCenter table\nPaintVarSkew table\nPaintVarSkewAroundCenter table\nPaintVarSolid table\nPaintVarSweepGradient table\nPaintVarTransform table\nPaintVarTranslate table\nVarAffine2x3 record\nVarColorIndex record\nVarColorLine table\nVarColorStop record\nAlpha value.\nAlpha value. For variation, use varIndexBase + 0.\nAlpha value.\nAlpha value. For variation, use varIndexBase + 1.\nOffset to a ClipBox table, from the beginning of the …\nLast glyph ID in the range.\nIndex (base 0) into the layerRecords array.\nGlyph ID of the base glyph.\nGlyph ID of the glyph used for a given layer.\nGlyph ID of the base glyph.\nNumber of color layers associated with this glyph.\nOffset to a Paint table, from the beginning of the …\nIndex (base 0) for a palette entry in the CPAL table.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nIndex for a CPAL palette entry.\nFirst glyph ID in the range.\nPosition on a color line.\nPosition on a color line. For variation, use varIndexBase …\nBase index into DeltaSetIndexMap.\nBase index into DeltaSetIndexMap.\nCPAL (Color Record) record\nCPAL (Color Palette Table) table\nThe PaletteType flags.\nAlpha value (B3).\nBlue value (B0).\nGreen value (B1).\nRed value (B2).\nThe cvar table.\nDelta for an entry in the control value table.\nVariation data specialized for the CVT variation table.\nThe index in the CVT.\nThe delta to apply to the value in the CVT.\nDSIG (Digital Signature Table) table\nPermission flags\nSignature Block Format 1\nSignature Record\nFormat of the signature\nLength of signature in bytes\nOffset to the signature block from the beginning of the …\nThe Embedded Bitmap Data table\nThe Embedded Bitmap Location table\nThe feature name table.\nType, flags and names for a feature.\nAssociates a setting with a name identifier.\nFeature type.\nFlags associated with the feature type.\nThe number of records in the setting name array.\nThe name table index for the feature’s name.\nThe name table index for the setting’s name.\nThe setting.\nOffset in bytes from the beginning of this table to this …\nShim table to handle combined axis and instance arrays.\nThe fvar (Font Variations) table\nThe InstanceRecord\nThe VariationAxisRecord\nThe name ID for entries in the ‘name’ table that …\nTag identifying the design variation for the axis.\nThe coordinates array for this instance.\nThe default coordinate value for the axis.\nAxis qualifiers — see details below.\nReserved for future use — set to 0.\nThe maximum coordinate value for the axis.\nThe minimum coordinate value for the axis.\nOptional. The name ID for entries in the ‘name’ table …\nThe name ID for entries in the ‘name’ table that …\ngasp\nFlags describing desired rasterizer behavior.\nUpper limit of range, in PPEM\nAttachment Point List Table\nPart of AttachList\nCaret Value Tables\nCaretValue Format 1\nCaretValue Format 2\nCaretValue Format 3\nA Class Definition Table\nCoverage Table\nDevice Table\nEither a Device table (in a non-variable font) or a …\nFeature List Table\nFeatureVariations Table\nGDEF 1.0\nUsed in the Glyph Class Definition Table\nLigature Caret List Table\nLigature Glyph Table\nLookup Table\nLookup List Table\nMark Glyph Sets Table\nScript List Table\nAnchor position for a composite component.\nA reference to another glyph. Part of CompositeGlyph.\nCompositeGlyph\nFlags used in CompositeGlyph\nPoint with an associated on-curve flag in a simple glyph.\nThe glyf (Glyph Data) table\nSimple or composite glyph.\nTrait for types that are usable for TrueType point …\nFlags describing the properties of a point.\nMarker bits for point flags that are set during variation …\nThe Glyph Header\nFlags used in SimpleGlyph\nTransform for a composite component.\nAnchor for component placement.\nTrueType hinting bytecode.\nComponent flags.\nGlyph identifier.\nTrue if this is an on-curve point.\nComponent transformation matrix.\nX coordinate.\nX scale factor.\nXY skew factor.\nY coordinate.\nYX skew factor.\nY scale factor.\nAn error returned by <code>Decoder::decode</code> if the end of the …\nDecodes instructions from TrueType bytecode.\nSequence of instruction operands that are encoded directly …\nDecoded TrueType instruction.\nOperation code for a TrueType instruction.\nThe bytecode for the program.\nReturns an iterator that yields all instructions in the …\nInstruction operands that were decoded from the bytecode.\nOperation code.\nThe “program counter” or current offset into the …\nProgram counter – offset into the bytecode where this …\nAnchor Table Format 1: Design Units\nAnchor Table Format 2: Design Units Plus Contour Point\nAnchor Table Format 3: Design Units Plus Device or …\nAnchor Tables position one glyph with respect to another.\nPart of MarkBasePosFormat1\nPart of BaseArray\nPart of PairPosFormat2\nPart of PairPosFormat2\nA Class Definition Table\nPart of MarkLigPosFormat1\nCoverage Table\nCursive Attachment Positioning Format 1: Cursvie attachment\nDevice Table\nEither a Device table (in a non-variable font) or a …\nPart of CursivePosFormat1\nExtension Positioning Subtable Format 1\nA GPOS Extension Positioning subtable\nFeature List Table\nFeatureVariations Table\nClass Definition Table Format 1 GPOS Version 1.0\nPart of MarkLigPosFormat1\nPart of MarkLigPosFormat1\nLookup Table\nPart of MarkMarkPosFormat1Class2Record\nPart of MarkMarkPosFormat1\nMark Array Table\nMark-to-Base Attachment Positioning Format 1: Mark-to-base …\nMark-to-Ligature Positioning Format 1: Mark-to-Ligature …\nMark-to-Mark Attachment Positioning Format 1: Mark-to-Mark …\nPart of MarkArray\nLookup Type 1: Single Adjustment Positioning Subtable\nPair Adjustment Positioning Format 1: Adjustments for …\nPair Adjustment Positioning Format 2: Class Pair Adjustment\nPart of PairPosFormat1\nPart of PairSet\nA GPOS ChainedSequenceContext\nA GPOS Lookup subtable.\nA typed GPOS LookupList table\nA GPOS SequenceContext\nThe subtables from a GPOS lookup.\nScript List Table\nLookup Type 1: Single Adjustment Positioning Subtable\nSingle Adjustment Positioning Format 1: Single Positioning …\nSingle Adjustment Positioning Format 2: Array of …\nA fully resolved <code>ValueRecord</code>.\nA context for resolving <code>Value</code>s and <code>ValueRecord</code>s.\nSee ValueRecord\nA Positioning ValueRecord.\nArray of offsets (one per mark class) to Anchor tables. …\nArray of Class2 records, ordered by classes in classDef2.\nOffset to entryAnchor table, from beginning of CursivePos …\nOffset to exitAnchor table, from beginning of CursivePos …\nArray of offsets (one per class) to Anchor tables. Offsets …\nArray of offsets (one per class) to Anchor tables. Offsets …\nOffset to Anchor table, from beginning of MarkArray table.\nClass defined for the associated mark.\nGlyph ID of second glyph in the pair (first glyph is …\nPositioning data for the first glyph in the pair.\nPositioning for first glyph — empty if valueFormat1 = 0.\nPositioning data for the second glyph in the pair.\nPositioning for second glyph — empty if valueFormat2 = 0.\nPart of AlternateSubstFormat1\nAlternate Substitution Format 1\nA Class Definition Table\nCoverage Table\nDevice Table\nExtension Substitution Subtable Format 1\nA GSUB Extension Substitution subtable\nFeature List Table\nFeatureVariations Table\nGSUB\nPart of LigatureSubstFormat1\nPart of LigatureSubstFormat1\nLigature Substitution Format 1\nLookup Table\nLookup List Table\nMultiple Substitution Format 1\nReverse Chaining Contextual Single Substitution Format 1\nScript List Table\nPart of MultipleSubstFormat1\nLookupType 1: Single Substitution Subtable\nSingle Substitution Format 1\nSingle Substitution Format 2\nA GSUB ChainedSequenceContext\nA GSUB Lookup subtable.\nA typed GSUB LookupList table\nA GSUB SequenceContext\nThe subtables from a GPOS lookup.\nDelta information for a single point or component in a …\nVariation data specialized for the glyph variations table.\nThe GlyphVariationData table\nThe ‘gvar’ header\nArray of tuple records shared across all glyph variation …\nThe point or component index.\nThe x delta.\nThe y delta.\nThe Horizontal Device Metrics table.\nMaximum width.\nPixel size for following widths (as ppem).\nArray of glyphs (numGlyphs is from the ‘maxp’ table).\nThe <code>flags</code> field for the head table.\nThe head (font header) table.\nThe <code>macStyle</code> field for the head table.\nhhea Horizontal Header Table\nThe hmtx (Horizontal Metrics) table\nAdvance width/height, in font design units.\nGlyph leading (left/top) side bearing, in font design …\nThe HVAR (Horizontal Metrics Variations) table\nThe Apple Advanced Typography kerning table.\nA subtable in an AAT <code>kern</code> table.\nThe kerning table.\nThe OpenType kerning table.\nA subtable in an OT <code>kern</code> table.\nA subtable in the <code>kern</code> table.\nThe type 0 <code>kern</code> subtable.\nThe type 0 <code>kerx</code> subtable kerning record.\nThe type 2 <code>kern</code> subtable.\nClass table for the type 2 <code>kern</code> subtable.\nThe type 3 ‘kern’ subtable.\nThe various <code>kern</code> subtable formats.\nOffset to kerning value array.\nSize of the header of the containing subtable.\nThe glyph index for the lefthand glyph in the kerning pair.\nLeft-hand offset table.\nThe glyph index for the righthand glyph in the kerning …\nRight-hand offset table.\nKerning value.\nSequence of indices into the <code>ankr</code> table.\nSequence of coordinate values.\nSequence of glyph outline point indices.\nThe kerx (Extended Kerning) table.\nA subtable in a <code>kerx</code> table.\nThe type 0 <code>kerx</code> subtable.\nThe type 0 <code>kerx</code> subtable kerning record.\nThe type 1 <code>kerx</code> subtable.\nThe type 2 <code>kerx</code> subtable.\nThe type 4 <code>kerx</code> subtable.\nActions for the type 4 <code>kerx</code> subtable.\nThe type 6 <code>kerx</code> subtable.\nThe various <code>kerx</code> subtable formats.\nKerning values.\nFlags for control point positioning.\nThe glyph index for the lefthand glyph in the kerning pair.\nLeft-hand offset table.\nThe glyph index for the righthand glyph in the kerning …\nRight-hand offset table.\nKerning value.\nContains the set of kerning values, one for each state.\nPart of ChainedSequenceContextFormat2\nPart of ChainedSequenceContextFormat2\nChained Sequence Context Format 1\nChained Sequence Context Format 2\nChained Sequence Context Format 3\nPart of ChainedSequenceContextFormat1\nPart of ChainedSequenceContextFormat1\nfeatureParams for ‘cv01’-‘cv99’\nA Class Definition Table\nClass Definition Table Format 1\nClass Definition Table Format 2\nUsed in ClassDefFormat2\nPart of SequenceContextFormat2\nPart of SequenceContextFormat2\nCondition Table\nCondition Table Format 1: Font Variation Axis Range\nCondition Table Format 2: Variation index\nCondition Table Format 3: AND\nCondition Table Format 4: OR\nCondition Table Format 5: NOT\nConditionSet Table\nCoverage Format 1\nCoverage Format 2\nCoverage Table\nDevice delta formats\nDevice Table\nEither a Device table (in a non-variable font) or a …\nA trait that abstracts the behaviour of an extension …\nFeature Table\nFeature List Table\nAn enum for different possible tables referenced by …\nPart of FeatureList\nFeatureTableSubstitution Table\nUsed in FeatureTableSubstitution\nPart of FeatureVariations\nFeatureVariations Table\nLanguage System Table\nSigned 2-bit value, 8 values per uint16\nSigned 4-bit value, 4 values per uint16\nSigned 8-bit value, 2 values per uint16\nLookup Table\nThe LookupFlag bit enumeration.\nLookup List Table\nUsed in CoverageFormat2\nScript Table\nScript List Table\nScript Record\nA prioritized list of OpenType script tags mapped from a …\nA script chosen from a set of candidate tags.\nSequence Context Format 1\nSequence Context Format 2\nSequence Context Format 3\nSequence Lookup Record\nPart of SequenceContextFormat1\nPart of SequenceContextFormat1\nan array of subtables, maybe behind extension lookups\nCombination of a tag and a child table.\nVariation index table\nVariationIndex table, contains a delta-set index pair.\nOffset to an alternate feature table, from start of the …\nApplied to all glyphs in the range\nOffset to a condition set table, from beginning of …\nLast glyph ID in the range\nLast glyph ID in the range\nThe feature table index to match.\nOffset to Feature table, from beginning of FeatureList\nOffset to a feature table substitution table, from …\n4-byte feature identification tag\nIndex of the script in the <code>ScriptList</code>.\nTrue if a script was chosen that wasn’t in the requested …\nOffset to LangSys table, from beginning of Script table\n4-byte LangSysTag identifier\nIndex (zero-based) into the LookupList\nOffset to Script table, from beginning of ScriptList\n4-byte script tag identifier\nIndex (zero-based) into the input glyph sequence\nCoverage Index of first glyph ID in range\nFirst glyph ID in the range\nFirst glyph ID in the range\nThe actual OpenType tag of the chosen script.\nThe loca table.\nOffset and length of string in <code>ltag</code> table.\nThe language tag table.\nString length (in bytes).\nOffset from the start of the table to the beginning of the …\n<code>maxp</code>\n…\n<code>meta</code>\nData stored in the ‘meta’ table.\nOther metadata, which may exist in certain apple fonts\nUsed for the ‘dlng’ and ‘slng’ metadata\nLength of the data, in bytes. The data is not required to …\nOffset in bytes from the beginning of the metadata table …\nA tag indicating the type of metadata.\nA chain in a <code>morx</code> table.\nEntry payload in a contextual subtable state machine.\nContextual glyph substitution subtable.\nUsed to compute the sub-feature flags for a list of …\nEntry payload in an insertion subtable state machine.\nInsertion glyph substitution subtable.\nLigature glyph substitution subtable.\nThe morx (Extended Glyph Metamorphosis) table.\nA subtable in a <code>morx</code> chain.\nThe various <code>morx</code> subtable formats.\nArray of component indices which are summed to determine …\nIndex of the substitution table for the current glyph (use …\nZero-based index into the insertion glyph table. The …\nComplement of flags for the settings that this feature and …\nFlags for the settings that this feature and setting …\nThe feature’s setting (aka selector).\nThe type of feature.\nInsertion glyph table. The index and count of glyphs to …\nContains the set of ligature stack actions, one for each …\nOutput ligature glyphs.\nList of lookups specifying substitutions. The index into …\nIndex of the substitution table for the marked glyph (use …\nZero-based index into the insertion glyph table. The …\nThe MVAR (Metrics Variations) table\nValueRecord metrics variation record\nA delta-set inner index — used to select a delta-set row …\nA delta-set outer index — used to select an item …\nFour-byte tags used to represent particular metric or …\nFour-byte tag identifying a font-wide measure.\nCap height.\nGaspRange[0]\nGaspRange[1]\nGaspRange[2]\nGaspRange[3]\nGaspRange[4]\nGaspRange[5]\nGaspRange[6]\nGaspRange[7]\nGaspRange[8]\nGaspRange[9]\nHorizontal ascender.\nHorizontal clipping ascent.\nHorizontal clipping descent.\nHorizontal caret offset.\nHorizontal caret run.\nHorizontal caret rise.\nHorizontal descender.\nHorizontal line gap.\nSubscript em x-offset.\nSubscript em x-size.\nSubscript em y-offset.\nSubscript em y-size.\nSuperscript em x-offset.\nSuperscript em x-size.\nSuperscript em y-offset.\nSuperscript em y-size.\nStrikeout offset.\nStrikeout size.\nUnderline offset.\nUnderline size.\nVertical ascender.\nVertical caret offset.\nVertical caret run.\nVertical caret rise.\nVertical descender.\nVertical line gap.\nX-height.\nAn iterator over the chars of a name record.\nThe encoding used by the name table.\nPart of Name\nA helper for encoding and decoding Mac OS Roman encoded …\nNaming table version 1\nIdentifier for an informational string (or name).\nName Records\nEntry for a name in the naming table.\nPlatform-specific encoding ID.\nLanguage-tag string offset from start of storage area (in …\nLanguage ID.\nLanguage-tag string length (in bytes)\nString length (in bytes).\nName ID.\nPlatform ID.\nString offset from start of storage area (in bytes).\n<code>OS/2</code>\nOS/2 selection flags\nThe 258 glyph names defined for Macintosh TrueType fonts\nA string in the post table.\npost (PostScript) table\nState for processing the blend operator for DICTs and …\nCharacter set for mapping from glyph to string identifiers.\nCharset format 0.\nCharset format 1.\nCharset format 2.\nIterator over the glyph and string identifier mappings in …\nRange struct for Charset format 1.\nRange struct for Charset format 2.\nCharset with custom glyph id to string id mappings.\nErrors that are specific to PostScript processing.\nAssociates a glyph identifier with a Font DICT.\nFdSelect format 0.\nFdSelect format 3.\nFdSelect format 4.\nRange struct for FdSelect format 3.\nRange struct for FdSelect format 4.\nCommon type for uniform access to CFF and CFF2 index …\nAn array of variable-sized objects in a <code>CFF</code> table.\nAn array of variable-sized objects in a <code>CFF2</code> table.\nReference to a Latin-1 encoded string.\nEither a signed 32-bit integer or a 16.16 fixed point …\nThe PostScript standard string set.\nOperand stack for DICTs and charstrings.\nPostScript string identifier (SID).\nParsing for PostScript charstrings.\nParsing for PostScript DICTs.\nFD index for all glyphs in range.\nFD index for all glyphs in range.\nFirst glyph index in range.\nFirst glyph index in range.\nFirst glyph in range.\nFirst glyph in range.\nGlyphs left in range (excluding first).\nGlyphs left in range (excluding first).\nTrait for processing commands resulting from charstring …\nMaximum nesting depth for subroutine calls.\nEvaluates the given charstring and emits the resulting …\nComponents for computing a fixed point value for a binary …\nOperand for the <code>BlueValues</code>, <code>OtherBlues</code>, <code>FamilyBlues</code> and …\nPostScript DICT Operator with its associated operands.\nAffine matrix and scaling factor.\nA number parsed from a DICT. If the source was in binary …\nPostScript DICT operator.\nAn operator parsed from a DICT.\nOperand for the <code>StemSnapH</code> and <code>StemSnapV</code> operators.\nEither a PostScript DICT operator or a (numeric) operand.\nGiven a byte slice containing DICT data, returns an …\nGiven a font matrix and a scaled UPEM, compute a new font …\nGiven a byte slice containing DICT data, returns an …\nGlyph data table\nSbix header flags.\nThe sbix (Standard Bitmap Graphics) table\nStrike header table\nAxis Records\nAxis Value Tables\nAn array of AxisValue tables.\nAxis value table format 1\nAxis value table format 2\nAxis value table format 3\nAxis value table format 4\nPart of AxisValueFormat4\nAxis value table flags.\nSTAT (Style Attributes Table)\nZero-base index into the axis record array identifying the …\nThe name ID for entries in the ‘name’ table that …\nA value that applications can use to determine primary …\nA tag identifying the axis of design variation.\nA numeric value for this attribute value.\nSVGDocumentList\nSVGDocumentRecord\nThe SVG table\nThe last glyph ID for the range covered by this record.\nThe first glyph ID for the range covered by this record.\nLength of the SVG document data. Must be non-zero.\nOffset from the beginning of the SVGDocumentList to an SVG …\nThe tracking data table.\nSingle entry in a tracking table.\nThe tracking (trak) table.\nThe ‘name’ table index for this track (a short word or …\nOffset from the start of the tracking table to per-size …\nTrack value for this record.\nCondition Table\nCoverage Table\n…\nAn array of variable-sized objects in a <code>CFF2</code> table.\n…\nVARC (Variable Composites / Components Table)\nFlags used in the VarcComponent byte stream\nA VARC glyph doesn’t have any root level attributes, it…\nImplements the logic for iterating over the individual runs\nThe type of values for a given delta run (influences the …\nOuter and inner indices for reading from an …\nThe DeltaSetIndexMap table\nThe DeltaSetIndexMap table format 0\nThe DeltaSetIndexMap table format 1\nEntry format for a DeltaSetIndexMap.\nFloating point item delta computed by an item variation …\nTrait for applying floating point item deltas to target …\nThe ItemVariationData subtable\nThe ItemVariationStore table\nPacked Deltas\nPacked “Point” Numbers\nAn iterator over the packed point numbers data.\nThe RegionAxisCoordinates record\nA Tuple Record\nTrait for deltas that are computed in a tuple variation …\nAn iterator over the deltas for a glyph.\nA single set of tuple variation data\nThe ‘tupleVariationCount’ field of the Tuple Variation …\nTupleVariationHeader\nA helper type for iterating over <code>TupleVariationHeader</code>s.\nAn iterator over the <code>TupleVariation</code>s for a specific glyph.\nThe VariationRegion record\nThe VariationRegionList table\nThe region end coordinate value for the current axis.\nInner delta set index.\nReturns true if the delta is a point and requires reading …\nCreates a new delta for the given position and …\nOuter delta set index.\nThe region peak coordinate value for the current axis.\nArray of region axis coordinates records, in the order of …\nThe region start coordinate value for the current axis.\nCoordinate array specifying a position within the font’s …\nThe vhea Vertical Header Table\nThe vmtx (Vertical Metrics) table\nAdvance width/height, in font design units.\nGlyph leading (left/top) side bearing, in font design …\nVertical origin Y metrics record.\nThe VORG (Vertical Origin) table.\nGlyph index.\nY coordinate, in the font’s design coordinate system, of …\nThe VVAR (Vertical Metrics Variations) table\nA wrapper around raw big-endian bytes for some type.\nMinimum and maximum extents of a rectangular region.\nThe tag contained one or more non-space characters after a …\nThe SFNT version for fonts containing CFF outlines.\nA trait for determining whether versions are compatible.\n32-bit signed fixed point number with 6 bits of fraction.\n16-bit signed fixed point number with 14 bits of fraction.\n16-bit signed fixed point number with 12 bits of fraction.\n16-bit signed fixed point number with 10 bits of fraction.\n16-bit signed quantity in font design units.\n32-bit signed fixed point number with 16 bits of fraction.\nA trait for types that have a known, constant size.\nA 32-bit glyph identifier.\nA 16-bit glyph identifier.\n24-bit unsigned integer.\nThe tag contained an invalid byte, not within the printable\nThe tag was not between 1 and 4 bytes in length.\nAn error representing an invalid tag.\nA simple datetime type.\nA type representing a major, minor version pair.\nIdentifier for an informational string (or name).\nAn offset of a given width for which NULL (zero) is a …\nA16-bit offset to a table.\nA24-bit offset to a table.\nA32-bit offset to a table.\nTwo dimensional point with a generic coordinate type.\nThe raw size of this type, in bytes.\nThe raw byte representation of this type.\nA trait for font scalars.\nThe SFNT version for legacy Apple fonts containing …\nThe header tag for a font collection file.\nThe SFNT version for fonts containing TrueType outlines.\nAn OpenType tag.\nThe error type returned when a glyph identifier conversion …\n16-bit unsigned quantity in font design units.\n24-bit unsigned integer.\nA legacy 16/16 version encoding Packed 32-bit value with …\nreturn <code>true</code> if this version is field-compatible with <code>other</code>.\nCreate an instance of this type from raw big-endian bytes\nThe major version number\nThe minor version number\nAn internal macro for implementing the <code>RawType</code> trait.\nEncode this type as raw big-endian bytes\nX coordinate.\nMaximum extent in the x direction– the right side of a …\nMinimum extent in the x direction– the left side of a …\nY coordinate.\nMaximum extend in the y direction. In a Y-up coordinate …\nMinimum extent in the y direction. In a Y-up coordinate …\nSetting defined by a selector tag and an associated value.\nType for specifying a variation axis setting in user …\nTag that specifies the target setting.\nTag that specifies the target setting.\nThe desired value for the setting.\nThe desired value for the setting.\nIterator over the characters of a string.\nString containing a name or other font metadata in a …\nIterator over a collection of localized strings for a …\nIdentifier for an informational string (or name).\nA multi-line text editor.\nA weak reference to an <code>Editor</code>.\nThe bounds of the <code>Editor</code>.\nA bunch of text.\nA weak reference to a <code>Paragraph</code>.\nThe horizontal alignment of the <code>Paragraph</code>.\nThe minimum bounds of the <code>Paragraph</code>.\nThe vertical alignment of the <code>Paragraph</code>.\nThe appearance of a program.\nThe default style of a <code>Program</code>.\nThe <code>Executor</code> that will run commands and subscriptions.\nThe data needed to initialize your <code>Program</code>.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nAn interactive, native, cross-platform, multi-windowed …\nThe graphics backend to use to draw the <code>Program</code>.\nThe state of a multi-windowed <code>Program</code>.\nThe theme used to draw the <code>Program</code>.\nReturns the current background <code>Color</code> of the <code>State</code>.\nThe background <code>iced_core::Color</code> of the application.\nBuild the user interface for every window.\nReturns the current cursor position of the <code>State</code>.\nThe default <code>Appearance</code> of a <code>Program</code> with the built-in …\nReturns the default style of a <code>Program</code>.\nReturns the argument unchanged.\nReturns the current icon <code>Color</code> of the <code>State</code>.\nThe default icon <code>iced_core::Color</code> of the application.\nCalls <code>U::from(self)</code>.\nReturns the logical <code>Size</code> of the <code>Viewport</code> of the <code>State</code>.\nReturns the current keyboard modifiers of the <code>State</code>.\nInitializes the <code>Program</code> with the flags provided to <code>run</code> as …\nCreates a new <code>State</code> for the provided <code>Program</code>’s <code>window</code>.\nReturns the physical <code>Size</code> of the <code>Viewport</code> of the <code>State</code>.\nRuns a <code>Program</code> with an executor, compositor, and the …\nReturns the current scale factor of the <code>Viewport</code> of the …\nReturns the scale factor of the window of the <code>Program</code>.\nReturns the <code>Style</code> variation of the <code>Theme</code>.\nReturns the event <code>Subscription</code> for the current state of the\nSynchronizes the <code>State</code> with its <code>Program</code> and its respective …\nReturns the current text <code>Color</code> of the <code>State</code>.\nThe default text <code>iced_core::Color</code> of the application.\nReturns the current <code>Theme</code> of the <code>Program</code>.\nReturns the current theme of the <code>State</code>.\nReturns the current title of the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nProcesses the provided window event and updates the <code>State</code> …\nReturns true if the provided event should cause a <code>Program</code> …\nReturns the widgets to display in the <code>Program</code> for the …\nReturns the current <code>Viewport</code> of the <code>State</code>.\nReturns the version of the <code>Viewport</code> of the <code>State</code>.\nAn action that the iced runtime can perform.\nThe appearance of a program.\nRun a clipboard action.\nThe default style of a <code>Program</code>.\nRun a Dnd action.\nExits the runtime.\nLoad a font from its bytes.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nOutput some value.\nRun a platform specific action\nThe core of a user interface application following The Elm …\nThe graphics backend to use to draw the <code>Program</code>.\nRun a system action.\nA set of concurrent actions to be performed by the iced …\nThe theme used to draw the <code>Program</code>.\nA set of interactive graphical elements with a specific …\nRun a widget operation.\nRun a window action.\nThe background <code>iced_core::Color</code> of the application.\nAccess the clipboard.\nThe default <code>Appearance</code> of a <code>Program</code> with the built-in …\nReturns the default style of a <code>Program</code>.\nAccess the clipboard.\nCreates a <code>Task</code> that exits the iced runtime.\nLoad and use fonts.\nThe default icon <code>iced_core::Color</code> of the application.\nTrack keyboard events.\nA multi-window application.\nOverlays for user interfaces.\nPlatform specific actions defined for wayland\nBuild interactive programs using The Elm Architecture.\nAccess the native system.\nCreate runtime tasks.\nThe default text <code>iced_core::Color</code> of the application.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nImplement your own event loop to drive a user interface.\nReturns the widgets to display in the <code>Program</code>.\nBuild window-based GUI applications.\nThe bytes of the font to load.\nThe channel to send back the load result.\nA clipboard action to be performed by some <code>Task</code>.\nRead the clipboard and produce <code>String</code> with the result.\nRead the clipboard and produce <code>T</code> with the result.\nWrite the given contents to the clipboard.\nWrite the given contents to the clipboard.\nRead the current contents of the clipboard.\nRead the current contents of the clipboard.\nRead the current contents of the primary clipboard.\nRead from the primary clipboard\nWrite the given contents to the clipboard.\nWrite the given contents to the clipboard.\nWrite the given contents to the primary clipboard.\nWrite the given contents to the clipboard.\nThe channel to send the read contents.\nThe contents to be written.\nThe clipboard target.\nThe clipboard target.\nAn action to be performed on the system.\nEnd a Dnd operation.\nPeek the current Dnd operation.\nRegister a Dnd destination.\nSet the action of the Dnd operation.\nEnd a Dnd operation.\nRead the current contents of the Dnd operation.\nRegister a Dnd destination.\nSet the action of the Dnd operation.\nThe rectangles to register.\nThe surface to register.\nAn error while loading a font.\nLoad a font from its bytes.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe key pressed with all keyboard modifiers applied, …\nThe key released with all keyboard modifiers applied, …\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe physical key pressed.\nThe physical key released.\nThe text produced by the key press, if any.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface for a multi-window …\nThe graphics backend to use to draw the <code>Program</code>.\nThe execution state of a multi-window <code>Program</code>. It …\nThe theme used to draw the <code>Program</code>.\nBuild interactive programs using The Elm Architecture.\nThe internal state of a multi-window <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface for a multi-window …\nThe graphics backend to use to draw the <code>Program</code>.\nThe theme used to draw the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nThe execution state of a multi-window <code>Program</code>. It …\nAn overlay container that displays nested overlays\nPlatform specific actions defined for wayland\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface application following The Elm …\nThe graphics backend to use to draw the <code>Program</code>.\nThe execution state of a <code>Program</code>. It leverages caching, …\nThe theme used to draw the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code>.\nAn operation to be performed on the system.\nContains information about the system (e.g. system name, …\nQuery system information and produce <code>T</code> with the result.\nDetailed processor model information\nThe number of physical cores on the processor\nModel information for the active graphics adapter\nUnderlying graphics backend for rendering\nTotal RAM size, in bytes\nMemory used by this process, in bytes\nOperating system kernel version\nThe operating system name\nShort operating system version number\nLong operating system version\nA handle to a <code>Task</code> that can be used for aborting it.\nA set of concurrent actions to be performed by the iced …\nCreates a new <code>Task</code> that executes the <code>Action</code> returned by …\nCreates a new <code>Task</code> that executes the given <code>Action</code> and …\nReturns the underlying <code>Stream</code> of the <code>Task</code>.\nCreates a new <code>Task</code> that executes the <code>Action</code> returned by …\nCreates a new <code>Task</code> that runs the given <code>widget::Operation</code> …\nReusable data of a specific <code>UserInterface</code>.\nThe <code>UserInterface</code> is outdated and needs to be rebuilt.\nThe resulting state after updating a <code>UserInterface</code>.\nThe <code>UserInterface</code> is up-to-date and can be reused without …\nA set of interactive graphical elements with a specific …\nThe <code>window::RedrawRequest</code> when a redraw should be …\nAn operation to be performed on some window.\nChange the window <code>Icon</code>.\nChange the window <code>Level</code>.\nChange the <code>Mode</code> of the window.\nClose the window and exits the application.\nDisable window blur.\nDisable mouse passthrough for the given window.\nMove the window with the left mouse button until the …\nEnable window blur.\nEnables mouse passthrough for the given window.\nBring the window to the front and sets input focus. Has no …\nGets the <code>Id</code> of the latest window.\nGet if the current window is maximized or not.\nGet if the current window is minimized or not.\nGet the current <code>Mode</code> of the window.\nGets the <code>Id</code> of the oldest window.\nGet the current logical coordinates of the window.\nGet the raw identifier unique to the window.\nGet the current scale factor (DPI) of the window.\nGet the current logical dimensions of the window.\nSet the window to maximized or back\nSet the window to minimized or back\nMove the window to the given logical coordinates.\nOpens a new window with some <code>Settings</code>.\nRequest user attention to the window, this has no effect …\nResize the window to the given logical dimensions.\nRuns the closure with the native window handle of the …\nData of a screenshot, captured with <code>window::screenshot()</code>.\nScreenshot the viewport of the window.\nShow the system menu at cursor position.\nToggle whether window has decorations.\nToggle the window to maximized or back\nThe bytes of the <code>Screenshot</code>.\nChanges the <code>Icon</code> of the window.\nChanges the window <code>Level</code>.\nChanges the <code>Mode</code> of the window.\nCloses the window with <code>id</code>.\nSubscribes to all <code>Event::Closed</code> occurrences in the running …\nSubscribes to all <code>Event::CloseRequested</code> occurrences in the …\nDisable the blur effect for a window.\nDisable mouse passthrough for the given window.\nBegins dragging the window while the left mouse button is …\nEnable the blur effect for a window.\nEnables mouse passthrough for the given window.\nSubscribes to all window events of the running application.\nSubscribes to the frames of the window of the running …\nBrings the window to the front and sets input focus. Has …\nGets the window <code>Id</code> of the latest window.\nGets the maximized state of the window with the given <code>Id</code>.\nGets the minimized state of the window with the given <code>Id</code>.\nGets the current <code>Mode</code> of the window.\nGets the window <code>Id</code> of the oldest window.\nGets the position in logical coordinates of the window …\nGets an identifier unique to the window, provided by the …\nGets the scale factor of the window with the given <code>Id</code>.\nGet the window’s size in logical dimensions.\nMaximizes the window.\nMinimizes the window.\nMoves the window to the given logical coordinates.\nOpens a new window with the given <code>Settings</code>; producing the …\nSubscribes to all <code>Event::Opened</code> occurrences in the running …\nRequest user attention to the window. This has no effect …\nResizes the window to the given logical dimensions.\nSubscribes to all <code>Event::Resized</code> occurrences in the …\nRuns the given callback with the native window handle for …\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nTake screenshots of a window.\nCaptures a <code>Screenshot</code> from the window.\nShow the system menu at cursor position.\nThe size of the <code>Screenshot</code> in physical pixels.\nToggles the window decorations.\nToggles the window to maximized or back.\nA raw display handle for Android NDK.\nRaw display handle for Android.\nA raw window handle for Android NDK.\nRaw window handle for Android NDK.\nA raw window handle for AppKit.\nA raw display handle for AppKit.\nRaw display handle for AppKit.\nRaw window handle for AppKit.\nThe handle to the display controller of the windowing …\nA raw window handle for the Linux Kernel Mode Set/Direct …\nA raw display handle for the Linux Kernel Mode Set/Direct …\nRaw display handle for the Linux Kernel Mode Set/Direct …\nRaw window handle for the Linux Kernel Mode Set/Direct …\nA raw window handle for the Linux Generic Buffer Manager.\nA raw display handle for the Linux Generic Buffer Manager.\nRaw display handle for the Linux Generic Buffer Manager.\nRaw window handle for the Linux Generic Buffer Manager.\nA raw window handle for Haiku.\nA raw display handle for Haiku.\nRaw display handle for Haiku.\nRaw window handle for Haiku.\nAn error that can occur while fetching a display or window …\nA display that acts as a wrapper around a display handle.\nDisplay that wraps around a raw display handle.\nWindow that wraps around a raw window handle.\nA handle to a window.\nThe underlying handle cannot be represented using the …\nA raw display handle for OpenHarmony OS NDK\nRaw display handle for OpenHarmony.\nA raw window handle for the OpenHarmony OS NDK\nRaw window handle for Ohos NDK.\nA raw window handle for the Redox operating system.\nA raw display handle for the Redox operating system.\nRaw display handle for the Redox operating system.\nRaw window handle for the Redox operating system.\nA display server handle for a particular windowing system.\nA window handle for a particular windowing system.\nA raw window handle for UIKit (Apple’s non-macOS …\nA raw display handle for UIKit (Apple’s non-macOS …\nRaw display handle for UIKit.\nRaw window handle for UIKit.\nThe underlying handle is not available.\nA raw window handle for Wayland.\nA raw display handle for Wayland.\nRaw display handle for Wayland.\nRaw window handle for Wayland.\nA raw window handle for the Web.\nA raw display handle for the Web.\nA raw window handle for a Web canvas registered via …\nRaw window handle for a Web canvas registered via …\nRaw display handle for the Web.\nA raw window handle for a Web offscreen canvas registered …\nRaw window handle for a Web offscreen canvas registered via\nRaw window handle for the Web.\nA raw window handle for Win32.\nRaw window handle for Win32.\nA raw window handle for WinRT.\nRaw window handle for WinRT.\nThe handle to a window.\nA raw display handle for Win32.\nRaw display handle for Windows.\nA raw window handle for Xcb.\nA raw display handle for Xcb.\nRaw display handle for Xcb.\nRaw window handle for Xcb.\nA raw window handle for Xlib.\nA raw display handle for Xlib.\nRaw display handle for Xlib.\nRaw window handle for Xlib.\nA pointer to an <code>ANativeWindow</code>.\nA pointer to a BDirectWindow object that might be null\nA pointer to a BWindow object\nA pointer to an X server <code>xcb_connection_t</code>.\nA WinRT <code>CoreWindow</code> handle.\nA pointer to an Xlib <code>Display</code>.\nA pointer to a <code>wl_display</code>.\nGet a handle to the display controller of the windowing …\nThe drm file descriptor.\nThe gbm device.\nThe gbm surface.\nThe <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.\nA Win32 <code>HWND</code> handle.\nAn ID value inserted into the data attributes of the …\nA pointer to an <code>NSView</code> object.\nA pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.\nA pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.\nThe primary drm plane handle.\nAn X11 screen to use with this display handle.\nAn X11 screen to use with this display handle.\nA pointer to a <code>wl_surface</code>.\nA pointer to an <code>UIView</code> object.\nA pointer to an <code>UIViewController</code> object, if the view has …\nAn Xlib visual ID, or 0 if unknown.\nAn X11 <code>xcb_visualid_t</code>.\nA pointer to an orbclient window.\nAn Xlib <code>Window</code>.\nAn X11 <code>xcb_window_t</code>.\nGet a handle to the window.\nErrors that can occur when cropping a <code>Screenshot</code>.\nThe cropped region’s size is out of bounds.\nData of a screenshot, captured with <code>window::screenshot()</code>.\nThe cropped region’s size is zero.\nThe bytes of the <code>Screenshot</code>.\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nThe size of the <code>Screenshot</code> in physical pixels.\nThe settings of an application.\nThe fonts to load on boot.\nThe identifier of the application.\nWhether the application should exit when no windows are …\nEnd user application handling.\nThe event enums and assorted supporting types.\nThe <code>EventLoop</code> struct and assorted supporting types, …\nTypes related to the keyboard.\nTypes useful for interacting with a user’s monitors.\nContains traits with platform-specific methods in them.\nThe <code>Window</code> struct and associated types.\nThe handler of the application events.\nEmitted when the event loop is about to block and wait for …\nEmitted from the point onwards the application should …\nEmitted when the application must destroy its render …\nEmitted when the OS sends an event to a device.\nEmitted when the event loop is being shut down.\nEmitted when the application has received a memory warning.\nEmitted when new events arrive from the OS to be processed.\nCalled after a wake up is requested using …\nEmitted when the application has been resumed.\nEmitted when the application has been suspended.\nEmitted when the OS sends an event to a winit window.\nA position represented in logical pixels.\nA size represented in logical pixels.\nA logical pixel unit.\nRepresents a maximum logical unit that is equal to <code>f64::MAX</code>…\nRepresents a maximum physical unit that is equal to …\nRepresents a maximum logical unit that is equal to <code>f64::MAX</code>…\nRepresents a minimum logical unit of <code>f64::MAX</code>.\nRepresents a minimum physical unit of <code>f64::MAX</code>.\nRepresents a minimum logical unit of <code>f64::MAX</code>.\nA position represented in physical pixels.\nA size represented in physical pixels.\nA physical pixel unit.\nA pixel unit that’s either physical or logical.\nA position that’s either physical or logical.\nA size that’s either physical or logical.\nRepresents a logical unit of <code>0_f64</code>.\nRepresents a physical unit of <code>0_f64</code>.\nRepresents a logical unit of <code>0_f64</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks that the scale factor is a normal positive <code>f64</code>.\nA general error that may occur while running or creating …\nApplication has exit with an error status.\nThe request was ignored by the operating system.\nCreating the event loop with the requested configuration …\nThe request is not supported.\nThe requested operation is not supported.\nGot unspecified OS-specific error during the request.\nGot unspecified OS specific error during the request.\nUnclassified error from the OS.\nThe event loop can’t be re-created.\nA general error that may occur during a request to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee <code>ApplicationHandler::about_to_wait</code> for details.\nThe activation token was delivered back and now could be …\nIdentifier for a specific analog axis on some device.\nIdentifier for a specific button on some device.\nOn iOS, the force is calibrated so that the same number …\nThe window has been requested to close.\nNotifies when text should be inserted into the editor …\nSee <code>ApplicationHandler::can_create_surfaces</code> for details.\nThe cursor has entered the window.\nThe cursor has left the window.\nThe cursor has moved on the window.\nThe window has been destroyed.\nRepresents raw hardware events that are not associated …\nSee <code>ApplicationHandler::device_event</code> for details.\nIdentifier of an input device.\nNotifies when the IME was disabled.\nDouble tap gesture.\nA file has been dropped into the window.\nDescribes the input state of a key.\nNotifies when the IME was enabled.\nDescribes a generic event.\nIdentifier of a finger in a touch event.\nThe window gained or lost focus.\nDescribes the force of a touch event\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nDescribes input method events.\nAn event from an input method.\nSent once, immediately after <code>run</code> is called. Indicates that …\nDescribes a keyboard input targeting a window.\nAn event from the keyboard has been received.\nAmount in lines or rows to scroll in the horizontal and …\nSee <code>ApplicationHandler::exiting</code> for details.\nSee <code>ApplicationHandler::memory_warning</code> for details.\nDescribes keyboard modifiers event.\nThe keyboard modifiers have changed.\nDescribes a button of a mouse controller.\nAn mouse button press has been received.\nChange in physical position of a pointing device.\nDescribes a difference in the mouse scroll wheel state.\nA mouse wheel movement or touchpad scroll occurred.\nPhysical scroll event\nThe position of the window has changed. Contains the window…\nSee <code>ApplicationHandler::new_events</code> for details.\nIf the platform reports the force as normalized, we have …\nThe window has been occluded (completely hidden from view).\nN-finger pan gesture\nTwo-finger pinch gesture, often used for magnification.\nAmount in pixels to scroll in the horizontal and vertical …\nSent if the event loop is being resumed after the loop’s …\nNotifies when a new composing text should be set at the …\nDescribes a keyboard input as a raw device event.\nEmitted when a window should be redrawn.\nSent if the time specified by <code>ControlFlow::WaitUntil</code> has …\nSee <code>ApplicationHandler::resumed</code> for details.\nTwo-finger rotation gesture.\nThe window’s scale factor has changed.\nDescribes the reason the event loop is resuming.\nThe suggested bounds of the window’s surface has changed.\nThe size of the window’s surface has changed.\nHandle to synchronously change the size of the window from …\nSee <code>ApplicationHandler::suspended</code> for details.\nThe system window theme has changed.\nRepresents a touch event\nTouch event has been received\nDescribes touch-screen input state.\nTouchpad pressure event.\nUser requested a wake up.\nSent if the OS has new events to send to the window, after …\nDescribes an event from a [<code>Window</code>].\nSee <code>ApplicationHandler::window_event</code> for details.\nThe window state has changed.\nReturns a dummy id, useful for unit testing.\nReturns a dummy id, useful for unit testing.\nUnique identifier of a finger.\nDescribes how hard the screen was pressed. May be <code>None</code> if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if <code>self == Pressed</code>.\nThe state of the left alt key.\nThe state of the left control key.\nContains the location of this key on the keyboard.\nThis value is affected by all modifiers except Ctrl.\nThe state of the left shift key.\nThe state of the left super key.\nReturns the force normalized to the range between 0.0 and …\nRepresents the position of a key independent of the …\nThe state of the right alt key.\nThe state of the right control key.\nWhether or not this key is a key repeat event.\nTry to request surface size which will be set …\nThe state of the right shift key.\nThe state of the right super key.\nThe state of the modifiers.\nWhether the key is being pressed or released.\nContains the text produced by this keypress.\n(x, y) change in position in unspecified units.\nThe altitude (in radians) of the stylus.\nThe force of the touch, where a value of 1.0 represents …\nThe maximum possible force for a touch.\nPositive values indicate magnification (zooming in) and  …\nChange in pixels of pan gesture from last update.\nchange in rotation in degrees\nIf <code>true</code>, the event was generated synthetically by winit in …\n(x,y) coords in pixels relative to the top-left corner of …\nHandle to update surface size during scale changes.\nReport device events regardless of window focus.\nA unique identifier of the winit’s async request.\nSet through <code>ActiveEventLoop::set_control_flow()</code>.\nControl when device events are captured.\nProvides a way to retrieve events from the system and from …\nObject that allows building the event loop.\nControl the <code>EventLoop</code>, possibly from a different thread, …\nNever capture device events.\nA proxy for the underlying display handle.\nWhen the current loop iteration finishes, immediately …\nWhen the current loop iteration finishes, suspend the …\nWhen the current loop iteration finishes, suspend the …\nOnly capture device events while the window is focused.\nGet the underlying EventLoop’s <code>fd</code> which you can register …\nGet the underlying EventLoop’s raw <code>fd</code> which you can …\nReturns the list of all the monitors available on the …\nBuilds a new event loop.\nStart building a new event loop.\nGets the current <code>ControlFlow</code>.\nCreate custom cursor.\nCreate custom cursor.\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nCreate the window.\nThis exits the event loop.\nReturns if the <code>EventLoop</code> is about to stop.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange if or when <code>DeviceEvent</code>s are captured.\nChange if or when <code>DeviceEvent</code>s are captured.\nCreate the event loop.\nGets a persistent reference to the underlying platform …\nGets a persistent reference to the underlying platform …\nReturns the primary monitor of the system.\nRun the application with the event loop on the calling …\nGet the raw-window-handle handle.\nSets the <code>ControlFlow</code>.\nSets the <code>ControlFlow</code>.\nReturns the current system theme.\nCreates a <code>ControlFlow</code> that waits until a timeout has …\nWake up the <code>EventLoop</code>, resulting in …\nThe “alt” key.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitiate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nAn Android “keycode”, which is similar to a “…\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe “control” key.\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nKey represents the meaning of a keypress.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nCode representing the location of a physical key\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nThe location of the key on the keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nThe key is on the left side of the keyboard.\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nA macOS “scancode”.\nA macOS “scancode”. There does not appear to be any …\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nThe state of the particular modifiers key.\nRepresents the current state of the keyboard modifiers\nA simple (unparameterised) action\nA <code>Key::Named</code> value\nContains the platform-native logical key identifier\nContains the platform-native physical key identifier\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nOn the Mac, this is used for the numpad Clear key.\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nThe key is on the numpad.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nPage Down, PgDn, or ⇟\nScroll down or display next page of content.\nPage Up, PgUp, or ⇞\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nFound on Sun’s USB keyboard.\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause Break\nPause the current state or application (as appropriate).\n. on a US keyboard.\nRepresents the location of a physical key.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nThis key is placed in the function section on some Apple …\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nThe particular key is pressed.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nPrtScr SysRq or Print Screen\nInitiate print-screen function.\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe key is on the right side of the keyboard.\nThe Roman characters function key.\nThe “shift” key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nThis is the “windows” key on PC and “command” key …\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nToggle between scrolling and cursor movement modes.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nA <code>SmolStr</code> is a string type that has the following …\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe key is in its “normal” location on the keyboard.\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)")