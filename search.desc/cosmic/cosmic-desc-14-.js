searchState.loadedDescShard("cosmic", 14, "Switch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nTab or ⇥\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nFound on Sun’s USB keyboard.\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nThis variant is used when the key cannot be translated to …\nThis variant is used when the key cannot be translated to …\nThe state of the key is unknown.\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA “key value string”.\nA Windows “scancode”.\nA Windows “virtual-key code”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nAn XKB “keysym”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nGet a flags value with all known bits set.\nReturns <code>true</code> if the alt key is pressed.\nConvert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns <code>true</code> if the control key is pressed.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns <code>true</code> if the shift key is pressed.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns <code>true</code> if the super key is pressed.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nConvert an action to its approximate textual equivalent.\nConvert a key to its approximate textual equivalent.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nHandle to a monitor.\nDescribes a fullscreen video mode of a monitor.\nReturns the bit depth of this video mode, as in how many …\nReturns the currently active video mode of this monitor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the monitor that this video mode is valid for. …\nReturns a human-readable name of the monitor.\nReturns the top-left corner position of the monitor …\nReturns the refresh rate of this video mode in mHz.\nReturns the scale factor of the underlying monitor. To map …\nReturns the resolution of this video mode. This <strong>must not</strong> …\nReturns all fullscreen video modes supported by this …\nWindow startup notification to handle window raising.\nWayland\nX11\nAdditional methods for the <code>KeyEvent</code> which cannot be …\nThis value ignores all modifiers including, but not …\nIdentical to <code>KeyEvent::text</code> but this is affected by Ctrl.\nContinue running external loop.\nAdditional methods on <code>EventLoop</code> for pumping events within …\nExit external loop.\nThe return status for <code>pump_events</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPump the <code>EventLoop</code> to check for and dispatch pending …\nAdditional methods on <code>EventLoop</code> to return control flow to …\nRun the application with the event loop on the calling …\nAdditional methods for the <code>PhysicalKey</code> type that allow the …\nConstructs a <code>PhysicalKey</code> from a platform-specific physical …\nThe raw value of the platform-specific physical key …\nRead the token from the environment.\nRequest a new activation token.\nRemove the activation environment variables from the …\nSet environment variables responsible for activation token.\nUse this <code>ActivationToken</code> during window creation.\nAdditional methods on <code>ActiveEventLoop</code> that are specific to …\nUse the dark variant.\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoop</code> that are specific to …\nUse the light variant.\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nThe theme variant to use.\nAdditional methods on <code>WindowAttributes</code> that are specific …\nAdditional methods on <code>Window</code> that are specific to Wayland.\nGet the underlying raw xdg_surface handle.\nGet the underlying raw xdg_toplevel handle.\nCreate a <code>XdgSurfaceHandle</code> from a <code>NonNull&lt;c_void&gt;</code>\nCreate a <code>XdgToplevelHandle</code> from a <code>NonNull&lt;c_void&gt;</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if the <code>ActiveEventLoop</code> uses Wayland.\nTrue if the <code>EventLoop</code> uses Wayland.\nReturns the inner identifier of the monitor.\nGet the state of the window\nWhether to allow the event loop to be created off of the …\nBuild window with the given name.\nForce using Wayland.\nAdditional methods on <code>ActiveEventLoop</code> that are specific to …\nThis should be used on the windows that are popped up by …\nA desktop feature. This can include a single window …\nThis is a dialog window.\nThis indicates the window is being dragged. This property …\nA dock or panel feature. Typically a Window Manager would …\nA dropdown menu that usually appears when the user clicks …\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoop</code> that are specific to X11.\nPinnable menu windows. “Torn off” from the main …\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nThis is a normal, top-level window.\nThe window is a notification. This property is typically …\nA popup menu that usually appears when the user right …\nThe window is a splash screen displayed as an application …\nToolbar windows. “Torn off” from the main application.\nA tooltip window. Usually used to show additional …\nA small persistent utility window, such as a palette or …\nAdditional methods on <code>WindowAttributes</code> that are specific …\nAdditional methods on <code>Window</code> that are specific to X11.\nX window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</code>.\nA unique identifier for an X11 visual.\nA unique identifier for an X11 window.\nThe first argument in the provided hook will be the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrue if the <code>ActiveEventLoop</code> uses X11.\nTrue if the <code>EventLoop</code> uses X11.\nReturns the inner identifier of the monitor.\nHook to winit’s xlib error handling callback.\nWhether to allow the event loop to be created off of the …\nBuild window with base size hint.\nEmbed this window into another parent window.\nBuild window with the given <code>general</code> and <code>instance</code> names.\nBuild window with override-redirect flag; defaults to …\nForce using X11.\nCreate this window with a specific X11 visual.\nBuild window with <code>_NET_WM_WINDOW_TYPE</code> hints; defaults to …\nAn opaque token used to activate the <code>Window</code>.\nIndicates an alias of/shortcut to something is to be …\nIndicates that something can be moved or resized in any …\nIndicates that the something can be scrolled in any …\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nAn error produced when using <code>Icon::from_rgba</code> with invalid …\nAn error produced when using <code>CustomCursor::from_rgba</code> with …\nProviding <code>None</code> to <code>Borderless</code> will fullscreen on the …\nProduced when the length of the <code>rgba</code> argument isn’t …\nProduced when the length of the <code>rgba</code> argument isn’t …\nIndicates that a cell or set of cells may be selected. …\nIndicates that the item/column can be resized …\nThe cursor is confined to the window area.\nA context menu is available for the object under the …\nIndicates something is to be copied. Often rendered as an …\nPlatform-specific\nA simple crosshair (e.g., short line segments resembling a …\nSee <code>Window::set_cursor()</code> for more details.\nThe behavior of cursor grabbing.\nDescribes the appearance of the (usually mouse) cursor …\nAn error which could be returned when parsing <code>CursorIcon</code>.\nUse a custom image as a cursor (mouse pointer).\nSource for <code>CustomCursor</code>.\nUse the dark variant.\nThe platform-dependent default cursor. Often rendered as …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nIndicates that the user will select the action that will …\nThe east border to be moved.\nThe east and west borders to be moved.\nFullscreen modes.\nIndicates that something can be grabbed (dragged to be …\nIndicates that something is being grabbed (dragged to be …\nHelp is available for the object under the cursor. Often …\nProduced when the hotspot is outside the image bounds\nAn icon used for the window titlebar, taskbar, etc.\nGeneric IME purposes for use in <code>Window::set_ime_purpose</code>.\nPlatform-specific\nUse the light variant.\nThe cursor is locked inside the window area to the certain …\nThe maximum width and height for a cursor when using …\nIndicates something is to be moved.\nThe north border to be moved.\nThe north-east corner to be moved.\nThe north-east and south-west corners to be moved.\nIndicates that the dragged item cannot be dropped at the …\nNo grabbing of the cursor is performed.\nThe default.\nNo special hints for the IME (default).\nIndicates that the requested action will not be carried …\nThe south and north borders to be moved.\nThe north-west corner to be moved.\nThe north-west and south-east corners to be moved.\nProduced when underlying OS functionality failed to create …\nThe IME is used for password input.\nThe cursor is a pointer that indicates a link. Often …\nA progress indicator. The program is performing some …\nDefines the orientation that a window resize will be …\nIndicates that the item/row can be resized vertically. …\nThe south border to be moved.\nThe south-east corner to be moved.\nThe south-west corner to be moved.\nThe IME is used to input into a terminal.\nIndicates text that may be selected. Often rendered as an …\nThe theme variant to use.\nProduced when the image dimensions are larger than …\nPlatform-specific\nIndicates vertical-text that may be selected. Often …\nThe west border to be moved.\nIndicates that the program is busy and the user should …\nRepresents a window.\nAttributes used when creating a window.\nIdentifier of a window. Unique for each window.\nA window level groups windows with respect to their …\nIndicates that something can be zoomed in. Often rendered …\nIndicates that something can be zoomed in. Often rendered …\nGet a flags value with all known bits set.\nA list of alternative names for the cursor icon as …\nReturns the list of all the monitors available on the …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns the monitor on which the window currently resides.\nCreate a new <code>WindowAttributes</code> which allows modifying the …\nThe intersection of a source flags value with the …\nResizes the window with the left mouse button until the …\nMoves the window with the left mouse button until the …\nReturns a dummy id, useful for unit testing.\nGet a flags value with all bits unset.\nGets the enabled window buttons.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nBrings the window to the front and sets input focus. Has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates a new cursor from an rgba buffer.\nCreates an icon from 32bpp RGBA data.\nParse a string slice into <code>CursorIcon</code>.\nGets the window’s current fullscreen state.\nGets whether the window has keyboard focus.\nReturns an identifier unique to the window.\nReturns the position of the top-left hand corner of the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nGets the window’s current decorations state.\nWhether all bits in this flags value are unset.\nGets the window’s current maximized state.\nGets the window’s current minimized state.\nGets the window’s current resizable state.\nGets the window’s current visibility state.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe name of the cursor icon as defined in the w3c standard.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns the position of the top-left hand corner of the …\nReturns the size of the entire window.\nGet the parent window stored on the attributes.\nNotify the windowing system before presenting to the …\nReturns the primary monitor of the system.\nThe intersection of a source flags value with the …\nQueues a <code>WindowEvent::RedrawRequested</code> event to be emitted …\nRequest the new size for the surface.\nRequests user attention to the window, this has no effect …\nReset the dead key state of the keyboard.\nGet the raw-window-handle v0.6 display handle.\nGet the raw-window-handle v0.6 window handle.\nReturns the scale factor that can be used to map logical …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nChange the window blur state.\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSet grabbing mode on the cursor preventing it from leaving …\nModifies whether the window catches cursor events.\nChanges the position of the cursor in window coordinates.\nModifies the cursor’s visibility.\nTurn window decorations on or off.\nSets the enabled window buttons.\nSets the window to fullscreen or back.\nSets whether the window should get IME events\nSet the IME cursor editing area, where the <code>position</code> is the …\nSets the IME purpose for the window using <code>ImePurpose</code>.\nSets a maximum dimensions of the window’s surface.\nSets the window to maximized or back.\nSets a minimum dimensions of the window’s surface.\nSets the window to minimized or back\nModifies the position of the window.\nSets whether the window is resizable or not.\nSets resize increments of the surface.\nSet or override the window theme.\nModifies the title of the window.\nChange the window transparency state.\nModifies the window’s visibility.\nSets the window icon.\nChange the window level.\nShow window menu at a specified position .\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns surface resize increments if any were set.\nReturns the size of the window’s render-able surface.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the current window theme.\nGets the current title of the window.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet whether the window will support transparency.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWhether the window will be initially focused or not.\nSets whether the background of the window should be …\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSets whether the window should have a border, a title bar, …\nSets the enabled window buttons.\nSets whether the window should be put into fullscreen upon …\nSets the maximum dimensions the surface can have.\nRequest that the window is maximized upon creation.\nSets the minimum dimensions the surface can have.\nBuild window with parent window.\nSets a desired initial position for the window.\nSets whether the window is resizable or not.\nBuild window with resize increments hint.\nRequests the surface to be of specific dimensions.\nSets a specific theme for the window.\nSets the initial title of the window in the title bar.\nSets whether the background of the window should be …\nSets whether the window will be initially visible or …\nSets the window icon.\nSets the window level.\nThe fallback icon theme to search if no icon theme was …\nSet the fallback icon theme to search when loading system …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents a type that you can apply arbitrary functions …\nRepresents a type which can have functions applied to it …\nAdditional methods for the [<code>Column</code>] and [<code>Row</code>] widgets.\nA set of concurrent actions to be performed by the iced …\nApply a function to this value and return the (possibly) …\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nApply a function which takes the parameter by value.\nApply a function which takes the parameter by mutable …\nApply a function which takes the parameter by reference.\nCombines color with background to create appearance of …\nAppends all elements in an iterator to the widget.\nAppends all elements in an iterator to the widget.\nPushes an element into the widget.\nConditionally pushes an element to the widget.\nConditionally pushes an element to the widget.\nA widget for multiple choice selection.\nApply a custom appearance filter\nOr implement any custom theme of your liking.\nNo filtering is applied\nFile browser\nNavigation bar style\nA tabbed widget for switching between views in an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nContains stylesheet implementations for widgets native to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the appearance of menu bars and their menus.\nStyles for the button widget from iced-rs.\nApply a custom appearance filter\nNo filtering is applied\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe appearance of a menu bar and its menus.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default style.\nThe style of a menu bar and its menus\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu bar and its menus.\nProduces the <code>Appearance</code> of a menu bar and its menus.\nThe background color of the menu bar and its menus.\nThe expand value of the menus’ background\nThe border radius of the menu bar.\nThe border <code>Color</code> of the menu bar and its menus.\nThe border width of the menu bar and its menus.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe border radius of the menus.\nIgnore this message in your application. It will be …\nCreate a popup with a view function accepting the App as a …\nCreate a subsurface with a view function accepting the App …\nCreate a window with a view function accepting the App as …\nDestroy a subsurface with a view function\nDestroy a subsurface with a view function\nDestroy a window\nCreate a popup\nResponsive menu bar update\nCreate a subsurface with a view function\nCreate a window with a view function\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits of the menu bar\nId of the menu bar\nRequested Full Size for expanded menu bar\nYields a task which contains a batch of tasks.\nYields a task which will run the future on the runtime …\nYields a task which will return a message.\nYields a task which will run a stream on the runtime …\naccent element colors\naccent button element colors\naccent text colors If None, accent base color is the …\nCurrently-defined theme.\ncosmic-comp active hint window outline width\nCurrently-defined theme type.\nThe transparency component. 0.0 (or 0u8) is fully …\nbackground element colors\nThe base color of the widget\nthe color of the border for the widget\nbutton component styling\nThe color.\ncontrol tint color\ncorner radii\nget current container can be used in a component that is …\ndestructive element colors\ndestructive button element colors\nthe color of the widget when it is disabled\nthe color of the border for the widget when it is disabled\nthe color of dividers for this widget\nthe color of the widget when it is focused\nReturns the argument unchanged.\ncosmic-comp window gaps size (outer, inner)\nThe color of the widget when it is hovered\nicon button element colors\nCalls <code>U::from(self)</code>.\nWhether the active theme has a dark preference.\nWhether the theme has a dark preference.\nis dark\nenables blurred transparency\nWhether the active theme is high contrast.\nWhether the theme has a high contrast.\nis high contrast\nlink button element colors\nname of the theme\nthe color of text for this widget\nthe color of text in the widget when it is disabled\npalette\nPrefer dark or light theme. If <code>None</code>, the system preference …\nthe color of the widget when it is pressed\nprimary element colors\nsecondary element colors\nthe color of the widget when it is selected\nthe color of the widget when it is selected\nset the theme\nshade color for dialogs\nPreferred interface spacing parameters defined by the …\nspacing\nStylesheet implements for <code>crate::Theme</code>\nsuggested element colors\nsuggested button element colors\nLoads the preferred system theme from <code>cosmic-config</code>.\ntext button element colors\ntext tint color\nwarning element colors\nwarning button element colors\ncosmic-comp custom window hint color\nA widget for multiple choice selection.\nApply a custom appearance filter\nOr implement any custom theme of your liking.\nNo filtering is applied\nFile browser\nNavigation bar style\nA tabbed widget for switching between views in an …\nContains stylesheet implementations for widgets native to …\nChange the appearance of menu bars and their menus.\nStyles for the button widget from iced-rs.\nApply a custom appearance filter\nNo filtering is applied\nThe appearance of a menu bar and its menus.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default style.\nThe style of a menu bar and its menus\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu bar and its menus.\nProduces the <code>Appearance</code> of a menu bar and its menus.\nThe background color of the menu bar and its menus.\nThe expand value of the menus’ background\nThe border radius of the menu bar.\nThe border <code>Color</code> of the menu bar and its menus.\nThe border width of the menu bar and its menus.\nThe border radius of the menus.\nA generic button which emits a message when pressed.\nA widget capable of drawing 2D graphics.\nItems are centered around the middle of the axis\nA box that can be checked.\nA widget for searching and selecting a single value from a …\nA widget that aligns its contents inside of its boundaries.\nA context menu is a menu in a graphical user interface …\nThe default gap.\nThe default height of a <code>ProgressBar</code>.\nThe default height of a <code>Slider</code>.\nThe default padding.\nThe default width of a <code>VerticalSlider</code>.\nA widget for selecting a single value from a list of …\nItems are packed toward the end of the axis\nItems are packed towards the flex-relative end of the axis.\nResponsively generates rows and columns of widgets based …\nItems are packed towards the flex-relative start of the …\nResponsively generates rows and columns of widgets based …\nAn image which may be an SVG or PNG.\nThe identifier of a generic widget.\nAn element decorating some content.\nA frame that displays an image while keeping aspect ratio.\nSets the distribution of space between and around content …\nAn element decorating some content.\nA widget that only rebuilds its contents when necessary.\nEmit messages on mouse events.\nA piece of logic that can traverse the widget tree of an …\nA collection of panes distributed using either vertical or …\nA container which displays overlays when a popup widget is …\nA bar that displays progress.\nA circular button representing a choice.\nA widget that is aware of its dimensions.\nAn horizontal bar and a handle that selects a single value …\nAn amount of empty space.\nThe gap between the first and last items is exactly HALF …\nThe first and last items are aligned flush with the edges …\nThe gap between the first and last items is exactly THE …\nItems are packed toward the start of the axis\nItems are stretched to fill the container\nA vector graphics image.\nA bunch of text.\nA multi-line text input.\nA field that can be filled with text.\nRepresent the data used to display a <code>Toast</code>\nAn vertical bar and a handle that selects a single value …\nA component that displays information and allows …\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nAligns the contents of the <code>Container</code> to the bottom.\nAligns the contents of the <code>Container</code> to the left.\nAligns the contents of the <code>Container</code> to the right.\nAligns the contents of the <code>Container</code> to the top.\nSets the content alignment for the horizontal axis of the …\nSets the content alignment for the vertical axis of the …\nSets the input to be always active. This makes it behave …\nA container which constraints itself to a specific aspect …\nSets the border radius of the image.\nDefines breakpoints to visibly mark on the slider.\nBuild the widget\nButton widgets for COSMIC applications.\nA widget that displays an interactive calendar.\nA widget that displays an interactive calendar.\nCanvases can be leveraged to draw interactive 2D graphics.\nCreates a new <code>Canvas</code>.\nCenters the contents in both the horizontal and vertical …\nPushes an element to the center region.\nSets the width of the <code>Container</code> and centers its contents …\nSets the height of the <code>Container</code> and centers its contents …\nCheckboxes can be used to let users make binary choices.\nCreates a new <code>Checkbox</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nSets the style class of the <code>Checkbox</code>.\nSets the style class of the <code>Container</code>.\nSets the style variant of this <code>Button</code>.\nSets the style class of the <code>PaneGrid</code>.\nSets the style class of the <code>ProgressBar</code>.\nSets the style class of the <code>Slider</code>.\nSets the style class of the <code>TextEditor</code>.\nSets the style class of the <code>VerticalSlider</code>.\nSets the style class of the <code>Svg</code>.\nSets whether the contents of the <code>Container</code> should be …\nWidgets for selecting colors with a color picker.\nA container which aligns its children in a column.\nA container which aligns its children in a column.\nCombo boxes display a dropdown list of searchable and …\nCreates a new <code>ComboBox</code>.\nContainers let you align a widget inside their boundaries.\nCreates a new <code>Container</code> with the provided content.\nOperates on a widget that contains other widgets.\nSets the <code>ContentFit</code> of the <code>Svg</code>.\nSets the <code>ContentFit</code> of the <code>Image</code>.\nAn overlayed widget that attaches a toggleable context …\nAn overlayed widget that attaches a toggleable context …\nA context menu is a menu in a graphical user interface …\nA context menu is a menu in a graphical user interface …\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nOperates on a custom widget.\nSets the optional default value for the <code>Slider</code>.\nSets the optional default value for the <code>VerticalSlider</code>.\nControls the density of the headerbar.\nSets the description of the <code>Checkbox</code>.\nSets the description of the <code>Button</code>.\nSets the description of the <code>Slider</code>.\nSets the description of the <code>Svg</code>.\nSets the description of the <code>Image</code>.\nSets the description of the <code>Checkbox</code>.\nSets the description of the <code>Button</code>.\nSets the description of the <code>Slider</code>.\nSets the description of the <code>Svg</code>.\nSets the description of the <code>Image</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nAn element to distinguish a boundary between two elements.\nSets the mode of this <code>TextInput</code> to be a drag and drop icon.\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nAdds the drag destination rectangles of the widget. Runs …\nSet the drag threshold.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nDraws the <code>TextInput</code> with the given <code>Renderer</code>, overriding its\nDisplays a list of options in a popover menu on select.\nDisplays a list of options in a popover menu on select.\nA text label which can transform into a text input on …\nPushes an element to the end region.\nSets the error message of the <code>TextInput</code>.\nApplies the <strong>Extra Large</strong> button size preset.\nApplies the <strong>Extra Small</strong> button size preset.\nSets the <code>FilterMethod</code> of the <code>Image</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nResponsively generates rows of widgets based on the …\nResponsively generates rows of widgets based on the …\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nOperates on a widget that can be focused.\nFocused state of the window\nSets the <code>Renderer::Font</code> of the text of the <code>Checkbox</code>.\nSets the <code>Renderer::Font</code> of the <code>ComboBox</code>.\nSets the <code>Font</code> of the <code>TextEditor</code>.\nSets the <code>Font</code> of the <code>TextInput</code>.\nSets the the <code>Button</code> to enabled whether or not it has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Svg</code> that will display the contents of the …\nArrange widgets with a grid layout.\nArrange widgets with a grid layout.\nSets the height of the <code>Container</code>.\nSets the height of the <code>Button</code>.\nSets the height of the <code>PaneGrid</code>.\nSets the height of the <code>ProgressBar</code>.\nSets the height of the <code>Slider</code>.\nSets the height of the <code>TextEditor</code>.\nSets the height of the <code>VerticalSlider</code>.\nSets the height of the <code>Svg</code>.\nSets the height of the <code>Space</code>.\nSets the height of the <code>Image</code> boundaries.\nSets the height of the <code>Canvas</code>.\nSets the helper text of the <code>TextInput</code>.\nHighlights the <code>TextEditor</code> with the given <code>Highlighter</code> and a …\nCreates a new <code>Space</code> widget that fills the available …\nLazily-generated SVG icon widget for Iced.\nCreate an <code>Icon</code> from a pre-existing <code>Handle</code>\nSets the <code>Icon</code> of the <code>Checkbox</code>.\nSets the <code>text_input::Icon</code> of the <code>ComboBox</code>.\nSets the <code>Id</code> of the <code>Button</code>.\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nReturns the id of the widget\nSets the [<code>Id</code>] of the <code>ContextDrawer</code>.\nSets the <code>Id</code> of the <code>TextInput</code>.\nImages display raster graphics in different formats (PNG, …\nCreates a new <code>Image</code>.\nCreates a new inline <code>TextInput</code>.\nSets the style class of the input of the <code>ComboBox</code>.\nSets the style of the input of the <code>ComboBox</code>.\nThe <code>mouse::Interaction</code> to use when hovering the area.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the headerbar should be compact\nHeaderBar used for server-side decorations\nSets the closure to produce key bindings on key presses.\nSets the label of the <code>Button</code>.\nSets the label of the <code>Slider</code>.\nSets the label of the <code>Svg</code>.\nSets the text of the <code>TextInput</code>.\nSets the label of the <code>Image</code>.\nApplies the <strong>Large</strong> button size preset.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nSets the start [<code>Icon</code>] of the <code>TextInput</code>.\nSets the <code>LineHeight</code> of the <code>ComboBox</code>.\nSets the <code>text::LineHeight</code> of the <code>TextEditor</code>.\nSets the [<code>LineHeight</code>] of the <code>TextInput</code>.\nSets the text input to manage its input value or not\nMap the message type of the context drawer to another\nSets the maximum height of the <code>Container</code>.\nSets the maximum width of the <code>Container</code>.\nMaximized state of the window\nApplies the <strong>Medium</strong> button size preset.\nA <code>MenuBar</code> widget for displaying [<code>MenuTree</code>]s\nSets the style class of the menu of the <code>ComboBox</code>.\nSets the style of the menu of the <code>ComboBox</code>.\nA container intercepting mouse events.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nSets the name of the <code>Checkbox</code>.\nSets the name of the <code>Button</code>.\nSets the name of the <code>Slider</code>.\nSets the name of the <code>Svg</code>.\nSets the name of the <code>Image</code>.\nNavigation side panel for switching between views.\nNavigation side panel for switching between views.\nNavigation side panel for switching between views. Can …\nA button for toggling the navigation side panel.\nCreates a custom <code>Id</code>.\nCreates a <code>MouseArea</code> with the given content.\nCreates a new <code>Checkbox</code>.\nCreates a new <code>ComboBox</code> with the given list of options, a …\nCreates a <code>Container</code> with the given content.\nCreates an empty <code>ContextDrawer</code>.\nCreates a <code>PaneGrid</code> with the given <code>State</code> and view function.\nCreates a new <code>ProgressBar</code>.\nCreates a new <code>Slider</code>.\nCreates new <code>TextEditor</code> with the given <code>Content</code>.\nCreates a new <code>VerticalSlider</code>.\nCreates a new <code>Responsive</code> widget with a closure that …\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nCreates a new <code>Svg</code> from the given <code>Handle</code>.\nCreates an amount of empty <code>Space</code> with the given width and …\nCreates a new <code>TextInput</code>.\nCreates a new <code>Dropdown</code> with the given list of selections, …\nCreates a new <code>Image</code> with the given path.\nCreates a new <code>Canvas</code>.\nSets the message that should be produced when some action …\nSets the message that will be produced when a <code>Pane</code> of the …\nSets the message that will be produced when the outside …\nA message emitted when the close button is pressed.\nOptionally assigns message to <code>on_close</code> event.\nThe message to emit on a double click.\nA message emitted when the header is double clicked, …\nThe message to emit on a left double button press.\nThe message to emit when a drag is initiated.\nEnables the drag and drop interactions of the <code>PaneGrid</code>, …\nA message emitted when dragged.\nThe message to emit when the mouse enters the area.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nThe message to emit when the mouse exits the area.\nEmits a message when an unfocused text input has been …\nSets the message that should be produced when some text is …\nSets the message that should be produced when some text is …\nA message emitted when the maximize button is pressed.\nThe message to emit on a middle button press.\nThe message to emit on a middle button release.\nA message emitted when the minimize button is pressed.\nThe message to emit when the mouse moves in the area.\nSets the message that will be produced when the  <code>ComboBox</code> …\nSets the message that will be produced when an option of …\nSets the message that should be produced when some text is …\nThe message to emit on a left button press.\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nThe message to emit on a left button release.\nSets the release message of the <code>Slider</code>. This is called …\nSets the release message of the <code>VerticalSlider</code>. This is …\nEnables the resize interactions of the <code>PaneGrid</code>, which will\nA message emitted when the header is right clicked.\nThe message to emit on a right button press.\nThe message to emit on a right button release.\nThe message to emit when scroll wheel is used\nEmits a message when a focused text input receives the …\nOptionally emits a message when a focused text input …\nEmits a message when the Tab key has been captured, which …\nSets the function that will be called when the <code>Checkbox</code> is …\nEmits a message when the editable state of the input …\nSets the function that will be called when the <code>Checkbox</code> is …\nEmits a message when a focused text input has been …\nSets the opacity of the <code>Svg</code>.\nSets the opacity of the <code>Image</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nSets the <code>Padding</code> of the <code>ComboBox</code>.\nSets the <code>Padding</code> of the <code>Container</code>.\nSets the <code>Padding</code> of the <code>Button</code>.\nSets the <code>Padding</code> of the <code>TextEditor</code>.\nSets the <code>Padding</code> of the <code>TextInput</code>.\nPane grids let your users split regions of your …\nCreates a <code>PaneGrid</code> with the given <code>pane_grid::State</code> and …\nConverts the <code>TextInput</code> into a secure password input.\nSets the placeholder of the <code>TextEditor</code>.\nA container which displays an overlay when a popup widget …\nProgress bars visualize the progression of an extended …\nCreates a new <code>ProgressBar</code>.\nCreate choices using radio buttons.\nresets the id counter\nCreates a new <code>Responsive</code> widget with a closure that …\nApplies the given <code>Rotation</code> to the <code>Svg</code>.\nApplies the given <code>Rotation</code> to the <code>Image</code>.\nA container which aligns its children in a row.\nA container which aligns its children in a row.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nOperates on a widget that can be scrolled.\nCreates a new search <code>TextInput</code>.\nCreates a new secure <code>TextInput</code>.\nA widget providing a conjoined set of linear items that …\nA selection of multiple choices appearing as a conjoined …\nSelects all text when the text input is focused\nSets the widget to a selected state.\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nSets the id of the widget This may be called while diffing …\nWhether the corners of the window should be sharp\nSets the optional “shift” step for the <code>Slider</code>.\nSets the optional “shift” step for the <code>VerticalSlider</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nSets the size of the <code>Checkbox</code>.\nSets the text sixe of the <code>ComboBox</code>.\nSets the text size of the <code>TextEditor</code>.\nSets the text size of the <code>TextInput</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nSliders let users set a value by moving an indicator.\nCreates a new <code>Slider</code>.\nSets the spacing between the <code>Checkbox</code> and the text.\nSets the spacing <em>between</em> the panes of the <code>PaneGrid</code>.\nA control for incremental adjustments of a value.\nHorizontal spin button widget.\nPushes an element to the start region.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nSets the step size of the <code>Slider</code>.\nSets the step size of the <code>VerticalSlider</code>.\nSets the style of the <code>Checkbox</code>.\nSets the style of the <code>Container</code>.\nSets the style of the <code>PaneGrid</code>.\nSets the style of the <code>ProgressBar</code>.\nSets the style of the <code>Slider</code>.\nSets the style of the <code>TextEditor</code>.\nSets the style of the <code>VerticalSlider</code>.\nSets the style of the <code>Svg</code>.\nSets the style of the <code>TextInput</code>.\nSets the window id of the <code>TextInput</code> and the window id of …\nSvg widgets display vector graphics in your application.\nCreates a new <code>Svg</code> widget from the given <code>Handle</code>.\nSymbolic icons inherit their color from the renderer if a …\nA collection of tabs for developing a tabbed interface.\nA widget allowing the user to display tables of …\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nCreates a new <code>Text</code> widget with the provided content.\nText editors display a multi-line text input for text …\nCreates a new <code>TextEditor</code>.\nA text input widget from iced widgets plus some added …\nCreates a new <code>TextInput</code>.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nOperates on a widget that has text input.\nSets the text <code>text::LineHeight</code> of the <code>Checkbox</code>.\nSets the <code>text::Shaping</code> strategy of the <code>Checkbox</code>.\nSets the text size of the <code>Checkbox</code>.\nSets the <code>text::Wrapping</code> strategy of the <code>Checkbox</code>.\nDefines the title of the window\nA widget that displays toasts.\nCreate a new Toaster widget.\nSets the end [<code>Icon</code>] of the <code>TextInput</code>.\nCreates a unique <code>Id</code>.\nSliders let users set a value by moving an indicator.\nCreates a new <code>VerticalSlider</code>.\nCreates a new <code>Space</code> widget that fills the available …\nVertical spin button widget.\nConverts the headerbar builder into an Iced element.\nSets the width of the <code>Checkbox</code>.\nSets the width of the <code>ComboBox</code>.\nSets the width of the <code>Container</code>.\nSets the width of the <code>Button</code>.\nSets the width of the <code>PaneGrid</code>.\nSets the width of the <code>ProgressBar</code>.\nSets the width of the <code>Slider</code>.\nSets the width of the <code>TextEditor</code>.\nSets the width of the <code>VerticalSlider</code>.\nSets the width of the <code>Svg</code>.\nSets the width of the <code>Space</code>.\nSets the width of the <code>TextInput</code>.\nSets the width of the <code>Image</code> boundaries.\nSets the width of the <code>Canvas</code>.\nCreates an amount of vertical <code>Space</code>.\nCreates an amount of horizontal <code>Space</code>.\nSets the <code>Wrapping</code> strategy of the <code>TextEditor</code>.\nA container which constraints itself to a specific aspect …\nThe theme catalog of a <code>Container</code>.\nThe item class of the <code>Catalog</code>.\nThe appearance of a container.\nget the a11y nodes for the widget\nSets the content alignment for the horizontal axis of the …\nSets the content alignment for the vertical axis of the …\nUpdates the background of the <code>Style</code>.\nThe <code>Background</code> of the container.\nUpdates the border of the <code>Style</code>.\nThe <code>Border</code> of the container.\nCenters the contents in the horizontal and vertical axis …\nCenters the contents in the horizontal axis of the …\nCenters the contents in the vertical axis of the <code>Container</code>.\nSets the style of the <code>Container</code>.\nUpdates the text color of the <code>Style</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the <code>Container</code>.\nThe icon <code>Color</code> of the container.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the maximum height of the <code>Container</code> in pixels.\nSets the maximum width of the <code>Container</code>.\nSets the <code>Padding</code> of the <code>Container</code>.\nUpdates the shadow of the <code>Style</code>.\nThe <code>Shadow</code> of the container.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the container.\nSets the width of the [<code>self.</code>].\nA builder for constructing a custom <code>Button</code>.\nA generic button which emits a message when pressed.\nA set of rules that dictate the style of a button.\nThe supported style of the [<code>StyleSheet</code>].\nThe appearance of a button.\nProduces the active [<code>Appearance</code>] of a button.\nThe <code>Background</code> of the button.\nThe border <code>Color</code> of the button.\nThe border radius of the button.\nThe border width of the button.\nThe preferred style of the button.\nA button with a custom element for its content.\nAn image button which may contain any widget as its …\nA text button with the destructive style\nProduces the disabled [<code>Appearance</code>] of a button.\n[<code>Appearance</code>] when the button is the target of a DND …\n[<code>Appearance</code>] when the button is the target of a DND …\nApplies the <strong>Extra Large</strong> button size preset.\nApplies the <strong>Extra Small</strong> button size preset.\nProduces a <code>Task</code> that focuses the <code>Button</code> with the given <code>Id</code>.\nSets the preferred font size.\nSets the preferred font weight.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the preferred height of the button.\nProduces the hovered [<code>Appearance</code>] of a button.\nA button constructed from an icon handle, using icon …\nThe icon <code>Color</code> of the button.\nSets the preferred size of icons.\nSets the <code>Id</code> of the button.\nA button constructed from an image handle, using image …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe label to display within the button.\nApplies the <strong>Large</strong> button size preset.\nComputes the layout of a <code>Button</code>.\nSets the prefered font line height.\nHyperlink button widget\nA hyperlink button.\nApplies the <strong>Medium</strong> button size preset.\nReturns the <code>mouse::Interaction</code> of a <code>Button</code>.\nSets the message that will be produced when the button is …\nSet the value of [<code>on_press</code>] as either <code>Some</code> or <code>None</code>.\nThe <code>Color</code> of the outline.\nAn outline placed around the border.\nThe <code>Background</code> overlay of the button.\nSets the preferred padding of the button.\nProduces the pressed [<code>Appearance</code>] of a button.\nBackground color of the selection indicator\nThe amount of offset to apply to the shadow of the button.\nSets the preferred spacing between elements in the button.\nA text button with the standard style\nA text button with the suggested style\nA text button with the text style\nThe text <code>Color</code> of the button.\nSets the preferred width of the button.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA hyperlink button.\nA widget that displays an interactive calendar.\nReturns the argument unchanged.\nGets the first date that will be visible on the calender\nCalls <code>U::from(self)</code>.\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA simple cache that stores generated <code>Geometry</code> to avoid …\nA widget capable of drawing 2D graphics.\nA <code>Canvas</code> event.\nThe style used to fill geometry.\nThe frame supported by a renderer.\nThe geometry supported by a renderer.\nA fill which linearly interpolates colors along a …\nA <code>Gradient</code> color.\nA cache group.\nA raster image that can be drawn.\nA keyboard event.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA linear gradient interpolates colors along a direction …\nA sharp corner.\nA mouse event.\nAn immutable set of points that may or may not be …\nThe state and logic of a <code>Canvas</code>.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe internal state mutated by the <code>Program</code>.\nThe style of a stroke.\nThe coloring style of some drawing.\nA bunch of text that can be drawn to a canvas\nA touch event.\nThe border radii of the image\nCreates a new <code>Path</code> representing a circle given its center …\nThe color of the text\nThe contents of the text\nDraws the state of the <code>Program</code>, producing a bunch of …\nComputes the <code>Path</code>s of the <code>Text</code> and draws them using the …\nHandle events of a canvas.\nFill <code>Geometry</code> with a certain style.\nThe filter method of the image.\nThe font of the text\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA gradient that can be used as a fill for some geometry.\nThe handle of the image.\nThe horizontal alignment of the text\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the <code>Group</code> can only ever have a single <code>Cache</code>…\nCreates a new <code>Path</code> representing a line segment given its …\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe line height of the text.\nThe shape to be used at the corners of paths or basic …\nReturns the current mouse interaction of the <code>Program</code>.\nReturns the current mouse interaction of the <code>Program</code>.\nReturns the current mouse interaction of the <code>Program</code>.\nCreates a new <code>Path</code> with the provided closure.\nThe offset of <code>LineDash::segments</code> to start the pattern.\nThe opacity of the image.\nPacks the <code>Gradient</code> for use in shader code.\nBuild different kinds of 2D shapes.\nThe position of the text relative to the alignment …\nReturns the internal <code>lyon_path::Path</code>.\nCreates a new <code>Path</code> representing a rectangle given its …\nThe rotation to be applied to the image; on its center.\nCreates a new <code>Path</code> representing a rounded rectangle given …\nThe fill rule defines how to determine what is inside and …\nThe alternating lengths of lines and gaps which describe …\nThe shaping strategy of the text.\nThe size of the text\nIf set to <code>true</code>, the image will be snapped to the pixel …\nCreate lines from a <code>Path</code> and assigns them various …\nThe color or gradient of the fill.\nThe color or gradient of the stroke.\nReturns the current <code>Path</code> with the given transform applied …\nGenerates a new unique cache <code>Group</code>.\nUpdates the <code>State</code> of the <code>Program</code>.\nUpdates the <code>State</code> of the <code>Program</code>.\nUpdates the <code>State</code> of the <code>Program</code>.\nThe vertical alignment of the text\nThe distance between the two edges of the stroke.\nSets the color of the <code>Stroke</code>.\nSets the <code>LineCap</code> of the <code>Stroke</code>.\nSets the <code>LineJoin</code> of the <code>Stroke</code>.\nSets the width of the <code>Stroke</code>.\nThe <code>Event</code> was handled and processed by a widget.\nA <code>Canvas</code> event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event.\nA mouse event.\nThe status of an <code>Event</code> after being processed.\nA touch event.\nThe style used to fill geometry.\nA <code>Gradient</code> color.\nThe fill rule defines how to determine what is inside and …\nA solid <code>Color</code>.\nThe coloring style of some drawing.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe fill rule defines how to determine what is inside and …\nThe color or gradient of the fill.\nA fill which linearly interpolates colors along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction …\nPacked <code>Gradient</code> data for use in shader code.\nAdds a new <code>ColorStop</code>, defined by an offset and a color, to …\nAdds multiple <code>ColorStop</code>s to the gradient.\nThe absolute ending position of the gradient.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Linear</code> builder.\nCreates a new <code>Packed</code> gradient for use in shader code.\nPacks the <code>Gradient</code> for use in shader code.\nThe absolute starting position of the gradient.\n<code>ColorStop</code>s along the linear gradient direction.\nA segment of a differentiable curve.\nA <code>Path</code> builder.\nAn immutable set of points that may or may not be …\nBuild and draw curves.\nAdds an <code>Arc</code> to the <code>Path</code> from <code>start_angle</code> to <code>end_angle</code> in a …\nAdds a circular arc to the <code>Path</code> with the given control …\nAdds a cubic Bézier curve to the <code>Path</code> given its two …\nBuilds the <code>Path</code> of this <code>Builder</code>.\nThe center of the arc.\nAdds a circle to the <code>Path</code> given its center coordinate and …\nCloses the current sub-path in the <code>Path</code> with a straight …\nAdds an ellipse to the <code>Path</code> using a clockwise direction.\nThe end of the segment’s angle, clockwise rotation from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConnects the last point in the <code>Path</code> to the given <code>Point</code> …\nMoves the starting point of a new sub-path to the given …\nCreates a new <code>Builder</code>.\nAdds a quadratic Bézier curve to the <code>Path</code> given its …\nThe radius of the arc.\nAdds a rectangle to the <code>Path</code> given its top-left corner …\nAdds a rounded rectangle to the <code>Path</code> given its top-left …\nThe start of the segment’s angle, clockwise rotation …\nA segment of a differentiable curve.\nAn elliptical <code>Arc</code>.\nThe center of the arc.\nThe center of the arc.\nThe end of the segment’s angle, clockwise rotation from …\nThe end of the segment’s angle, clockwise rotation from …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe radii of the arc’s ellipse. The horizontal and …\nThe radius of the arc.\nThe clockwise rotation of the arc’s ellipse.\nThe start of the segment’s angle, clockwise rotation …\nThe start of the segment’s angle, clockwise rotation …\nFlag parameters for arcs as described by the SVG …\nAn alias for <code>usize</code>.\nA view over a contiguous storage of custom attributes.\nInterface for objects storing custom attributes associated …\nAn alias for a slice of <code>f32</code> values.\nA beveled corner is to be used to join path segments. The …\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nThe stroke for each sub-path does not extend beyond its …\nID of a control point in a path.\nID of an endpoint point in a path.\nRepresents an event or edge of path.\nRefers to an event in a path.\nThe fill rule defines how to determine what is inside and …\nA path event representing endpoints and control points as …\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nLine cap as defined by the SVG specification.\nLine join as defined by the SVG specification.\nA sharp corner is to be used to join path segments.\nSame as a miter join, but if the miter limit is exceeded, …\nAn empty attribute slice.\nA simple path data structure.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nThe commands of a path encoded in a single array using IDs …\nA view over <code>PathCommands</code>.\nA path event representing endpoints and control points as …\nA view on a <code>Path</code>.\nA view over a sequence of endpoints forming a polygon.\nInterface for types types (typically endpoints and control …\nInterface for objects storing endpoints and control points …\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nAt each end of each sub-path, the shape representing the …\nA round corner is to be used to join path segments.\nThe positive or negative side of a vector or segment.\nAt the end of each sub-path, the shape representing the …\nThe two possible orientations for the edges of a shape to …\nReturns a view on the path commands.\nReturns a view on this <code>Path</code>.\nReturns a slice over an endpoint’s custom attributes.\nReturns a slice over an endpoint’s custom attributes.\nPath building utilities.\nCreates a PathCommandsBuilder to create path commands.\nCreates a Builder to build a path.\nCreates a BuilderWithAttributes to build a path with …\nA generic representation for paths that allow more control …\nReturns the event for a given event ID.\nReturns the event for a given event ID.\nReturns the event for a given event ID.\nReturns the event for a given event ID.\nReturns an iterator over the path, with endpoints and …\nReturns the first endpoint and its custom attributes if …\nIterate on a flattened approximation of the path with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the endpoint’s custom attributes as a slice of …\nIterates over the endpoint and control point ids of the …\nIterates over the endpoint and control point ids of the …\nReturns an iterator of <code>IdEvent</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuilds a <code>Path</code> from This iterator.\nReturns whether the path buffer is empty.\nReturns whether the path buffer is empty.\nReturns an iterator over the path commands.\nReturns an iterator over the path commands.\nIterates over the entire <code>Path</code>, ignoring custom attributes.\nIterates over the path.\nReturns an iterator of <code>Event&lt;&amp;T&gt;</code>.\nIterates over the entire <code>Path</code> with custom attributes.\nIterates over the entire <code>Path</code> with custom attributes.\nTools to iterate over paths.\nOf the four candidate arc sweeps, two will represent an …\nReturns the last endpoint and its custom attributes if any.\nReturns the number of paths in the path buffer.\nReturns the number of paths in the path buffer.\nf32 version of the lyon_geom types used everywhere. Most …\nCreates an Empty <code>Path</code>.\nReturns the next event id within the path.\nReturns the next event id within the path.\nReturns the next event id within the sub-path.\nReturns the next event id within the path.\nReturns the number of float attributes per endpoint.\nThe default path data structure.\nA container to store multiple paths contiguously.\nReturns an iterator of <code>PathEvent</code>.\nReturns a view on a path made of these commands with …\nSpecific path types for polygons.\nReturns a reversed version of this path in the form of an …\nReturns a reversed version of this path in the form of an …\nCreates an WithSvg to build a path with a rich set of …\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\n<code>lyon_path</code> traits reexported here for convenience.\nApplies a transform to all endpoints and control points of …\nThe radius of each corner of a rounded rectangle.\nBuilds a path.\nA Builder that approximates curves with successions of …\nA convenience wrapper for <code>PathBuilder</code> without custom …\nThe base path building interface.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nBuilds a path with a transformation applied.\nImplements an SVG-like building interface on top of a …\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing a circle.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path containing a single point.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nCloses the current sub path.\nCloses the current sub path.\nCloses the current sub path.\nCloses the current sub path.\nCloses the current sub path.\nCloses the current sub path.\nCloses the current sub path.\nCloses the current sub path.\nCloses the current sub path.\nCloses the current sub path.\nCloses the current sub path.\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nAdds a cubic bézier curve to the current sub-path.\nEnds the current sub path.\nEnds the current sub path.\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns a builder that approximates all curves with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdds an horizontal line segment.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nApplies the provided path event.\nApplies the provided path event.\nApplies the provided path event.\nApplies the provided path event.\nApplies the provided path event.\nApplies the provided path event.\nApplies the provided path event.\nApplies the provided path event.\nApplies the provided path event.\nApplies the provided path event.\nApplies the provided path event.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nAdds a quadratic bézier curve to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nReturns a builder that applies the given transformation to …\nAdds a vertical line segment.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nReturns a builder that support SVG commands.\nA view on a <code>PathCommands</code> buffer and two slices for …\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nThe commands of a path encoded in a single array using IDs …\nBuilds path commands.\nA view over <code>PathCommands</code>.\nAn iterator of <code>PathEvent</code>.\nConsumes the builder and returns path commands.\nReturns an iterator over the events of the path using …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over the events of the path using IDs.\nCreates a builder without allocating memory.\nCreates a pre-allocated builder.\nAn angle in radians\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nA 2d curve segment defined by four points: the beginning …\nAn infinite line defined by a point and a vector.\nA line defined by the equation …\nA linear segment.\nA 2d curve segment defined by three points: the beginning …\nAlias for <code>euclid::default::Rotation2D</code>\nCommon APIs to segment types.\nAn elliptic arc curve segment using the SVG’s end-point …\nAlias for <code>euclid::default::Transform2D</code>\nAlias for <code>euclid::default::Translation2D</code>\nA 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.\nReturn the curve after the split point.\nReturn the curve after the split point.\nReturn the curve after the split point.\nReturn the segment after the split point.\nReturn the curve after the split point.\nAngle in radians\nReturns the shortest signed angle between two angles.\nCompute the length of the segment using a flattened …\nCompute the length of the segment using a flattened …\nElliptic arc related maths and tools.\nReturn the curve before the split point.\nReturn the curve before the split point.\nReturn the curve before the split point.\nReturn the segment before the split point.\nReturn the curve before the split point.\nReturns a conservative rectangle that contains the curve.\nReturns a conservative rectangle that contains the curve.\nReturn the smallest rectangle containing this segment.\nReturns the smallest rectangle the curve is contained in\nReturns the smallest rectangle that contains this triangle.\nReturns the smallest range of x that contains this curve.\nReturns the smallest range of x that contains this curve.\nReturns a conservative range of x that contains this …\nReturns the smallest range of y that contains this curve.\nReturns the smallest range of y that contains this curve.\nReturns a conservative range of y that contains this …\nReturns a triangle containing this curve segment.\nCast from one numeric representation to another.\nCreate simple circle.\nClip this segment against a rectangle.\nHorizontally clip this segment against a range of the x …\nVertically clip this segment against a range of the y axis.\nComputes the closest point on this segment to <code>p</code>.\nAnalytic solution to finding the closest point on the …\nComputes the intersection points (if any) between this …\nComputes the intersections (if any) between this segment …\nSample the derivative at t (expecting t between 0 and 1).\nSample the curve’s derivative at t (expecting t between …\nSample the curve’s derivative at t (expecting t between …\nComputes the distance between this segment and a point.\nReturns the shortest distance between this segment and a …\nSample x derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample the x coordinate of the curve’s derivative at t …\nSample the x coordinate of the curve’s derivative at t …\nSample y derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSample the y coordinate of the curve’s derivative at t …\nSample the y coordinate of the curve’s derivative at t …\nEpsilon constants are usually not a good way to deal with …\nEpsilon constants are usually not a good way to deal with …\nEpsilon constants are usually not a good way to deal with …\nEpsilon constants are usually not a good way to deal with …\nEpsilon constants are usually not a good way to deal with …\nReturns a conservative rectangle that contains the curve.\nReturns a conservative rectangle the curve is contained in.\nReturns a conservative rectangle that contains the curve.\nReturns a conservative range of x that contains this curve.\nReturns a conservative range of x that contains this curve.\nReturns a conservative range of y that contains this curve.\nReturns a conservative range of y that contains this curve.\nComputes a “fat line” of this segment.\nComputes a “fat line” of this segment.\nReturns the flattened representation of the curve as an …\nReturns the flattened representation of the curve as an …\nReturns the flattened representation of the curve as an …\nReturns the flattened representation of the curve as an …\nFind the interval of the beginning of the curve that can …\nSwap the direction of the segment.\nSwap the direction of the segment.\nSwap the beginning and the end of the segment.\nReturns an inverted version of this segment where the …\nSwap the beginning and the end of the segment.\nApproximate the arc with a sequence of cubic bézier …\nApproximates the arc with a sequence of cubic bézier …\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nApproximates the curve with sequence of line segments.\nCompute a flattened approximation of the curve, invoking a …\nInvokes a callback at each inflection point if any.\nReturn local x extrema or None if this curve is monotonic.\nReturn local y extrema or None if this curve is monotonic.\nInvokes a callback for each monotonic part of the segment.\nInvokes a callback for each monotonic part of the segment.\nInvokes a callback for each monotonic part of the segment.\nInvokes a callback for each monotonic part of the segment.\nApproximate the arc with a sequence of quadratic bézier …\nApproximates the arc with a sequence of quadratic bézier …\nApproximates the cubic bézier curve with sequence of …\nApproximate the arc with a sequence of quadratic bézier …\nApproximates the arc with a sequence of quadratic bézier …\nApproximates the cubic bézier curve with sequence of …\nInvokes a callback for each x-monotonic part of the …\nInvokes a callback for each x-monotonic part of the …\nInvokes a callback for each x-monotonic part of the …\nInvokes a callback for each x-monotonic part of the …\nInvokes a callback for each y-monotonic part of the …\nInvokes a callback for each y-monotonic part of the …\nInvokes a callback for each y-monotonic part of the …\nInvokes a callback for each y-monotonic part of the …\nStart of the curve.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from the SVG arc notation.\nSample the curve’s angle at t (expecting t between 0 and …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nComputes the intersection (if any) between this segment …\nTest for triangle-triangle intersection.\nTest for triangle-segment intersection.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the curve can be approximated with a …\nReturns <code>true</code> if the angle is a finite number.\nReturns true if the curve can be approximated with a …\nReturns true if the curve can be approximated with a …\nReturns whether this segment is fully monotonic.\nReturns whether this segment is fully monotonic.\nReturns true if the curve can be safely approximated with …\nPer SVG spec, this arc should be rendered as a line_to …\nReturns whether this segment is monotonic on the x axis.\nReturns whether this segment is monotonic on the x axis.\nReturns whether this segment is monotonic on the y axis.\nReturns whether this segment is monotonic on the y axis.\nOf the four candidate arc sweeps, two will represent an …\nComputes the length of this segment.\nComputes the length of this segment.\nLinear interpolation between two angles, using the …\nComputes the intersection points (if any) between this …\nComputes the intersection points (if any) between this …\nComputes the intersections (if any) between this segment …\nComputes the intersections (if any) between this segment a …\nComputes the intersection points (if any) between this …\nComputes the intersections (if any) between this segment …\nComputes the intersections (if any) between this segment …\nReturn the x inflection point or None if this curve is …\nReturn the y inflection point or None if this curve is …\nComputes third mid-point of this segment.\nComputes the number of quadratic bézier segments required …\nShorthand for <code>Point::new(x, y)</code>.\nReturns this angle in the [0..2*PI[ range.\nComputes the intersection points (if any) between this …\nComputes the intersections (if any) between this segment a …\nSample the curve at t (expecting t between 0 and 1).\nSample the curve at t (expecting t between 0 and 1).\nSample the curve at t (expecting t between 0 and 1).\nSample the segment at t (expecting t between 0 and 1).\nSample the curve at t (expecting t between 0 and 1).\nSample the curve’s tangent at t (expecting t between 0 …\nChanges the segment’s length, moving destination point.\nReturns this angle in the ]-PI..PI] range.\nReturns <code>(sin(self), cos(self))</code>.\nShorthand for <code>Size::new(x, y)</code>.\nReturn the parameter values corresponding to a given x …\nReturn the parameter values corresponding to a given y …\nSplit this curve into two sub-curves.\nSplit this curve into two sub-curves.\nSplit this curve into two sub-curves.\nSplit this curve into two sub-segments.\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nReturn the sub-curve inside a given range of t.\nReturn the sub-curve inside a given range of t.\nReturn the sub-segment inside a given range of t.\nReturn the sub-curve inside a given range of t.\nComputes the squared distance between this segment and a …\nReturned the squared distance to a point.\nReturns the shortest squared distance between this segment …\nComputes the squared length of this segment.\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nEnd of the curve.\nConverts this arc from endpoints to center notation.\nElevate this curve to a third order bézier.\nCast angle to <code>f32</code>.\nCast angle <code>f64</code>.\nReturns the line containing this segment.\nApproximate the curve with a single quadratic bézier …\nEvaluates an upper bound on the maximum distance between …\nConvert to the SVG arc notation.\nReturns the vector between this segment’s <code>from</code> and <code>to</code> …\n[Not implemented] Applies the transform to this triangle …\nApplies the transform to this curve and returns the …\nApplies the transform to this segment and returns the …\nApplies the transform to this curve and returns the …\nFallible cast from one numeric representation to another.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nSample x at t (expecting t between 0 and 1).\nSample x at t (expecting t between 0 and 1).\nSample x at t (expecting t between 0 and 1).\nSample x at t (expecting t between 0 and 1).\nSample x at t (expecting t between 0 and 1).\nSample x at t (expecting t between 0 and 1).\nSample x at t (expecting t between 0 and 1).\nSample x at t (expecting t between 0 and 1).\nSample x at t (expecting t between 0 and 1).\nSample the x coordinate of the curve at t (expecting t …\nSample the x coordinate of the segment at t (expecting t …\nSample the x coordinate of the curve at t (expecting t …\nThe <code>x</code> (traditionally, horizontal) coordinate.\nFind the advancement of the x-most position in the curve.\nFind the advancement of the x-most position in the curve.\nFind the x-least position in the curve.\nFind the advancement of the x-least position in the curve.\nSample y at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nSample the y coordinate of the curve at t (expecting t …\nSample the y coordinate of the segment at t (expecting t …\nSample the y coordinate of the curve at t (expecting t …\nThe <code>y</code> (traditionally, vertical) coordinate.\nFind the advancement of the y-most position in the curve.\nFind the advancement of the y-most position in the curve.\nFind the advancement of the y-least position in the curve.\nFind the advancement of the y-least position in the curve.\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nFlattening iterator for arcs.\nAn elliptic arc curve segment using the SVG’s end-point …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOf the four candidate arc sweeps, two will represent an …\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nA string with a fixed capacity.\nA vector with a fixed capacity.\nError value indicating insufficient capacity\nA draining iterator for <code>ArrayVec</code>.\nBy-value iterator for <code>ArrayVec</code>.\nReturn a raw mutable pointer to the vector’s buffer.\nReturn a raw mutable pointer to the string’s buffer.\nReturn a mutable slice containing all elements of the …\nReturns the remaining items of this iterator as a mutable …\nReturn a mutable string slice of the whole <code>ArrayString</code>.\nReturn a raw pointer to the vector’s buffer.\nReturn a raw pointer to the string’s buffer.\nReturn a slice containing all elements of the vector.\nReturns the remaining items of this iterator as a slice.\nReturn a string slice of the whole <code>ArrayString</code>.\nReturn the capacity of the <code>ArrayVec</code>.\nReturn the capacity of the <code>ArrayString</code>.\nRemove all elements in the vector.\nMake the string empty.\nReturn an empty array\nReturn an empty <code>ArrayString</code>\nCreate a draining iterator that removes the specified …\nExtract the overflowing element\nExtend the <code>ArrayVec</code> with an iterator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>ArrayString</code> from a <code>str</code>.\nReturns the argument unchanged.\nCreate a new <code>ArrayString</code> from a byte string literal.\nCreate an <code>ArrayVec</code> from an iterator.\nInsert <code>element</code> at position <code>index</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the inner fixed size array, if it is full to its …\nReturn the inner fixed size array.\nReturns whether the <code>ArrayVec</code> is empty.\nReturns whether the string is empty.\nReturn true if the <code>ArrayVec</code> is completely filled to its …\nReturn if the <code>ArrayString</code> is completely filled.\nReturn the number of elements in the <code>ArrayVec</code>.\nReturn the length of the string.\nCreate a new empty <code>ArrayVec</code>.\nCreate a new empty <code>ArrayString</code>.\nCreate a new <code>CapacityError</code> from <code>element</code>.\nCreate a new empty <code>ArrayVec</code> (const fn).\nCreate a new empty <code>ArrayString</code> (const fn).\nRemove the last element in the vector and return it.\nRemoves the last character from the string and returns it.\nRemove the element at <code>index</code> and shift down the following …\nPush <code>element</code> to the end of the vector.\nAdds the given char to the end of the string.\nAdds the given string slice to the end of the string.\nPush <code>element</code> to the end of the vector without checking the …\nReturns the capacity left in the <code>ArrayVec</code>.\nReturns the capacity left in the <code>ArrayString</code>.\nRemove the element at <code>index</code> and shift down the following …\nRemoves a <code>char</code> from this <code>ArrayString</code> at a byte position …\nRetains only the elements specified by the predicate.\nSet the vector’s length without dropping or moving out …\nSet the strings’s length.\nConvert into a <code>CapacityError</code> that does not carry an …\nRemove the element at <code>index</code> and swap the last element into …\nRemove the element at <code>index</code> and swap the last element into …\nReturns the ArrayVec, replacing the original with a new …\nShortens the vector, keeping the first <code>len</code> elements and …\nShortens this <code>ArrayString</code> to the specified length.\nCopy all elements from the slice and append to the <code>ArrayVec</code>…\nInsert <code>element</code> at position <code>index</code>.\nPush <code>element</code> to the end of the vector.\nAdds the given char to the end of the string.\nAdds the given string slice to the end of the string.\nCreate a new <code>ArrayString</code> value fully filled with ASCII …\nThe polynomial form of a cubic bézier segment.\nA 2d curve segment defined by four points: the beginning …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn angle in radians\nA 2d vector of booleans, useful for component-wise logic …\nA 3d vector of booleans, useful for component-wise logic …\nA 2d axis aligned rectangle represented by its minimum and …\nAn axis aligned 3D box represented by its minimum and …\nHomogeneous vector in 3D space.\nA one-dimensional distance, with value represented by <code>T</code> …\nA 2d Point tagged with a unit.\nA 3d Point tagged with a unit.\nA 2d Rectangle optionally tagged with a unit.\nA rigid transformation. All lengths are preserved under …\nA transform that can represent rotations in 2d, …\nA transform that can represent rotations in 3d, …\nA scaling factor between two different units of …\nA group of 2D side offsets, which correspond to …\nA 2d size tagged with a unit.\nA 3d size tagged with a unit.\nA 2d transform represented by a column-major 3 by 3 …\nA 3d transform stored as a column-major 4 by 4 matrix.\nA 2d transformation from a space to another that can only …\nA 3d transformation from a space to another that can only …\nTrait for basic trigonometry functions, so they can be …\nThe default unit.\nA 2d Vector tagged with a unit.\nA 3d Vector tagged with a unit.\nComputes the absolute value of each component.\nComputes the absolute value of each component.\nComputes the vector with absolute values of each component.\nComputes the vector with absolute values of each component.\nReturns <code>true</code> if all components are <code>true</code> and <code>false</code> …\nReturns <code>true</code> if all components are <code>true</code> and <code>false</code> …\nReturns new vector with by-component AND operation applied.\nReturns new vector with by-component AND operation applied.\nAngle in radians\nReturns the signed angle between this vector and the x …\nReturns the signed angle between this vector and another …\nReturns the positive angle between this vector and another …\nReturns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.\nReturns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.\nReturns <code>true</code> if this transform is approximately equal to …\nReturns <code>true</code> if this transform is approximately equal to …\nReturns <code>true</code> if this transform is approximately equal to …\nReturns <code>true</code> if this transform is approximately equal to …\nReturns <code>true</code> if this transform is approximately equal to …\nUtilities for testing approximate ordering - especially …\nReturns result of multiplication of both components\nCreates a rotation around a given axis.\nCreates a rotation around the x axis.\nCreates a rotation around the y axis.\nCreates a rotation around the z axis.\nShorthand for …\nShorthand for <code>BoolVector2D { x, y }</code>.\nShorthand for <code>BoolVector3D { x, y, z }</code>.\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast from one numeric representation to another, …\nCast the unit\nCast the unit\nCast the unit\nCast the unit, preserving the numeric value.\nCast the unit, preserving the numeric value.\nCast the unit\nCast the unit, preserving the numeric value.\nCast the unit, preserving the numeric value.\nCast the unit\nCast the unit\nCast the unit.\nCast the unit.\nRounds each component to the smallest integer equal or …\nSee <code>Point2D::ceil</code>.\nRounds each component to the smallest integer equal or …\nSee <code>Point3D::ceil</code>.\nSee <code>Size2D::ceil</code>.\nRounds each component to the smallest integer equal or …\nSee <code>Size3D::ceil</code>.\nRounds each component to the smallest integer equal or …\nRounds each component to the smallest integer equal or …\nSee <code>Vector2D::ceil</code>.\nSee <code>Vector3D::ceil</code>.\nRounds each component to the smallest integer equal or …\nReturns the point each component of which clamped by …\nReturns the point each component of which clamped by …\nReturns the point each component of which clamped by …\nReturns the size each component of which clamped by …\nReturns the size each component of which clamped by …\nReturns the vector each component of which is clamped by …\nReturns the vector each component of which is clamped by …\nReturn this vector with minimum and maximum lengths …\nReturn this vector with minimum and maximum lengths …\nReturns the component-wise division of the two vectors.\nReturns the component-wise division of the two vectors.\nReturns the component-wise multiplication of the two …\nReturns the component-wise multiplication of the two …\nReturns <code>true</code> if this box2d contains the point <code>p</code>. A point …\nReturns <code>true</code> if this box3d contains the point <code>p</code>. A point …\nReturns <code>true</code> if this rectangle contains the point. Points …\nReturns <code>true</code> if this box contains the interior of the …\nReturns <code>true</code> if this box3d contains the interior of the …\nReturns <code>true</code> if this box contains the point <code>p</code>. A point is …\nReturns <code>true</code> if this box3d contains the point <code>p</code>. A point …\nReturns <code>true</code> if this rectangle contains the interior of …\nReturns the norm of the cross product [self.x, self.y, 0] …\nCross product.\nDecompose this into a translation and an rotation to be …\nA set of aliases for all types, tagged with the default …\nReturns the identity transform.\nReturns the identity transform.\nThe extent of the element in the <code>U</code> units along the <code>z</code> axis.\nComputes and returns the determinant of this transform.\nCompute the determinant of the transform.\nCalculates Euclidean division, the matching method for …\nCalculates Euclidean division, the matching method for …\nDot product.\nDot product.\nReturns vector with results of “equal” operation on …\nReturns vector with results of “equal” operation on …\nReturns vector with results of “equal” operation on …\nReturns vector with results of “equal” operation on …\nCreates a rotation from Euler angles.\nCreate a 3d point from this one, using the specified z …\nCreate a 3d vector from this one, using the specified z …\nSee <code>Point2D::floor</code>.\nRounds each component to the biggest integer equal or …\nRounds each component to the biggest integer equal or …\nSee <code>Point3D::floor</code>.\nRounds each component to the biggest integer equal or …\nSee <code>Size2D::floor</code>.\nSee <code>Size3D::floor</code>.\nRounds each component to the biggest integer equal or …\nRounds each component to the biggest integer equal or …\nSee <code>Vector2D::floor</code>.\nSee <code>Vector3D::floor</code>.\nRounds each component to the biggest integer equal or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructor taking angle and length\nCreate a transform providing its components via an array …\nCreate a transform providing its components via an array …\nEquivalent to <code>from_array</code> with elements packed two at a time\nEquivalent to <code>from_array</code> with elements packed four at a …\nConstructor setting the same value to all sides, taking a …\nConstructor taking properly Lengths instead of scalar …\nConstructor taking properly Lengths instead of scalar …\nConstructor taking a typed Length for each side.\nConstructor taking scalar strongly typed lengths.\nConstructor taking scalar strongly typed lengths.\nConstructor taking properly  Lengths instead of scalar …\nConstructor taking properly  Lengths instead of scalar …\nConstructor.\nConstructor.\nReturns the smallest box containing all of the provided …\nReturns the smallest box containing all of the provided …\nReturns the smallest rectangle defined by the …\nConvenience function to create a scale transform from a …\nCreates a <code>Box2D</code> of the given size, at offset zero.\nCreates a <code>Box3D</code> of the given size, at offset zero.\nCreates a rect of the given size, at offset zero.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unit-less value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nTag a unitless value with units.\nConstruct side offsets from min and a max vector offsets.\nConstruct side offsets from min and a max vector offsets.\nUnpack the underlying value from the wrapper.\nReturns the underlying scalar scale factor.\nReturns self.angle as a strongly typed <code>Angle&lt;T&gt;</code>.\nReturns vector with results of “greater then” …\nReturns vector with results of “greater than” …\nReturns vector with results of “greater than” …\nReturns vector with results of “greater than” …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis.\nComponent multiplied by the imaginary number <code>i</code>.\nConstruct an identity transform\nCreates the identity rotation.\nCreates the identity rotation.\nCreates an identity scale (1.0).\nCreates no-op translation (both <code>x</code> and <code>y</code> is <code>zero()</code>).\nCreates no-op translation (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).\nCreate an identity matrix:\nCreates an identity matrix:\nInflates the box by the specified sizes on each side …\nInflates the box by the specified sizes on each side …\nCalculate the size and position of an inner box.\nCalculate the size and position of an inner rectangle.\nComputes the intersection of two boxes, returning <code>None</code> if …\nComputes the intersection of two boxes without check …\nReturns <code>true</code> if the two boxes intersect.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInverts the transformation\nReturns the inverse of this rotation.\nReturns the inverse of this rotation.\nThe inverse Scale (1.0 / self).\nReturn the inverse transformation.\nReturn the inverse transformation.\nReturns the inverse transform if possible.\nReturns the inverse transform if possible.\nReturns <code>true</code> if this transform can be represented with a …\nCheck whether shapes on the XY plane with Z pointing …\nReturns <code>true</code> if the size is zero, negative or NaN.\nReturns <code>true</code> if the size is zero, negative or NaN.\nReturns <code>true</code> if any component of size is zero, negative, …\nReturns <code>true</code> if any component of size is zero, negative or …\nReturns <code>true</code> if all members are finite.\nReturns <code>true</code> if all members are finite.\nReturns <code>true</code> if all members are finite.\nReturns <code>true</code> if all members are finite.\nReturns <code>true</code> if all members are finite.\nReturns <code>true</code> if all members are finite.\nReturns <code>true</code> if all members are finite.\nReturns <code>true</code> if all members are finite.\nReturns <code>true</code> if all members are finite.\nReturns <code>true</code> if this scale has no effect.\nCheck if translation does nothing (both x and y is <code>zero()</code>).\nCheck if translation does nothing (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).\nReturns whether it is possible to compute the inverse …\nReturns whether it is possible to compute the inverse …\nReturns <code>true</code> if the box has a negative area.\nReturns <code>true</code> if the box has a negative volume.\nReturns <code>true</code> if norm of this quaternion is (approximately) …\nReturns <code>true</code> if both components is positive and <code>false</code> any …\nReturns <code>true</code> if all components is positive and <code>false</code> any …\nReturns <code>true</code> if all side offsets are zero.\nComponent multiplied by the imaginary number <code>j</code>.\nComponent multiplied by the imaginary number <code>k</code>.\nReturns the vector length.\nReturns the vector length.\nLinearly interpolate between this box and another box.\nLinearly interpolate between this box3d and another box3d.\nLinearly interpolate between this length and another …\nLinearly interpolate between this point and another point.\nLinearly interpolate between this point and another point.\nLinearly interpolate between this rectangle and another …\nBasic Linear interpolation between this rotation and …\nLinearly interpolate each component between this size and …\nLinearly interpolate between this size and another size.\nLinearly interpolate each component between this vector …\nLinearly interpolate each component between this vector …\nReturns vector with results of “lower then” operation …\nReturns vector with results of “lower than” operation …\nReturns vector with results of “lower than” operation …\nReturns vector with results of “lower than” operation …\nApply the function <code>f</code> to each component of this point.\nApply the function <code>f</code> to each component of this point.\nApply the function <code>f</code> to each component of this vector.\nApply the function <code>f</code> to each component of this vector.\nReturns maximum between this length and another length.\nReturns the size each component of which are maximum of …\nReturns the size each component of which are maximum of …\nReturns the vector each component of which are maximum of …\nReturns the vector each component of which are maximum of …\nReturns minimum between this length and another length.\nReturns the size each component of which are minimum of …\nReturns the size each component of which are minimum of …\nReturns the vector each component of which are minimum of …\nReturns the vector each component of which are minimum of …")