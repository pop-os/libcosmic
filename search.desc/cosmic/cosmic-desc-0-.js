searchState.loadedDescShard("cosmic", 0, "An ID that uniquely identifies the application. The …\nRepresents a type that you can apply arbitrary functions …\nAn interactive cross-platform COSMIC application.\nMethods automatically derived for all types implementing …\nRepresents a type which can have functions applied to it …\nCOSMIC-specific application settings\nDefault async executor to use with the app.\nArgument received [<code>Application::new</code>].\nMessage type specific to our app.\nA set of concurrent actions to be performed by the iced …\nCreates a new <code>Task</code> that can be aborted with the returned …\nActions are managed internally by the cosmic runtime.\nApply a function to this value and return the (possibly) …\nExecutes a new <code>Task</code> after this one, only when it succeeds …\nExecutes a new <code>Task</code> after this one, only when it produces …\nBuild interactive cross-platform COSMIC applications.\nApply a function which takes the parameter by value.\nApply a function which takes the parameter by mutable …\nApply a function which takes the parameter by reference.\nCombines the given tasks and produces a single <code>Task</code> that …\nChains a new <code>Task</code> to be performed once the current one …\nCreates a new <code>Task</code> that collects all the output of the …\nConfigurations available to libcosmic applications.\nDisplays a context drawer on the side of the application …\nState which is managed by the cosmic runtime.\nGrants access to the COSMIC Core.\nGrants access to the COSMIC Core.\nEnables debug features in cosmic/iced.\nDisplays a dialog in the center of the application window …\nCreates a new <code>Task</code> that discards the result of the current …\nCreates a new <code>Task</code> that instantly produces the given value.\nInitiates a window drag.\nSelect the preferred async executor for an application.\nSelect preferred fonts.\nDisplays a footer at the bottom of the application window …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Task</code> that runs the given <code>Future</code> and produces …\nAttaches elements to the center of the header.\nAttaches elements to the end section of the header.\nAttaches elements to the start section of the header.\nSelect the preferred icon theme.\nCreates the application, and optionally emits task on …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSubscribe to common application keyboard shortcuts.\nMaps the output of a <code>Task</code> with the given closure.\nMaximizes the window.\nMinimizes the window.\nAllows overriding the default nav bar widget.\nShows a context menu for the active nav bar item.\nAllows COSMIC to integrate with your application’s …\nCreates a <code>Task</code> that does nothing.\nCalled before closing the application. Returning a message …\nCalled when a window requests to be closed.\nCalled when the escape key is pressed.\nCalled when a context menu is requested for a navigation …\nCalled when a navigation item is selected.\nCalled when the search function is requested.\nCalled when a window is resized.\nCreates a <code>Task</code> that runs the given <code>Future</code> to completion …\nRecommended default imports.\nCreates a <code>Task</code> that runs the given <code>Stream</code> to completion …\nSet the header bar title.\nSet the context drawer visibility.\nSet the title of a window.\nCreates a new <code>Task</code> that runs the given <code>Stream</code> and produces …\nStylesheet implements for <code>crate::Theme</code>\nOverrides the default style for applications\nEvent sources that are to be listened to.\nRespond to a system theme mode change\nRespond to a system theme change\nCreate asynchronous actions to be performed in the …\nContains the <code>Theme</code> type and its widget stylesheet …\nPerforms a new <code>Task</code> for every output of the current <code>Task</code> …\nGet the title of a window.\nRespond to an application-specific message.\nConstructs the view for the main window.\nView template for the main window.\nConstructs views for other windows.\nThe COSMIC widget library\nMessages from the application, for the application.\nInternal messages to be handled by libcosmic.\nDo nothing\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn ID that uniquely identifies the application. The …\nA message managed internally by COSMIC.\nActivate the application\nApplication requests theme change.\nAn interactive cross-platform COSMIC application.\nMethods automatically derived for all types implementing …\nRequests to close the window.\nCloses or shows the context drawer.\nRequests to drag the window.\nDefault async executor to use with the app.\nArgument received [<code>Application::new</code>].\nWindow focus changed\nKeyboard shortcuts managed by libcosmic.\nRequests to maximize the window.\nMessage type specific to our app.\nRequests to minimize the window.\nActivates a navigation element from the nav bar.\nActivates a context menu for an item from the nav bar.\nA new window was opened.\nSet scaling factor\nShow the window menu\nInternal surface message\nNotifies that a surface was closed. Any data relating to …\nNotification of system theme changes.\nNotification of system theme mode changes.\nToggles visibility of the nav bar.\nToggles the condensed status of the nav bar.\nToolkit configuration update\nWindow focus lost\nUpdates the window maximized state\nUpdates the tracked window geometry.\nWindowing system initialized\nDisplays a context drawer on the side of the application …\nGrants access to the COSMIC Core.\nGrants access to the COSMIC Core.\nDisplays a dialog in the center of the application window …\nInitiates a window drag.\nDisplays a footer at the bottom of the application window …\nReturns the argument unchanged.\nAttaches elements to the center of the header.\nAttaches elements to the end section of the header.\nAttaches elements to the start section of the header.\nCreates the application, and optionally emits task on …\nCalls <code>U::from(self)</code>.\nMaximizes the window.\nMinimizes the window.\nAllows overriding the default nav bar widget.\nShows a context menu for the active nav bar item.\nAllows COSMIC to integrate with your application’s …\nCalled before closing the application. Returning a message …\nCalled when a window requests to be closed.\nCalled when the escape key is pressed.\nCalled when a context menu is requested for a navigation …\nCalled when a navigation item is selected.\nCalled when the search function is requested.\nCalled when a window is resized.\nLaunch a COSMIC application with the given <code>Settings</code>.\nSet the header bar title.\nSet the context drawer visibility.\nSet the title of a window.\nConfigure a new COSMIC application.\nOverrides the default style for applications\nEvent sources that are to be listened to.\nRespond to a system theme mode change\nRespond to a system theme change\nGet the title of a window.\nRespond to an application-specific message.\nConstructs the view for the main window.\nView template for the main window.\nConstructs views for other windows.\nElements placed below the context drawer scrollable\nReturns the argument unchanged.\nNon-scrolling elements placed below the context drawer …\nApp-specific actions at the start of the context drawer …\nCalls <code>U::from(self)</code>.\nSet a context drawer header title\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfigure a new COSMIC application.\nProduces a smoother result in some widgets, at a …\nWhether the window should have a border, a title bar, etc. …\nEnables debug features in cosmic/iced.\nThe default <code>Font</code> to be used.\nSets the default icon theme, passing an empty string will …\nSet the default mmap threshold for malloc with mallopt.\nDefault size of fonts.\nWhether the application window should close when the exit …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWhether the application should act as a daemon\nSet the application to not create a main window\nWhether the window should be resizable or not. and the …\nScale factor to use by default.\nInitial size of the window.\nLimitations of the window size\nThe theme to apply to the application.\nWhether the window should be transparent.\nInitiates a window drag.\nMaximizes the window.\nMinimizes the window.\nSets the title of a window.\nSets the window mode to windowed.\nToggles the windows’ maximize state.\nStores static strings of the family names for <code>iced::Font</code> …\nID for the <code>CosmicTk</code> config.\nApply the theme to other toolkits.\nApply the theme to other toolkits.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDensity of CSD/SSD header bars.\nDensity of CSD/SSD header bars.\nPreferred icon theme.\nPreferred icon theme.\nInterface density.\nInterface density.\nInterface font family\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMono font family\nSets <code>CosmicTk::apply_theme_global</code> and writes to …\nSets <code>CosmicTk::header_size</code> and writes to …\nSets <code>CosmicTk::icon_theme</code> and writes to …\nSets <code>CosmicTk::interface_density</code> and writes to …\nSets <code>CosmicTk::interface_font</code> and writes to …\nSets <code>CosmicTk::monospace_font</code> and writes to …\nSets <code>CosmicTk::show_maximize</code> and writes to …\nSets <code>CosmicTk::show_minimize</code> and writes to …\nShow maximize button in window header.\nShow maximize button in window header.\nShow minimize button in window header.\nShow minimize button in window header.\nCOSMIC-specific application settings\nStatus of the nav bar and its panels.\nCOSMIC-specific settings for windows.\nEnables debug features in cosmic/iced.\nGet the current focus chain of windows\nGet the current focused window if it exists\nReturns the argument unchanged.\nReturns the argument unchanged.\nLabel to display as header bar title.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the window is too small for the nav bar + main …\nEnable or disable keyboard navigation\nThe <code>Id</code> of the main window\nWhether the nav panel is visible or not\nThe scaling factor used by the application.\nSet header bar title\nEnable or disable keyboard navigation\nReset the tracked main window to a new value\nWhether the application should use a dark theme, according …\nGet the current system theme\nGet the current system theme mode\nApply all pending changes from ConfigTransaction\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a configuration value\nGet a locally-defined configuration value from the user’…\nGet the system-defined default configuration value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the reason for the missing config is caused by an …\nGet config for the given application name and config …\nGet state for the given application name and config …\nSet a configuration value\nGet a system config for the given name and config version\nReturns the keys that were updated\nGet config for the given application name and config …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBackground layer\nLower padding/spacing of elements\nThe colors for a widget of the Cosmic theme\nTheme Container colors of a theme, can be a theme …\nCorner radii variables for the Cosmic theme\nPalette type\nThe palette for Cosmic Theme, from which all color …\nbuilt-in dark palette\nID for the current dark <code>ThemeBuilder</code> config\nID for the current dark Theme config\nDark mode\nDensity options for the Cosmic theme\nHigh contrast dark mode\nHigh contrast light mode\nbuilt-in light palette\nID for the current light `ThemeBuilder`` config\nID for the current light Theme config\nTheme layer type\nTrait for layered themes\nLight mode\nname of cosmic theme\nPrimary Layer\nSecondary Layer\nSpacing variables for the Cosmic theme\nHigher padding/spacing of elements\nStandard padding/spacing of elements\nID for the ThemeMode config\nCosmic Theme data structure with all colors and its name\nHelper for building customized themes\nThe config for cosmic theme dark / light settings\napply a accent color to the palette\naccent element colors\noverride the accent color for the builder\nPotential Accent Color Combos\naccent button element colors\nget @accent_color\nPotential Accent Color Combos\nPotential Accent Color Combos\nPotential Accent Color Combos\nPotential Accent Color Combos\nPotential Accent Color Combos\nPotential Accent Color Combos\naccent text colors If None, accent base color is the …\nget @accent_text_color\nPotential Accent Color Combos\nPotential Accent Color Combos\ncosmic-comp active hint window outline width\ncosmic-comp active hint window outline width\nApply gtk color variable settings\nturn the theme into css\nThe theme auto-switch dark and light mode setting.\nbackground element colors\nthe color of the container\nThe base color of the widget\nget @bg_color\napply a background color to the palette\noverride bg_color for the builder\nget @bg_component_color\nget @bg_component_divider\nget @bg_divider\nthe color of the border for the widget\nColors used for various points of emphasis in the UI.\nColors used for various points of emphasis in the UI.\nUtility Colors Colors used for various points of emphasis …\nbuild the theme\nbutton component styling\nget @button_bg_color\nget @button_color\nget @button_divider\nhelper for producing a button component\nhelper for producing a component from a base color a …\nhelper for producing a component color theme\nthe color of components in the container\ncomposite colors in srgb\nGet the config for the theme mode\nget control_0 color\nget control_1 color\nget control_3 color\nget control_2 color\nget control_3 color\nget control_3 color\nget control_3 color\nget control_3 color\nget control_3 color\nget control_3 color\nget control_3 color\ncontrol tint color\nset the corner radii of the builder\ncorner radii\noverride corner radii for the builder\nGet a builder that is initialized with the default dark …\nGet the config for the current dark theme\nGet the builder for the dark config\nget the built in dark theme\nGet a builder that is initialized with the default dark …\napply a destructive color to the palette\ndestructive element colors\noverride the destructive color for the builder\ndestructive button element colors\nget @destructive_color\nget @destructive_text_color\nthe color of the widget when it is disabled\nthe color of the border for the widget when it is disabled\nthe color of dividers in the container\nthe color of dividers for this widget\nColors used for themes, app icons, illustrations, and …\nColors used for themes, app icons, illustrations, and …\nColors used for themes, app icons, illustrations, and …\nColors used for themes, app icons, illustrations, and …\nColors used for themes, app icons, illustrations, and …\nExtended Color Palette Colors used for themes, app icons, …\nColors used for themes, app icons, illustrations, and …\nthe color of the widget when it is focused\nget @focus_color\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncosmic-comp window gaps size (outer, inner)\ncosmic-comp window gaps size (outer, inner)\nget the active theme\nSurface Grays Colors used for three levels of surfaces in …\nColors used for three levels of surfaces in the UI.\nchoose default color palette based on preferred GTK color …\nget the built in high contrast dark theme\nget the built in high contrast light theme\nThe color of the widget when it is hovered\nget @hover_state_color\nicon button element colors\nid of the theme\nextract the inner palette\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncheck if the palette is dark\nCheck if the theme is currently using dark mode\nThe theme dark mode setting.\nis dark\nenables blurred transparency\nenabled blurred transparency\ncheck if the palette is high_contrast\nis high contrast\nGet a builder that is initialized with the default light …\nGet the config for the current light theme\nGet the builder for the light config\nget the built in light theme\nGet a builder that is initialized with the default light …\nlink button element colors\nname of the palette\nname of the palette\nname of the theme\nSystem Neutrals A wider spread of dark colors for more …\nA wider spread of dark colors for more general use.\nA wider spread of dark colors for more general use.\nA wider spread of dark colors for more general use.\nA wider spread of dark colors for more general use.\nA wider spread of dark colors for more general use.\nA wider spread of dark colors for more general use.\nA wider spread of dark colors for more general use.\nA wider spread of dark colors for more general use.\nA wider spread of dark colors for more general use.\nA wider spread of dark colors for more general use.\napply a neutral tint to the palette\noverride neutral_tint for the builder\nthe color of text in the container\nthe color of text for this widget\nget @on_accent_color\nget @on_bg_color\nget @on_bg_component_color\nget @on_destructive_color\nthe color of text in the widget when it is disabled\nget @on_primary_component_color\nget @on_primary_color\nget @on_secondary_component_color\nget @on_secondary_color\nget @on_success_color\nget @on_warning_color\nGet a builder that is initialized with the provided palette\npalette\noverride the palette for the builder\ncheck current desktop environment and preferred color …\nthe color of the widget when it is pressed\nget @pressed_state_color\nprimary element colors\nget @primary_component_color\nget @primary_component_divider\napply a primary container background color to the palette\noverride the primary container bg color for the builder\nget @primary_container_color\nget @primary_container_divider\nget @radius_0\ncorner radii of 0\nget @radius_l\nlarge corner radii\nget @radius_m\nmedium corner radii\nget @radius_s\nsmall corner radii\nget @radius_xl\nextra large corner radii\nget @radius_xs\nsmallest size of corner radii that can be non-zero\nReset the applied gtk css\nsecondary element colors\nget @secondary_component_color\noverride the secontary container bg color for the builder\nget @secondary_container_color\nget @secondary_container_divider\nthe color of the widget when it is selected\nget @selected_state_color\nget @selected_state_text_color\nthe color of the widget when it is selected\nSets <code>Theme::accent</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>ThemeBuilder::accent</code> and writes to …\nSets <code>Theme::accent_button</code> and writes to …\nSets <code>Theme::accent_text</code> and writes to <code>cosmic_config::Config</code>…\nSets <code>Theme::active_hint</code> and writes to <code>cosmic_config::Config</code>…\nSets <code>ThemeBuilder::active_hint</code> and writes to …\nSets <code>ThemeMode::auto_switch</code> and writes to …\nSets <code>Theme::background</code> and writes to <code>cosmic_config::Config</code> …\nSets <code>ThemeBuilder::bg_color</code> and writes to …\nSets <code>Theme::button</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>Theme::control_tint</code> and writes to …\nSets <code>Theme::corner_radii</code> and writes to …\nSets <code>ThemeBuilder::corner_radii</code> and writes to …\nSets <code>Theme::destructive</code> and writes to <code>cosmic_config::Config</code>…\nSets <code>ThemeBuilder::destructive</code> and writes to …\nSets <code>Theme::destructive_button</code> and writes to …\nSets <code>Theme::gaps</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>ThemeBuilder::gaps</code> and writes to <code>cosmic_config::Config</code>…\nSets <code>Theme::icon_button</code> and writes to <code>cosmic_config::Config</code>…\nSets <code>ThemeMode::is_dark</code> and writes to <code>cosmic_config::Config</code>…\nSets <code>Theme::is_dark</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>Theme::is_frosted</code> and writes to <code>cosmic_config::Config</code> …\nSets <code>ThemeBuilder::is_frosted</code> and writes to …\nSets <code>Theme::is_high_contrast</code> and writes to …\nSet the layer of the theme\nSets <code>Theme::link_button</code> and writes to <code>cosmic_config::Config</code>…\nSets <code>Theme::name</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>ThemeBuilder::neutral_tint</code> and writes to …\nSets <code>Theme::palette</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>ThemeBuilder::palette</code> and writes to …\nSets <code>Theme::primary</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>ThemeBuilder::primary_container_bg</code> and writes to …\nSets <code>Theme::secondary</code> and writes to <code>cosmic_config::Config</code> …\nSets <code>ThemeBuilder::secondary_container_bg</code> and writes to …\nSets <code>Theme::shade</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>Theme::spacing</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>ThemeBuilder::spacing</code> and writes to …\nSets <code>Theme::success</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>ThemeBuilder::success</code> and writes to …\nSets <code>Theme::success_button</code> and writes to …\nSets <code>Theme::text_button</code> and writes to <code>cosmic_config::Config</code>…\nSets <code>Theme::text_tint</code> and writes to <code>cosmic_config::Config</code> …\nSets <code>ThemeBuilder::text_tint</code> and writes to …\nSets <code>Theme::warning</code> and writes to <code>cosmic_config::Config</code> if …\nSets <code>ThemeBuilder::warning</code> and writes to …\nSets <code>Theme::warning_button</code> and writes to …\nSets <code>Theme::window_hint</code> and writes to <code>cosmic_config::Config</code>…\nSets <code>ThemeBuilder::window_hint</code> and writes to …\nshade color for dialogs\nget @shade_color\nthe color of @small_widget_container\nget @small_widget_divider\nget @space_l\nlarge spacing\nget @space_m\nmedium spacing\nget @space_none\nNo spacing\nget @space_s\nsmall spacing\nget @space_xl\nextra large spacing\nget @space_xs\nextra small spacing\nget @space_xxl\nextra extra large spacing\nget @space_xxs\nextra extra small spacing\nget @space_xxxl\nlargest possible spacing\nget @space_xxxs\nsmallest spacing that can be non-zero\nset the spacing of the builder\nspacing\noverride spacing for the builder\nget color steps\napply a success color to the palette\nsuggested element colors\noverride the success color for the builder\nsuggested button element colors\nget @success_color\nget @success_text_color\ntext button element colors\napply a text tint to the palette\ntext tint color\noverride the text tint for the builder\nConvert the theme to a high-contrast variant\nThe current version of the theme mode config.\napply a warning color to the palette\nwarning element colors\noverride the warning color for the builder\nwarning button element colors\nget @warning_color\nget @warning_text_color\nget @window_header_bg\ncosmic-comp custom window hint color\ncosmic-comp custom window hint color\nRebuild the current theme with the provided accent\nwrite the CSS to the appropriate directory Should be …\nstraight alpha “A over B” operator on non-linear srgba\nAn alpha component wrapper for colors, for adding …\nExtension trait for fixed size arrays.\nAn operator for restricting a color’s components to …\nAn assigning operator for restricting a color’s …\nThe opaque color type, without any transparency.\nA trait for calculating the color difference between two …\nOperators for darkening a color;\nAssigning operators for darkening a color;\nOperator for decreasing the saturation (or chroma) of a …\nAssigning operator for decreasing the saturation (or …\nA trait for converting one color from another, in a …\nTemporarily convert colors in place.\nA scope guard that restores the guarded colors to their …\nGamma 2.2 encoded luminance.\nGamma 2.2 encoded luminance with an alpha component.\nGamma 2.2 encoded sRGB.\nGamma 2.2 encoded sRGB with an alpha component.\nA trait for colors where a hue may be calculated.\nHSL color space.\nLinear HSL with an alpha component. See the <code>Hsla</code> …\nHSLuv color space.\nHSLuv with an alpha component. See the <code>Hsluva</code> …\nHSV color space.\nLinear HSV with an alpha component. See the <code>Hsva</code> …\nThe kind of hue unit this color space uses.\nHWB color space.\nLinear HWB with an alpha component. See the <code>Hwba</code> …\nA trait for converting a color into another, in a possibly …\nTemporarily convert colors in place. The <code>Into</code> counterpart …\nChecks if color components are within their expected range …\nThe type of the array’s items.\nThe number of items in the array.\nThe CIE L*a*b* (CIELAB) color space.\nA hue type for the CIE L*a*b* family of color spaces.\nCIE L*a*b* (CIELAB) with an alpha component. See the <code>Laba</code> …\nCIE L*C*h°, a polar version of CIE L*a*b*.\nCIE L*C*h° with an alpha component. See the <code>Lcha</code> …\nCIE L*C*uv h°uv, a polar version of CIE L*u*v*.\nCIE L*C*uv h°uv with an alpha component. See the <code>Lchuva</code> …\nOperators for lightening a color.\nAssigning operators for lightening a color.\nLinear luminance.\nLinear luminance with an alpha component.\nLinear sRGB.\nLinear sRGB with an alpha component.\nThe CIE L*u*v* (CIELUV) color space.\nA hue type for the CIE L*u*v* family of color spaces.\nCIE L*u*v* (CIELUV) with an alpha component. See the <code>Luva</code> …\nA 9 element array representing a 3x3 matrix.\nLinear color interpolation of two colors.\nAssigning linear color interpolation of two colors.\nAn array of size <code>N + 1</code>.\nTemporary helper trait for getting an array type of size …\nA Hue/Saturation/Lightness representation of <code>Oklab</code> in the …\nOkhsl with an alpha component.\nA Hue/Saturation/Value representation of <code>Oklab</code> in the <code>sRGB</code> …\nOkhsv with an alpha component. See the <code>Okhsva</code> …\nA Hue/Whiteness/Blackness representation of <code>Oklab</code> in the …\nOkhwb with an alpha component. See the <code>Okhwba</code> …\nThe Oklab color space.\nA hue type for the Oklab color space.\nOklab with an alpha component.\nOklch, a polar version of Oklab.\nOklch with an alpha component. See the <code>Oklcha</code> …\nA trait for calculating relative contrast between two …\nA hue type for the RGB family of color spaces.\nOperator for increasing the saturation (or chroma) of a …\nAssigning operator for increasing the saturation (or …\nThe type of the calculated color difference.\nThe type of the contrast ratio.\nThe type of the mixing factor.\nThe type of the mixing factor.\nThe type of the lighten modifier.\nThe type of the lighten modifier.\nThe type of the darken modifier.\nThe type of the darken modifier.\nThe type of the hue modifier.\nThe type of the hue modifier.\nThe type of the saturation modifier.\nThe type of the saturation modifier.\nThe type of the desaturation modifier.\nThe type of the desaturation modifier.\nChange the hue of a color to a specific value without …\nOperator for increasing or decreasing the hue by an amount.\nAssigning operator for increasing or decreasing the hue by …\nNon-linear sRGB, the most common RGB input/output format.\nsRGB encoded luminance.\nsRGB encoded luminance with an alpha component.\nNon-linear sRGB with an alpha component.\nA trait for color types that can have or be given …\nThe color type with transparency applied.\nChange the hue of a color to a specific value.\nThe CIE 1931 XYZ color space.\nCIE 1931 XYZ with an alpha component. See the <code>Xyza</code> …\nThe CIE 1931 Yxy (xyY) color space.\nCIE 1931 Yxy (xyY) with an alpha component. See the <code>Yxya</code> …\na* goes from red at -128 to green at 127.\n<code>a</code> changes the hue from reddish to greenish, when moving …\nTypes related to transparent colors.\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nTraits for working with angular values, such as for in …\nBorrow this hue’s value as shared references.\nBorrow this hue’s value as shared references.\nBorrow this hue’s value as shared references.\nBorrow this hue’s value as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nb* goes from yellow at -128 to blue at 127.\n<code>b</code> changes the hue from yellowish to blueish, when moving …\nThe blackness of the color. It specifies the amount black …\nThe amount of black, mixed in the pure hue, ranging from …\nColor blending and blending equations.\nThe amount of blue light, where 0.0 is no blue light and …\nThe amount of blue light, where 0.0 is no blue light and …\nThe amount of blue light, where 0.0 is no blue light and …\nTraits for abstracting over Boolean types.\nTypes for the CIE CAM16 color appearance model.\nTraits and functions for casting colors to and from other …\nC* is the colorfulness of the color. It’s similar to …\nC*uv is the colorfulness of the color. It’s similar to …\n<code>chroma</code> is the colorfulness of the color. A color with …\nConvert colors from one reference white point to another\nReturn a new color where out-of-bounds components have …\nChanges out-of-bounds components to the nearest valid …\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the hue vector. See <code>Vec::clear</code> for details.\nClear the hue vector. See <code>Vec::clear</code> for details.\nClear the hue vector. See <code>Vec::clear</code> for details.\nClear the hue vector. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this hue.\nGet an owned, cloned version of this hue.\nGet an owned, cloned version of this hue.\nGet an owned, cloned version of this hue.\nGet an owned, cloned version of this hue.\nGet an owned, cloned version of this hue.\nGet an owned, cloned version of this hue.\nGet an owned, cloned version of this hue.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nAlgorithms for calculating the difference between colors.\nTraits related to traditional color theory.\nCalculate the ratio between two <code>luma</code> values.\nTraits for converting between color spaces.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this hue.\nGet an owned, copied version of this hue.\nGet an owned, copied version of this hue.\nGet an owned, copied version of this hue.\nGet an owned, copied version of this hue.\nGet an owned, copied version of this hue.\nGet an owned, copied version of this hue.\nGet an owned, copied version of this hue.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nScale the color towards the minimum lightness by <code>factor</code>, a …\nScale the color towards the minimum lightness by <code>factor</code>, a …\nDarken the color by <code>amount</code>, a value ranging from <code>0.0</code> to <code>1.0</code>…\nDarken the color by <code>amount</code>, a value ranging from <code>0.0</code> to <code>1.0</code>…\nScale the color towards the minimum saturation by <code>factor</code>, …\nScale the color towards the minimum saturation by <code>factor</code>, …\nIncrease the saturation by <code>amount</code>, a value ranging from <code>0.0</code>…\nIncrease the saturation by <code>amount</code>, a value ranging from <code>0.0</code>…\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves hues out of the specified …\nReturn an iterator that moves hues out of the specified …\nReturn an iterator that moves hues out of the specified …\nReturn an iterator that moves hues out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nNumber and color encoding traits, types and standards.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a hue from <code>a</code> and <code>b</code>, normalized to <code>[0°, 360°)</code>.\nReturns a hue from <code>a</code> and <code>b</code>, normalized to <code>[0°, 360°)</code>.\nReturns a hue from <code>a</code> and <code>b</code>, normalized to <code>[0°, 360°)</code>.\nReturns a hue from <code>a</code> and <code>b</code>, normalized to <code>[0°, 360°)</code>.\nConvert from T with values clamped to the color defined …\nTemporarily convert from another color type in place.\nConverts <code>lab</code> to <code>Okhwb</code> in the bounds of sRGB.\nConvert from a <code>(J&#39;, a&#39;, b&#39;, a)</code> tuple.\nConvert from a <code>(L, C, h, alpha)</code> tuple.\nConvert from a <code>(L\\*, C\\*, h°, alpha)</code> tuple.\nConvert from a <code>(hue, saturation, l, alpha)</code> tuple.\nConvert from a <code>(brightness, chroma, hue, alpha)</code> tuple.\nConvert from a <code>(L\\*, C\\*uv, h°uv, alpha)</code> tuple.\nConvert from a <code>(J&#39;, M&#39;, h&#39;, a)</code> tuple.\nConvert from a <code>(luma, alpha)</code> tuple.\nConvert from a <code>(hue, whiteness, blackness, alpha)</code> tuple.\nConvert from a <code>(x, y, luma)</code>, a.k.a. <code>(x, y, Y)</code> tuple.\nConvert from a <code>(hue, whiteness, blackness, alpha)</code> tuple.\nConvert from u <code>(L\\*, u\\*, v\\*, alpha)</code> tuple.\nConvert from a <code>(lightness, chroma, hue, alpha)</code> tuple.\nConvert from a <code>(brightness, colorfulness, hue, alpha)</code> …\nConvert from a <code>(red, green, blue, alpha)</code> tuple.\nConvert from a <code>(hue, saturation, lightness, alpha)</code> tuple.\nConvert from a <code>(hue, saturation, value, alpha)</code> tuple.\nConvert from a <code>(hue, saturation, value, alpha)</code> tuple.\nConvert from a <code>(L\\*, a\\*, b\\*, alpha)</code> tuple.\nConvert from a <code>(brightness, saturation, hue, alpha)</code> tuple.\nConvert from a <code>(L, a, b, alpha)</code> tuple.\nConvert from a <code>(X, Y, Z, alpha)</code> tuple.\nConvert from a <code>(lightness, colorfulness, hue, alpha)</code> tuple.\nConvert from a <code>(hue, saturation, lightness, alpha)</code> tuple.\nConvert from a <code>(lightness, saturation, hue, alpha)</code> tuple.\nConvert from a <code>(hue, saturation, lightness)</code> tuple.\nConvert from a <code>(hue, saturation, l)</code> tuple.\nConvert from a <code>(hue, saturation, value)</code> tuple.\nConvert from a <code>(hue, whiteness, blackness)</code> tuple.\nConvert from a <code>(L\\*, a\\*, b\\*)</code> tuple.\nConvert from a <code>(L\\*, C\\*, h°)</code> tuple.\nConvert from a <code>(L\\*, C\\*uv, h°uv)</code> tuple.\nConvert from a <code>(L\\*, u\\*, v\\*)</code> tuple.\nConvert from a <code>(h, s, l)</code> tuple.\nConvert from a <code>(h, s, v)</code> tuple.\nConvert from a <code>(h, w, b)</code> tuple.\nConvert from a <code>(L, a, b)</code> tuple.\nConvert from a <code>(L, C, h)</code> tuple.\nConvert from a <code>(X, Y, Z)</code> tuple.\nConvert from a <code>(x, y, luma)</code>, a.k.a. <code>(x, y, Y)</code> tuple.\nCreate a new hue from degrees. This is an alias for <code>new</code>.\nCreate a new hue from degrees. This is an alias for <code>new</code>.\nCreate a new hue from degrees. This is an alias for <code>new</code>.\nCreate a new hue from degrees. This is an alias for <code>new</code>.\nConvert RGB from a different encoding to linear with …\nConvert to linear luminance from a different encoding with …\nConvert from another component type.\nConvert the RGBA components from other number types.\nConvert from another component type.\nConvert from another component type.\nConvert from another component type.\nConvert from another component type.\nConvert from another component type.\nConvert from another component type.\nConvert from another component type.\nConvert from another component type.\nConvert from another angle type.\nConvert from another angle type.\nConvert from another angle type.\nConvert from another angle type.\nConvert from another component type.\nConvert from another component type.\nCreate a partial set of CIE CAM16 attributes with …\nCreate a partial set of CIE CAM16 attributes with …\nCreate a partial set of CIE CAM16 attributes with …\nCreate a partial set of CIE CAM16 attributes with …\nCreate a partial set of CIE CAM16 attributes with …\nCreate a partial set of CIE CAM16 attributes with …\nConvert linear RGB to non-linear RGB with transparency.\nConvert linear luminance to non-linear luminance with …\nCreate a new hue from radians, instead of degrees.\nCreate a new hue from radians, instead of degrees.\nCreate a new hue from radians, instead of degrees.\nCreate a new hue from radians, instead of degrees.\nParses a color hex code of format ‘#ff00bbff’ or ‘…\nConvert from a packed <code>u16</code> with a specific component order.\nConvert from a packed <code>u32</code> with specifiable component order.\nDerive partial CIE CAM16 attributes with transparency, for …\nDerive partial CIE CAM16 attributes with transparency, for …\nDerive partial CIE CAM16 attributes with transparency, for …\nDerive partial CIE CAM16 attributes with transparency, for …\nDerive partial CIE CAM16 attributes with transparency, for …\nDerive partial CIE CAM16 attributes with transparency, for …\nDerive CIE CAM16 attributes with transparency for the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a hue, or slice of hues, with references to the values …\nGet a hue, or slice of hues, with references to the values …\nGet a hue, or slice of hues, with references to the values …\nGet a hue, or slice of hues, with references to the values …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nReturn the difference or distance between two colors.\nCalculate the contrast ratio between two colors.\nCalculate a hue if possible.\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a hue, or slice of hues, that allows modifying the …\nGet a hue, or slice of hues, that allows modifying the …\nGet a hue, or slice of hues, that allows modifying the …\nGet a hue, or slice of hues, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nThe amount of green light, where 0.0 is no green light and …\nThe amount of green light, where 0.0 is no green light and …\nThe amount of green light, where 0.0 is no green light and …\nVerify the contrast between two colors satisfies SC 1.4.6 …\nVerify the contrast between two colors satisfies SC 1.4.6. …\nVerify the contrast between two colors satisfies SC 1.4.11 …\nVerify the contrast between two colors satisfies SC 1.4.3 …\nVerify the contrast between two colors satisfies SC 1.4.3. …\nTypes for the HSL color space.\nTypes for the HSLuv color space.\nTypes for the HSV color space.\nThe hue of the color, in degrees. Decides if it’s red, …\nThe hue of the color, in degrees. Decides if it’s red, …\nThe hue of the color, in degrees. Decides if it’s red, …\nThe hue of the color, in degrees. Decides if it’s red, …\nThe hue of the color, in degrees. Decides if it’s red, …\nThe hue of the color, in degrees. Decides if it’s red, …\nThe hue of the color, in degrees of a circle.\nThe hue of the color, in degrees of a circle.\nThe hue of the color, in degrees of a circle.\nh is the hue of the color, in degrees. Decides if it’s …\nHues and hue related types.\nTypes for the HWB color space.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>a</code> and <code>b</code> values for this hue, normalized to <code>[-1, 1]</code>.\nReturns <code>a</code> and <code>b</code> values for this hue, normalized to <code>[-1, 1]</code>.\nReturns <code>a</code> and <code>b</code> values for this hue, normalized to <code>[-1, 1]</code>.\nReturns <code>a</code> and <code>b</code> values for this hue, normalized to <code>[-1, 1]</code>.\nConvert into T with values clamped to the color defined …\nTemporarily convert to another color type in place.\nConvert to a <code>(lightness, colorfulness, hue, alpha)</code> tuple.\nConvert to a <code>(luma, alpha)</code> tuple.\nConvert to a <code>(brightness, colorfulness, hue, alpha)</code> tuple.\nConvert to a <code>(brightness, chroma, hue, alpha)</code> tuple.\nConvert to a <code>(J&#39;, M&#39;, h&#39;, a)</code> tuple.\nConvert to a <code>(L\\*, C\\*, h°, alpha)</code> tuple.\nConvert to a <code>(hue, saturation, lightness, alpha)</code> tuple.\nConvert to a <code>(hue, whiteness, blackness, alpha)</code> tuple.\nConvert to a <code>(hue, saturation, value, alpha)</code> tuple.\nConvert to a <code>(L\\*, a\\*, b\\*, alpha)</code> tuple.\nConvert to a <code>(L\\*, C\\*uv, h°uv, alpha)</code> tuple.\nConvert to a <code>(hue, whiteness, blackness, alpha)</code> tuple.\nConvert to a <code>(L, a, b, alpha)</code> tuple.\nConvert to a <code>(x, y, luma)</code>, a.k.a. <code>(x, y, Y)</code> tuple.\nConvert to u <code>(L\\*, u\\*, v\\*, alpha)</code> tuple.\nConvert to a <code>(hue, saturation, lightness, alpha)</code> tuple.\nConvert to a <code>(lightness, chroma, hue, alpha)</code> tuple.\nConvert to a <code>(brightness, saturation, hue, alpha)</code> tuple.\nConvert to a <code>(J&#39;, a&#39;, b&#39;, a)</code> tuple.\nConvert to a <code>(red, green, blue, alpha)</code> tuple.\nConvert to a <code>(X, Y, Z, alpha)</code> tuple.\nConvert to a <code>(hue, saturation, l, alpha)</code> tuple.\nConvert to a <code>(lightness, saturation, hue, alpha)</code> tuple.\nConvert to a <code>(hue, saturation, value, alpha)</code> tuple.\nConvert to a <code>(L, C, h, alpha)</code> tuple.\nConvert to a <code>(hue, saturation, lightness)</code> tuple.\nConvert to a <code>(hue, saturation, l)</code> tuple.\nConvert to a <code>(hue, saturation, value)</code> tuple.\nConvert to a <code>(hue, whiteness, blackness)</code> tuple.\nConvert to a <code>(L\\*, a\\*, b\\*)</code> tuple.\nConvert to a <code>(L\\*, C\\*, h°)</code> tuple.\nConvert to a <code>(L\\*, C\\*uv, h°uv)</code> tuple.\nConvert to a <code>(L\\*, u\\*, v\\*)</code> tuple.\nConvert to a <code>(h, s, l)</code> tuple.\nConvert to a <code>(h, s, v)</code> tuple.\nConvert to a <code>(h, w, b)</code> tuple.\nConvert to a <code>(L, a, b)</code> tuple.\nConvert to a <code>(L, C, h)</code> tuple.\nConvert to a <code>(X, Y, Z)</code> tuple.\nConvert to a <code>(x, y, luma)</code>, a.k.a. <code>(x, y, Y)</code> tuple.\nGet the hue as degrees, in the range <code>(-180, 180]</code>.\nGet the hue as degrees, in the range <code>(-180, 180]</code>.\nGet the hue as degrees, in the range <code>(-180, 180]</code>.\nGet the hue as degrees, in the range <code>(-180, 180]</code>.\nConvert a linear color to a different encoding with …\nConvert a linear color to a different encoding with …\nConvert into another component type.\nConvert into another component type.\nConvert into another component type.\nConvert into another component type.\nConvert into another component type.\nConvert into another component type.\nConvert into another component type.\nConvert the RGBA components into other number types.\nConvert into another component type.\nConvert into another component type.\nConvert into another angle type.\nConvert into another angle type.\nConvert into another angle type.\nConvert into another angle type.\nConvert into another component type.\nConvert into another component type.\nConvert into another component type.\nConvert into another component type.\nReconstruct a full set of CIE CAM16 attributes with …\nReconstruct a full set of CIE CAM16 attributes with …\nReconstruct a full set of CIE CAM16 attributes with …\nReconstruct a full set of CIE CAM16 attributes with …\nReconstruct a full set of CIE CAM16 attributes with …\nReconstruct a full set of CIE CAM16 attributes with …\nGet the internal representation without normalizing or …\nGet the internal representation without normalizing or …\nGet the internal representation without normalizing or …\nGet the internal representation without normalizing or …\nConvert the color to linear luminance with transparency.\nConvert the color to linear RGB with transparency.\nConvert the hue to positive degrees, in the range <code>[0, 360)</code>.\nConvert the hue to positive degrees, in the range <code>[0, 360)</code>.\nConvert the hue to positive degrees, in the range <code>[0, 360)</code>.\nConvert the hue to positive degrees, in the range <code>[0, 360)</code>.\nConvert the hue to positive radians, in the range <code>[0, 2π)</code>.\nConvert the hue to positive radians, in the range <code>[0, 2π)</code>.\nConvert the hue to positive radians, in the range <code>[0, 2π)</code>.\nConvert the hue to positive radians, in the range <code>[0, 2π)</code>.\nConvert the hue to radians, in the range <code>(-π, π]</code>.\nConvert the hue to radians, in the range <code>(-π, π]</code>.\nConvert the hue to radians, in the range <code>(-π, π]</code>.\nConvert the hue to radians, in the range <code>(-π, π]</code>.\nGet the internal representation as degrees, without …\nGet the internal representation as degrees, without …\nGet the internal representation as degrees, without …\nGet the internal representation as degrees, without …\nGet the internal representation as radians, without …\nGet the internal representation as radians, without …\nGet the internal representation as radians, without …\nGet the internal representation as radians, without …\nConvert to a packed <code>u16</code> with with a specific component …\nConvert to a packed <code>u32</code> with with specifiable component …\nReplace this guard with a guard that does not clamp the …\nConstruct an XYZ color with transparency, from these CIE …\nConstruct an XYZ color with transparency, that matches …\nConstruct an XYZ color with transparency, from these CIE …\nConstruct an XYZ color with transparency, from these CIE …\nConstruct an XYZ color with transparency, from these CIE …\nConstruct an XYZ color with transparency, from these CIE …\nConstruct an XYZ color with transparency, from these CIE …\nCheck if the color’s components are within the expected …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the hues in the wrapped collection.\nReturn an iterator over the hues in the wrapped collection.\nReturn an iterator over the hues in the wrapped collection.\nReturn an iterator over the hues in the wrapped collection.\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the hues in the …\nReturn an iterator that allows modifying the hues in the …\nReturn an iterator that allows modifying the hues in the …\nReturn an iterator that allows modifying the hues in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nDecides how light the color will look. 0.0 will be black, …\nL* is the lightness of the color. 0.0 gives absolute black …\nL* is the lightness of the color. 0.0 gives absolute black …\nL* is the lightness of the color. 0.0 gives absolute black …\nL* is the lightness of the color. 0.0 gives absolute black …\n<code>l</code> is the lightness of the color. <code>0</code> gives absolute black …\nL is the lightness of the color. 0 gives absolute black …\nTypes for the CIE L*a*b* (CIELAB) color space.\nTypes for the CIE L*C*h° color space.\nTypes for the CIE L*C*uv h°uv color space.\nScale the color towards the maximum lightness by <code>factor</code>, a …\nScale the color towards the maximum lightness by <code>factor</code>, a …\nLighten the color by <code>amount</code>, a value ranging from <code>0.0</code> to …\nLighten the color by <code>amount</code>, a value ranging from <code>0.0</code> to …\nDecides how light the color will look. 0.0 will be black, …\nThe relative luminance of the color, where\nTypes for luma and luminance (grayscale) values.\nThe lightness of the color. 0.0 is black and 1.0 is white.\nThe lightness of the color. 0.0 is black and 1.0 is white.\nThe lightness of the color. 0.0 is black and 1.0 is white.\nluma (Y) was a measure of the brightness or luminance of a …\nTypes for the CIE L*u*v* (CIELUV) color space.\nReturn the <code>a</code> value maximum.\nReturn the <code>alpha</code> value maximum.\nReturn the <code>b</code> value maximum.\nReturn the <code>blackness</code> value maximum.\nReturn the <code>blackness</code> value maximum.\nReturn the <code>chroma</code> value maximum. This value does not cover …\nReturn the <code>chroma</code> value maximum.\nReturn the <code>chroma</code> extended maximum value. This value …\nReturn the <code>l</code> value maximum.\nReturn the <code>l</code> value maximum.\nReturn the <code>l</code> value maximum.\nReturn the <code>l</code> value maximum.\nReturn the <code>l</code> value maximum.\nReturn the <code>l</code> value maximum.\nReturn the <code>l</code> value maximum.\nReturn the <code>lightness</code> value maximum.\nReturn the <code>lightness</code> value maximum.\nReturn the <code>luma</code> value maximum.\nReturn the <code>saturation</code> value maximum.\nReturn the <code>saturation</code> value maximum.\nReturn the <code>saturation</code> value maximum.\nReturn the <code>saturation</code> value maximum.\nReturn the <code>saturation</code> value maximum.\nReturn the <code>u</code> value maximum.\nReturn the <code>v</code> value maximum.\nReturn the <code>value</code> value maximum.\nReturn the <code>value</code> value maximum.\nReturn the <code>whiteness</code> value maximum.\nReturn the <code>whiteness</code> value maximum.\nReturn the <code>x</code> value maximum.\nReturn the <code>x</code> value maximum.\nReturn the <code>y</code> value maximum.\nReturn the <code>y</code> value maximum.\nReturn the <code>z</code> value maximum.\nReturn the <code>a</code> value minimum.\nReturn the <code>alpha</code> value minimum.\nReturn the <code>b</code> value minimum.\nReturn the <code>blackness</code> value minimum.\nReturn the <code>blackness</code> value minimum.\nReturn the <code>chroma</code> value minimum.\nReturn the <code>chroma</code> value minimum.\nReturn the <code>chroma</code> value minimum.\nReturn the <code>l</code> value minimum.\nReturn the <code>l</code> value minimum.\nReturn the <code>l</code> value minimum.\nReturn the <code>l</code> value minimum.\nReturn the <code>l</code> value minimum.\nReturn the <code>l</code> value minimum.\nReturn the <code>l</code> value minimum.\nReturn the <code>lightness</code> value minimum.\nReturn the <code>lightness</code> value minimum.\nReturn the <code>luma</code> value minimum.\nReturn the <code>saturation</code> value minimum.\nReturn the <code>saturation</code> value minimum.\nReturn the <code>saturation</code> value minimum.\nReturn the <code>saturation</code> value minimum.\nReturn the <code>saturation</code> value minimum.\nReturn the <code>u</code> value minimum.\nReturn the <code>v</code> value minimum.\nReturn the <code>value</code> value minimum.\nReturn the <code>value</code> value minimum.\nReturn the <code>whiteness</code> value minimum.\nReturn the <code>whiteness</code> value minimum.\nReturn the <code>x</code> value minimum.\nReturn the <code>x</code> value minimum.\nReturn the <code>y</code> value minimum.\nReturn the <code>y</code> value minimum.\nReturn the <code>z</code> value minimum.\nMix the color with an other color, by <code>factor</code>.\nMix the color with an other color, by <code>factor</code>.\nA collection of named color constants. Can be toggled with …\nCreate a CAM16-UCS J’ M’ h’ color with transparency.\nCreate an Oklab color with transparency.\nCreate an HSLuv color with transparency.\nCreate a CIE L*u*v* color with transparency.\nCreate an HWB color with transparency.\nCreate a CIE XYZ color with transparency.\nCreate a partial CIE CAM16 color with transparency.\nCreate a partial CIE CAM16 color with transparency.\nCreate a luminance color with transparency.\nCreate a CAM16-UCS J’ a’ b’ color with transparency.\nCreate a CIE L*a*b* with transparency.\nCreate a partial CIE CAM16 color with transparency.\nCreate a partial CIE CAM16 color with transparency.\nCreate an <code>Okhwb</code> color with transparency.\nCreate a CIE L*C*uv h°uv color with transparency.\nCreate an HSV color with transparency.\nCreate an HSL color with transparency.\nCreate a partial CIE CAM16 color with transparency.\nCreate a CIE L*C*h° color with transparency.\nCreate an Oklch color with transparency.\nCreate an <code>Okhsl</code> color with transparency.\nCreate a CIE Yxy color with transparency.\nCreate an <code>Okhsv</code> color with transparency.\nCreate a partial CIE CAM16 color with transparency.\nNon-linear RGB.\nCreate an HSL color.\nCreate an HSLuv color.\nCreate an HSV color.\nCreate a new hue, specified in the default unit for the …\nCreate a new hue, specified in the default unit for the …\nCreate a new hue, specified in the default unit for the …\nCreate a new hue, specified in the default unit for the …\nCreate an HWB color.\nCreate a CIE L*a*b* color.\nCreate a CIE L*C*h° color.\nCreate a CIE L*C*uv h°uv color.\nCreate a CIE L*u*v* color.\nCreate an Okhsl color.\nCreate an <code>Okhsv</code> color.\nCreate an <code>Okhwb</code> color.\nCreate an Oklab color.\nCreate an <code>Oklch</code> color.\nCreate a CIE XYZ color.\nCreate a CIE Yxy color.\nCreate an <code>Oklcha</code> color. This is the same as <code>Oklcha::new</code> …\nCreate a CAM16-UCS J’ M’ h’ color with transparency. …\nCreate an HWB color with transparency. This is the same as …\nCreate a partial CIE CAM16 color with transparency. This …\nCreate a CIE L*C*uv h°uv color with transparency. This is …\nCreate a partial CIE CAM16 color with transparency. This …\nCreate a partial CIE CAM16 color with transparency. This …\nCreate an <code>Okhsla</code> color. This is the same as <code>Okhsla::new</code> …\nCreate an HSLuv color with transparency. This is the same …\nCreate a partial CIE CAM16 color with transparency. This …\nCreate an HSV color with transparency. This is the same as …\nCreate an <code>Okhsva</code> color. This is the same as <code>Okhsva::new</code> …\nCreate a partial CIE CAM16 color with transparency. This …\nCreate a CIE L*C*h° color with transparency. This is the …\nCreate an HSL color with transparency. This is the same as …\nCreate a partial CIE CAM16 color with transparency. This …\nCreate an <code>Okhwba</code> color. This is the same as <code>Okhwba::new</code> …\nCreate an HSL color. This is the same as <code>Hsl::new</code> without …\nCreate an HSLuv color. This is the same as <code>Hsluv::new</code> …\nCreate an HSV color. This is the same as <code>Hsv::new</code> without …\nCreate an HWB color. This is the same as <code>Hwb::new</code> without …\nCreate a CIE L*C*h° color. This is the same as <code>Lch::new</code> …\nCreate a CIE L*C*uv h°uv color. This is the same as …\nCreate an <code>Okhsl</code> color. This is the same as <code>Okhsl::new</code> …\nCreate an <code>Okhsv</code> color. This is the same as <code>Okhsv::new</code> …\nCreate an <code>Okhwb</code> color. This is the same as <code>Okhwb::new</code> …\nCreate an <code>Oklch</code> color. This is the same as <code>Oklch::new</code> …\nCreate an sRGB HSV color with transparency. This method …\nCreate an sRGB HSL color with transparency. This method …\nCreate an sRGB HWB color with transparency. This method …\nCreate an sRGB HSL color. This method can be used instead …\nCreate an sRGB HSV color. This method can be used instead …\nCreate an sRGB HWB color. This method can be used instead …\nCreate an sRGB HSL color with transparency. This is the …\nCreate an sRGB HSV color with transparency. This is the …\nCreate an sRGB HWB color with transparency. This is the …\nCreate an sRGB HSL color. This is the same as <code>Hsl::new_srgb</code>…\nCreate an sRGB HSV color. This is the same as <code>Hsv::new_srgb</code>…\nCreate an sRGB HWB color. This is the same as <code>Hwb::new_srgb</code>…\nTraits for abstracting over numeric types.\nTypes for the Okhsl color space.\nTypes for the Okhsv color space.\nTypes for the Okhwb color space.\nTypes for the Oklab color space.\nTypes for the Oklch color space.\nTransforms the color into a fully opaque color with a …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a hue from the hue vector. See <code>Vec::pop</code> for details.\nPop a hue from the hue vector. See <code>Vec::pop</code> for details.\nPop a hue from the hue vector. See <code>Vec::pop</code> for details.\nPop a hue from the hue vector. See <code>Vec::pop</code> for details.\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nAlpha mask the color by its transparency.\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional hue onto the hue vector. See <code>Vec::push</code> …\nPush an additional hue onto the hue vector. See <code>Vec::push</code> …\nPush an additional hue onto the hue vector. See <code>Vec::push</code> …\nPush an additional hue onto the hue vector. See <code>Vec::push</code> …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nThe amount of red light, where 0.0 is no red light and 1.0 …\nThe amount of red light, where 0.0 is no red light and 1.0 …\nThe amount of red light, where 0.0 is no red light and 1.0 …\nImmediately restore the colors to their original type.\nTypes for the RGB color space, including spaces and …\nScale the color towards the maximum saturation by <code>factor</code>, …\nScale the color towards the maximum saturation by <code>factor</code>, …\nIncrease the saturation by <code>amount</code>, a value ranging from <code>0.0</code>…\nIncrease the saturation by <code>amount</code>, a value ranging from <code>0.0</code>…\nThe colorfulness of the color. 0.0 gives gray scale colors …\nThe colorfulness of the color, as a percentage of the …\nThe colorfulness of the color. 0.0 gives gray scale colors …\nThe saturation (freedom of black or white) of the color.\nThe saturation (freedom of whitishness) of the color.\nUtilities for serializing and deserializing with <code>serde</code>.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this hue with a new value.\nUpdate this hue with a new value.\nUpdate this hue with a new value.\nUpdate this hue with a new value.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nChange the hue to a specific value.\nReturn a copy of <code>self</code> with the hue shifted by <code>amount</code>.\nShifts the hue by <code>amount</code>.\nSplits the color into separate color and transparency …\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nThe white point and RGB primaries this color is adapted …\nThe white point and RGB primaries this color is adapted …\nThe white point and RGB primaries this color is adapted …\nTraits for working with stimulus colors and values, such …\nConvert the colors to another type and replace this guard.\nConvert the colors to another type, without clamping, and …\nTransforms the color into a fully transparent color. If …\nThe range of valid u* varies depending on the values of L* …\nThe range of valid v* varies depending on the values of L* …\nDecides how bright the color will look. 0.0 will be black, …\nThe monochromatic brightness of the color.\nDefines the tristimulus values of the CIE Illuminants.\nThe white point and RGB primaries this color is adapted …\nThe white point associated with the color’s illuminant …\nThe white point associated with the color’s illuminant …\nThe white point associated with the color’s illuminant …\nThe white point associated with the color’s illuminant …\nThe white point associated with the color’s illuminant …\nThe white point associated with the color’s illuminant …\nThe whiteness of the color. It specifies the amount white …\nThe amount of white, mixed in the pure hue, ranging from …\nTransforms the color into a transparent color with the …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct with a vector with a minimum capacity. See …\nCreate a struct with a vector with a minimum capacity. See …\nCreate a struct with a vector with a minimum capacity. See …\nCreate a struct with a vector with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nReturn a copy of <code>self</code> with a specific hue.\nChanges the reference white point without changing the …\nChanges the reference white point without changing the …\nChanges the reference white point without changing the …\nChanges the reference white point without changing the …\nRemoves the transparency from the color. If <code>Self::Color</code> has\nX is the scale of what can be seen as a response curve for …\nx chromaticity co-ordinate derived from XYZ color space as …\nTypes for the CIE 1931 XYZ color space.\nY is the luminance of the color, where 0.0 is black and …\ny chromaticity co-ordinate derived from XYZ color space as …\nTypes for the CIE 1931 Yxy (xyY) color space.\nZ is the scale of what can be seen as the blue …\nAn alpha component wrapper for colors, for adding …\nThe opaque color type, without any transparency.\nAn iterator for transparent colors.\nPremultiplied alpha wrapper.\nA trait for color types that can have or be given …\nThe color type with transparency applied.\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 is fully transparent and …\nThe color.\nThe premultiplied color components (…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAlpha mask <code>color</code> with <code>alpha</code>.\nCreate an opaque alpha masked color.\nTransforms the color into a fully opaque color with a …\nSplits the color into separate color and transparency …\nTransforms the color into a fully transparent color. If …\nAlpha unmask the color.\nTransforms the color into a transparent color with the …\nRemoves the transparency from the color. If <code>Self::Color</code> has\nAngular equality, where 0 degrees and 360 degrees are …\nPerforms value-to-value conversion between angle types. …\nRepresents types that can express a full rotation (i.e. …\nRepresents types that can express half of a rotation (i.e. …\nPerforms value-to-value conversion between angle types. …\nAngle values that are real numbers and can represent both …\nAngle types that can represent the full circle using …\nAngle types that can represent the full circle as positive …\nCheck if <code>self</code> and <code>other</code> represent the same angle on a …\nConsider <code>self</code> to be degrees and convert it to radians.\nPerforms a conversion from <code>angle</code>.\nReturn a value that represents a full rotation (i.e. 360 …\nReturn a value that represents half of a rotation (i.e. …\nPerforms a conversion into <code>T</code>.\nNormalize <code>self</code> to a range corresponding to -180 to 180 …\nNormalize <code>self</code> to a range corresponding to 0 to 360 …\nConsider <code>self</code> to be radians and convert it to degrees.\nAdd the source and destination, according to …\nA trait for different ways of mixing colors together.\nA trait for custom blend functions.\nBlending with a custom blend function.\nThe base color type of <code>Self</code>.\nThe Porter Duff composition operators, as described by W3C.\nThe destination alpha.\nThe destination color, or alpha.\nA blending equation.\nA pair of blending equations and corresponding parameters.\nCreate a color where each component is the largest of each …\nCreate a color where each component is the smallest of …\nA simple 1.\nOne minus the destination alpha.\nOne minus the destination color, or alpha.\nOne minus the source alpha.\nOne minus the source color, or alpha.\nA blending parameter.\nA pair of source and destination parameters.\nPremultiplied alpha wrapper.\nAlpha masking and unmasking.\nSubtract the source from the destination, according to …\nThe color’s component type.\nThe source alpha.\nThe source color, or alpha.\nSubtract the destination from the source, according to …\nA simple 0.\nThe transparency component. 0.0 is fully transparent and …\nThe equation for the alpha component.\nThe parameters for the alpha component.\nApply this blend function to a pair of colors.\nPlace <code>self</code> over only the visible parts of <code>other</code>.\nBlend self, as the source color, with <code>destination</code>, using …\nDarken <code>other</code> to reflect <code>self</code>. Results in <code>other</code> if <code>self</code> is …\nThe premultiplied color components (…\nThe equation for the color components.\nThe parameters for the color components.\nReturn the darkest parts of <code>self</code> and <code>other</code>.\nThe destination parameter.\nReturn the absolute difference between <code>self</code> and <code>other</code>. It…\nLighten <code>other</code> to reflect <code>self</code>. Results in <code>other</code> if <code>self</code> is …\nSimilar to <code>difference</code>, but appears to result in a lower …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a pair of blending equations, where all the …\nCreate a pair of additive blending equations with the …\nMultiply <code>self</code> or <code>other</code> if other is dark, or screen them if …\nResults in the parts of <code>self</code> that overlaps the visible …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the lightest parts of <code>self</code> and <code>other</code>.\nMultiply <code>self</code> with <code>other</code>. This uses the alpha component to …\nResults in the parts of <code>self</code> that lies outside the visible …\nPlace <code>self</code> over <code>other</code>. This is the good old common alpha …\nMultiply <code>self</code> or <code>other</code> if other is dark, or screen them if …\nAdd <code>self</code> and <code>other</code>. This uses the alpha component to …\nAlpha mask the color.\nMake a color which is at least as light as <code>self</code> or <code>other</code>.\nLighten <code>other</code> if <code>self</code> is light, or darken <code>other</code> as if it’…\nThe source parameter.\nAlpha unmask the color, resulting in a color and …\nResults in either <code>self</code> or <code>other</code>, where they do not overlap.\nA helper trait that collects bit traits under one name.\nBasic methods for boolean masks.\nAssociates a Boolean type to the implementing type.\nLike <code>Select</code>, but can avoid evaluating the input.\nThe mask type to use for selecting <code>Self</code> values.\nMakes a mask bale to select between two values.\nCreate a new mask where each lane is set to <code>value</code>.\nChecks if all lanes in the mask are <code>false</code>.\nChecks if all lanes in the mask are <code>true</code>.\nSelect lanes from the output of <code>a</code> when corresponding lanes …\nSelect lanes from <code>a</code> when corresponding lanes in <code>self</code> are …\nUses luminance levels and surround conditions to calculate …\nRepresents a surface color, such as a print on a 20% …\nPre-calculated variables for CAM16, that only depend on …\nThe CIE CAM16 color appearance model.\nA trait for converting into a CAM16 color type from <code>C</code> …\nA trait for converting from a CAM16 color type into <code>C</code> …\nPartial CIE CAM16, with lightness and chroma.\nPartial CIE CAM16 with lightness, chroma, and an alpha …\nPartial CIE CAM16, with lightness and colorfulness.\nPartial CIE CAM16 with lightness, colorfulness, and an …\nPartial CIE CAM16, with lightness and saturation.\nPartial CIE CAM16 with lightness, saturation, and an alpha …\nPartial CIE CAM16, with brightness and chroma.\nPartial CIE CAM16 with brightness, chroma, and an alpha …\nPartial CIE CAM16, with brightness and colorfulness.\nPartial CIE CAM16 with brightness, colorfulness, and an …\nPartial CIE CAM16, with brightness and saturation.\nPartial CIE CAM16 with brightness, saturation, and an …\nThe Cartesian form of CAM16-UCS, or J’ a’ b’.\nAn iterator for <code>Cam16UcsJab</code> values.\nCartesian CAM16-UCS with an alpha component.\nThe polar form of CAM16-UCS, or J’M’h’.\nAn iterator for <code>Cam16UcsJmh</code> values.\nPolar CAM16-UCS with an alpha component.\nCIE CAM16 with an alpha component.\nA value between <code>0.0</code> and <code>1.0</code>, where <code>0.0</code> represents no …\nRepresents a dark room, such as a movie theatre. …\nRepresents a dimly lit room with a bright TV or monitor. …\nThe degree of discounting of (or adaptation to) the …\nA trait for converting from a CAM16 color type <code>C</code> without …\nA trait for converting into a CAM16 color type <code>C</code> without …\nParameters for CAM16 that describe the viewing conditions.\nAny custom value from 0% to 20%. Any value outside that …\nThe number type that’s used in <code>parameters</code> when …\nThe number type that’s used in <code>parameters</code> when …\nThe number type that’s used in <code>parameters</code> when …\nThe number type that’s used in <code>parameters</code> when …\nRepresents a static white point in <code>Parameters</code>, as opposed …\nThe static representation of this white point, or …\nA description of the peripheral area.\nA trait for types that can be used as white point …\nThe redness/greenness (a’) of the color.\nThe average luminance of the environment (test adapting …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nBorrow this color’s components as shared references.\nThe yellowness/blueness (b’) of the color.\nThe luminance factor of the background (<em>Yb</em>), on a scale …\nPre-bakes the parameters to avoid repeating parts of the …\nThe brightness (Q) of the color.\nThe brightness (Q) of the color.\nThe brightness (Q) of the color.\nThe brightness (Q) of the color.\nConverts <code>color</code> into <code>Self</code>, using the provided parameters.\nConverts <code>self</code> into <code>C</code>, using the provided parameters.\nPartial CIE CAM16, with lightness and chroma, and helper …\nPartial CIE CAM16, with lightness and colorfulness, and …\nPartial CIE CAM16, with lightness and saturation, and …\nPartial CIE CAM16, with brightness and chroma, and helper …\nPartial CIE CAM16, with brightness and colorfulness, and …\nPartial CIE CAM16, with brightness and saturation, and …\nThe chroma (C) of the color.\nThe chroma (C) of the color.\nThe chroma (C) of the color.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nClear the component vectors. See <code>Vec::clear</code> for details.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe colorfulness (M) of the color.\nThe colorfulness (M’) of the color.\nThe colorfulness (M) of the color.\nThe colorfulness (M) of the color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nCreates a new set of parameters with a dynamic white point …\nCreates a new set of parameters with a static white point …\nThe degree of discounting of (or adaptation to) the …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturn an iterator that moves colors out of the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts <code>cam16</code> into <code>Self</code>, using the provided parameters.\nConvert from a <code>(J&#39;, a&#39;, b&#39;)</code> tuple.\nConvert from a <code>(J&#39;, M&#39;, h&#39;)</code> tuple.\nConvert from a <code>(brightness, saturation, hue)</code> tuple.\nConvert from a <code>(brightness, colorfulness, hue)</code> tuple.\nConvert from a <code>(brightness, chroma, hue)</code> tuple.\nConvert from a <code>(lightness, saturation, hue)</code> tuple.\nConvert from a <code>(lightness, colorfulness, hue)</code> tuple.\nConvert from a <code>(lightness, chroma, hue)</code> tuple.\nCreate a partial set of CIE CAM16 attributes.\nCreate a partial set of CIE CAM16 attributes.\nCreate a partial set of CIE CAM16 attributes.\nCreate a partial set of CIE CAM16 attributes.\nCreate a partial set of CIE CAM16 attributes.\nCreate a partial set of CIE CAM16 attributes.\nDerive CIE CAM16 attributes for the provided color, under …\nDerive partial CIE CAM16 attributes for the provided …\nDerive partial CIE CAM16 attributes for the provided …\nDerive partial CIE CAM16 attributes for the provided …\nDerive partial CIE CAM16 attributes for the provided …\nDerive partial CIE CAM16 attributes for the provided …\nDerive partial CIE CAM16 attributes for the provided …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nGet a color, or slice of colors, that allows modifying the …\nThe hue (h) of the color.\nThe hue (h’) of the color.\nThe hue (h) of the color.\nThe hue (h) of the color.\nThe hue (h) of the color.\nThe hue (h) of the color.\nThe hue (h) of the color.\nThe hue (h) of the color.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>self</code> into <code>C</code>, using the provided parameters.\nConvert to a <code>(J&#39;, a&#39;, b&#39;)</code> tuple.\nConvert to a <code>(J&#39;, M&#39;, h&#39;)</code> tuple.\nConvert to a <code>(brightness, saturation, hue)</code> tuple.\nConvert to a <code>(brightness, colorfulness, hue)</code> tuple.\nConvert to a <code>(brightness, chroma, hue)</code> tuple.\nConvert to a <code>(lightness, saturation, hue)</code> tuple.\nConvert to a <code>(lightness, colorfulness, hue)</code> tuple.\nConvert to a <code>(lightness, chroma, hue)</code> tuple.\nReconstruct a full set of CIE CAM16 attributes, using the …\nReconstruct a full set of CIE CAM16 attributes, using the …\nReconstruct a full set of CIE CAM16 attributes, using the …\nReconstruct a full set of CIE CAM16 attributes, using the …\nReconstruct a full set of CIE CAM16 attributes, using the …\nReconstruct a full set of CIE CAM16 attributes, using the …\nReturns the XYZ value for this white point.\nConstruct an XYZ color that matches these CIE CAM16 …\nConstruct an XYZ color from these CIE CAM16 attributes, …\nConstruct an XYZ color from these CIE CAM16 attributes, …\nConstruct an XYZ color from these CIE CAM16 attributes, …\nConstruct an XYZ color from these CIE CAM16 attributes, …\nConstruct an XYZ color from these CIE CAM16 attributes, …\nConstruct an XYZ color from these CIE CAM16 attributes, …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nReturn an iterator that allows modifying the colors in the …\nThe lightness (J) of the color.\nThe lightness (J’) of the color.\nThe lightness (J’) of the color.\nThe lightness (J) of the color.\nThe lightness (J) of the color.\nThe lightness (J) of the color.\nReturn the <code>lightness</code> value maximum.\nReturn the <code>lightness</code> value maximum.\nReturn an <code>a</code> value maximum that includes the sRGB gamut.\nReturn a <code>b</code> value maximum that includes the sRGB gamut.\nReturn a <code>colorfulness</code> value maximum that includes the sRGB …\nReturn the <code>colorfulness</code> value minimum.\nReturn the <code>lightness</code> value minimum.\nReturn the <code>lightness</code> value minimum.\nReturn an <code>a</code> value minimum that includes the sRGB gamut.\nReturn a <code>b</code> value minimum that includes the sRGB gamut.\nCreate a CAM16-UCS J’ a’ b’ color.\nCreate a CAM16-UCS J’ M’ h’ color.\nCreate a partial CIE CAM16 color.\nCreate a partial CIE CAM16 color.\nCreate a partial CIE CAM16 color.\nCreate a partial CIE CAM16 color.\nCreate a partial CIE CAM16 color.\nCreate a partial CIE CAM16 color.\nCreate a CAM16-UCS J’ M’ h’ color. This is the same …\nCreate a partial CIE CAM16 color. This is the same as …\nCreate a partial CIE CAM16 color. This is the same as …\nCreate a partial CIE CAM16 color. This is the same as …\nCreate a partial CIE CAM16 color. This is the same as …\nCreate a partial CIE CAM16 color. This is the same as …\nCreate a partial CIE CAM16 color. This is the same as …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPop a color’s components from the component vectors. See …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nPush an additional color’s components onto the component …\nThe saturation (s) of the color.\nThe saturation (s) of the color.\nThe saturation (s) of the color.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nUpdate this color with new values.\nA description of the peripheral area, with a value from 0% …\nWhite point of the test illuminant, <em>Xw</em> <em>Yw</em> <em>Zw</em>. <em>Yw</em> should be …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nCreate a struct of vectors with a minimum capacity. See …\nPartial CIE CAM16, with lightness and chroma.\nAn iterator for <code>Cam16Jch</code> values.\nThe chroma (C) of the color.\nReturns the argument unchanged.\nThe hue (h) of the color.\nCalls <code>U::from(self)</code>.\nThe lightness (J) of the color.\nPartial CIE CAM16, with lightness and colorfulness.\nAn iterator for <code>Cam16Jmh</code> values.\nThe colorfulness (M) of the color.\nReturns the argument unchanged.\nThe hue (h) of the color.\nCalls <code>U::from(self)</code>.\nThe lightness (J) of the color.\nPartial CIE CAM16, with lightness and saturation.\nAn iterator for <code>Cam16Jsh</code> values.\nReturns the argument unchanged.\nThe hue (h) of the color.\nCalls <code>U::from(self)</code>.\nThe lightness (J) of the color.\nThe saturation (s) of the color.\nPartial CIE CAM16, with brightness and chroma.\nAn iterator for <code>Cam16Qch</code> values.\nThe brightness (Q) of the color.\nThe chroma (C) of the color.\nReturns the argument unchanged.\nThe hue (h) of the color.\nCalls <code>U::from(self)</code>.\nPartial CIE CAM16, with brightness and colorfulness.\nAn iterator for <code>Cam16Qmh</code> values.\nThe brightness (Q) of the color.\nThe colorfulness (M) of the color.\nReturns the argument unchanged.\nThe hue (h) of the color.\nCalls <code>U::from(self)</code>.\nPartial CIE CAM16, with brightness and saturation.\nAn iterator for <code>Cam16Qsh</code> values.\nThe brightness (Q) of the color.\nReturns the argument unchanged.\nThe hue (h) of the color.\nCalls <code>U::from(self)</code>.\nThe saturation (s) of the color.\nThe output type of a cast to an array.\nMarker trait for types that can be represented as a fixed …\nTrait for casting a reference to collection of arrays into …\nTrait for casting a mutable reference to collection of …\nTrait for casting a collection of arrays from a collection …\nTrait for casting a collection of arrays into a collection …\nTrait for casting a reference to a collection of colors …\nTrait for casting a mutable reference to a collection of …\nTrait for casting a reference to a collection of colors …\nTrait for casting a mutable reference to a collection of …\nTrait for casting a reference to a collection of colors …\nTrait for casting a mutable reference to a collection of …\nThe error type returned when casting a boxed slice of …\nThe type of error returned when the capacity of a <code>Vec</code> didn…\nPacks and unpacks color types with some component order.\nTrait for casting a reference to collection of color …\nTrait for casting a mutable reference to collection of …\nTrait for casting a collection of color components into a …\nTrait for casting a collection of color components from a …\nThe error for when <code>try_components_as</code> fails to cast.\nThe error for when <code>try_components_as_mut</code> fails to cast.\nThe error for when <code>try_from_components</code> fails to cast.\nThe error for when <code>try_into_colors</code> fails to cast.\nTrait for casting a collection of colors from a collection …\nTrait for casting a collection of colors from a collection …\nTrait for casting a collection of colors from a collection …\nTrait for casting a collection of colors into a collection …\nTrait for casting a collection of colors into a collection …\nTrait for casting a collection of colors into a collection …\nThe type of error returned when the length of a <code>Vec</code> didn’…\nA color packed into a compact format, such as an unsigned …\nThe error type returned when casting a slice of components …\nTrait for trying to cast a reference to collection of …\nTrait for trying to cast a mutable reference to collection …\nTrait for trying to cast a collection of color components …\nTrait for trying to cast a collection of colors from a …\nAn unsigned integer with the same size as <code>Self</code>.\nMarker trait for types that can be represented as an …\nTrait for casting a reference to a collection of unsigned …\nTrait for casting a mutable reference to a collection of …\nTrait for casting a collection of unsigned integers from a …\nTrait for casting a collection of unsigned integers into a …\nThe error type returned when casting a <code>Vec</code> of components …\nThe type of error that is returned when casting a <code>Vec</code> of …\nCast this collection of arrays into a collection of colors.\nCast this collection of arrays into a mutable collection …\nCast a collection of colors into a collection of arrays.\nCast this collection of arrays into a collection of colors.\nCast this collection of colors into a collection of arrays.\nCast this collection of colors into a mutable collection …\nCast this collection of colors into a collection of color …\nCast this collection of colors into a mutable collection …\nCast this collection of colors into a collection of …\nCast this collection of colors into a mutable collection …\nThe channel order for the color components in the packed …\nThe color packed into a type <code>P</code>, such as <code>u32</code> or <code>[u8; 4]</code>.\nCast this collection of color components into a reference …\nCast this collection of color components into a mutable …\nCast a collection of colors into a collection of color …\nCast this collection of color components into a collection …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCast from an array to a color type.\nCast from an array of arrays to an array of colors.\nCast from a boxed array to a boxed color type.\nCast from a mutable array reference to a mutable color …\nCast from an array reference to a color type reference.\nCast from a slice of arrays to a slice of colors.\nCast from a boxed slice of arrays to a boxed slice of …\nCast from a mutable slice of arrays to a mutable slice of …\nCast from a <code>Vec</code> of arrays to a <code>Vec</code> of colors.\nCast a collection of arrays into an collection of colors.\nCast from an array of color components to an array of …\nThe same as <code>try_from_component_slice</code> but panics on error.\nThe same as <code>try_from_component_slice_box</code> but panics on …\nThe same as <code>try_from_component_slice_mut</code> but panics on …\nThe same as <code>try_from_component_vec</code> but panics on error.\nCast a collection of color components into an collection …\nCast from an unsigned integer to a color type.\nCast from an array of unsigned integers to an array of …\nCast from a mutable unsigned integer reference to a …\nCast from an unsigned integer reference to a color type …\nCast from a slice of unsigned integers to a slice of …\nCast from a boxed slice of unsigned integers to a boxed …\nCast from a mutable slice of unsigned integers to a …\nCast from a <code>Vec</code> of unsigned integers to a <code>Vec</code> of colors.\nCast a collection of unsigned integers into an collection …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCast from a color type to an array.\nCast from an array of colors to an array of arrays.\nCast from a boxed color type to a boxed array.\nCast from a mutable color type reference to a mutable …\nCast from a color type reference to an array reference.\nCast from a slice of colors to a slice of arrays.\nCast from a boxed slice of colors to a boxed slice of …\nCast from a mutable slice of colors to a mutable slice of …\nCast from a <code>Vec</code> of colors to a <code>Vec</code> of arrays.\nCast this collection of colors into a collection of arrays.\nCast from an array of colors to an array of color …\nCast from a slice of colors to a slice of color components.\nCast from a boxed slice of colors to a boxed slice of …\nCast from a slice of colors to a slice of color components.\nCast from a <code>Vec</code> of colors to a <code>Vec</code> of color components.\nCast this collection of colors into a collection of color …\nCast from a color type to an unsigned integer.\nCast from an array of colors to an array of unsigned …\nCast from a mutable color type reference to a mutable …\nCast from a color type reference to an unsigned integer …\nCast from a slice of colors to a slice of unsigned …\nCast from a boxed slice of colors to a boxed slice of …\nCast from a mutable slice of colors to a mutable slice of …\nCast from a <code>Vec</code> of colors to a <code>Vec</code> of unsigned integers.\nCast this collection of colors into a collection of …\nThe type of error that occurred.\nMap values of color A to values of color B without …\nMap values of color A to values of color B without …\nCombine the components of a color into the packed format.\nTransform a color value into a packed memory …\nTry to cast this collection of color components into a …\nTry to cast this collection of color components into a …\nTry to cast this collection of color components into a …\nCast from a slice of color components to a slice of colors.\nCast from a boxed slice of color components to a boxed …\nCast from a mutable slice of color components to a slice …\nCast from a <code>Vec</code> of color components to a <code>Vec</code> of colors.\nTry to cast a collection of color components into an …\nCast this collection of unsigned integers into a …\nCast this collection of unsigned integers into a mutable …\nCast a collection of colors into a collection of unsigned …\nCast this collection of unsigned integers into a …\nSplit the packed color into its separate components.\nTransform a packed color into a regular color value.\nThe original values.\nThe original values.\nTrait to convert color from one reference white point to …\nTrait to convert color with one reference white point into …\nBradford chromatic adaptation method\nHolds the matrix coefficients for the chromatic adaptation …\nChromatic adaptation methods implemented in the library\nGenerates a conversion matrix to convert the Xyz …\nVonKries chromatic adaptation method\nXyzScaling chromatic adaptation method\nConvert the source color to the destination color using …\nConvert the source color to the destination color using …\nConvert the source color to the destination color using …\nConvert the source color to the destination color using …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates a 3x3 transformation matrix to convert color …\nGet the cone response functions for the chromatic …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n3x3 matrix for the inverse of the cone response domains\n3x3 matrix for the cone response domains\nCalculate the CIEDE2000 Δ<em>E*</em> (Delta E) color difference …\nA trait for calculating the color difference between two …\nCalculate the Δ<em>E</em> color difference between two colors.\nCalculate the distance between two colors as if they were …\nCalculate a combination of Euclidean and …\nCalculate the CIEDE2000 Δ<em>E’</em> (improved IEDE2000 Δ<em>E*</em>) …\nCalculate the Δ<em>E’</em> (improved Δ<em>E</em>) color difference …\nThe type of the calculated color difference.\nThe type for the Δ<em>E*</em> (Delta E).\nThe type for the distance value.\nThe scalar type used for luminance and contrast.\nThe type for the distance value.\nThe type for the distance value.\nCalculate and check the WCAG 2.1 relative contrast and …\nCalculate the Δ<em>E</em> color difference metric for <code>self</code> and …\nCalculate the CIEDE2000 Δ<em>E*</em> (Delta E) color difference …\nCalculate the Euclidean distance from <code>self</code> to <code>other</code>.\nCalculate the squared Euclidean distance from <code>self</code> to <code>other</code>…\nReturn the difference or distance between two colors.\nVerify the contrast between two colors satisfies SC 1.4.6 …\nVerify the contrast between two colors satisfies SC 1.4.6. …\nVerify the contrast between two colors satisfies SC 1.4.11 …\nVerify the contrast between two colors satisfies SC 1.4.3 …\nVerify the contrast between two colors satisfies SC 1.4.3. …\nCalculate the hybrid distance between <code>self</code> and <code>other</code>.\nCalculate the Δ<em>E’</em> (improved Δ<em>E</em>) color difference …\nCalculate the CIEDE2000 Δ<em>E’</em> (improved IEDE2000 Δ<em>E*</em>) …\nReturns the WCAG 2.1 relative luminance contrast between …\nReturns the WCAG 2.1 relative luminance of <code>self</code>.\nRepresents the analogous color scheme on a 12 color wheel.\nRepresents the complementary color scheme.\nRepresents the split complementary color scheme.\nRepresents the tetradic, or square, color scheme.\nRepresents the triadic color scheme.\nReturn the two additional colors of an analogous color …\nReturn the next two analogous colors, after the colors …\nReturn the complementary color of <code>self</code>.\nReturn the two split complementary colors of <code>self</code>.\nReturn the three additional colors of a tetradic color …\nReturn the two additional colors of a triadic color scheme.\nA trait for converting one color from another, in a …\nTemporarily convert colors in place.\nA scope guard that restores the guarded colors to their …\nA trait for unchecked conversion of one color from another.\nTemporarily convert colors in place, without clamping.\nA scope guard that restores the guarded colors to their …\nA trait for converting a color into another, in a possibly …\nTemporarily convert colors in place. The <code>Into</code> counterpart …\nA trait for unchecked conversion of a color into another.\nTemporarily convert colors in place. The <code>Into</code> counterpart …\nThe error type for a color conversion that converted a …\nA trait for fallible conversion of one color from another.\nA trait for fallible conversion of a color into another.\nConsume this error and return the wrapped color\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from T with values clamped to the color defined …\nTemporarily convert from another color type in place.\nConvert from T. The resulting color might be invalid in …\nTemporarily convert from another color type in place, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReplace this guard with a guard that clamps the colors …\nConvert into T with values clamped to the color defined …\nTemporarily convert to another color type in place.\nConvert into T. The resulting color might be invalid in …\nTemporarily convert to another color type in place, …\nImmediately restore the colors to their original type.\nConvert the colors to another type and replace this guard.\nConvert the colors to another type, without clamping, and …\nConvert from T, returning ok if the color is inside of its …\nConvert into T, returning ok if the color is inside of its …\nRepresents <code>2.2f64</code>.\nA transfer function from linear space.\nGamma encoding.\nA transfer function to linear space.\nA generic standard with linear components.\nThe sRGB standard, color space, and transfer function.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert the color component <code>linear</code> from linear space.\nGamma encoding.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")