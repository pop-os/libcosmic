searchState.loadedDescShard("cosmic", 5, "Adapter for chaining two streams.\nAdapter for chaining two streams.\nAdapter for chaining two streams.\nAdapter for chaining two streams.\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nAn adaptor for chunking up items of the stream inside a …\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nClose the sink.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nTransforms a stream into a collection, returning a future …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nConcatenate all items of a stream into a single extendable …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nDrives the stream to completion, counting the number of …\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nRepeats a stream endlessly.\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nCreates a stream which gives the current iteration count …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nMaps this future’s <code>Error</code> to a new error type using the …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nWraps the current stream in a new stream which converts …\nBuilt-in executors and related tools.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nFanout items to multiple sinks.\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nFilters the values produced by this stream while …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlatten the execution of this future when the output of …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlattens the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nFlush the sink, processing all pending items.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nExecute an accumulating asynchronous computation over a …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nFuse a stream such that <code>poll_next</code> will never again be …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with the output of a future before passing it …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with each item of this stream, afterwards …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of a future before …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the error value of this stream, …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of a future before …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nDo something with the success value of this stream, …\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nConverts this stream into a future of …\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nConvert this future into a single element stream.\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nAsynchronous I/O.\nPolls multiple futures simultaneously, returning a tuple …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nFutures-powered synchronization primitives.\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nMaps this future’s error value to a different value.\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nMaps this future’s success value to a different value.\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nWraps the current stream in a new stream which maps the …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nMaps this future’s success value to a different value, …\nThis module contains the <code>Never</code> type.\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nCreates a future that resolves to the next item in the …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nEvaluates and consumes the future, returning the resulting …\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nExecutes another future if this one resolves to an error. …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nChain on a computation for when an error happens, passing …\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nCreates a new stream which exposes a <code>peek</code> method.\nA macro which yields to the event loop once.\nPins a value on the stack.\nAttempts to resolve the future to a final value, …\nA macro which returns the result of polling a future once …\nFlush any remaining output and close this sink, if …\nAttempt to close the object.\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nAttempt to return the contents of the internal buffer, …\nFlush any remaining output from this sink.\nAttempt to flush the object, ensuring that any buffered …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nAttempt to pull out the next value of this stream, …\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempts to prepare the <code>Sink</code> to receive a value.\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nAttempt to seek to an offset, in bytes, in a stream.\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nAttempt to write bytes from <code>buf</code> into the object.\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nA “prelude” for crates using the <code>futures</code> crate.\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nExtracts the successful type of a <code>Poll&lt;T&gt;</code>.\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nAn adaptor for chunking up ready items of the stream …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nTurn this future into a future that yields <code>()</code> on …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nPolls multiple futures and streams simultaneously, …\nPolls multiple futures and streams simultaneously, …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nReturns a <code>Future</code> that resolves when the next item in this …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given item has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nA future that completes after the given stream has been …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nCreate a cloneable handle to this future where all handles …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nMap this sink’s error to a different error type using …\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nTransforms the error returned by the sink.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nCreates a new stream which skips <code>n</code> items of the underlying …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nBegin the process of sending a value to the sink. Each …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCombines several streams, all producing the same <code>Item</code> …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream until the provided future …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTake elements from this stream while the provided …\nTools for working with tasks.\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nChain on a computation for when a future finished, passing …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nComputes from this stream’s items new items of a …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAn adaptor for chunking up successful items of the stream …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to transform a stream into a collection, returning …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to concatenate all items of a stream into a single …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nAttempt to filter the values produced by this stream while …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nFlattens a stream of streams into just one continuous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempt to execute an accumulating asynchronous …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nPolls multiple futures simultaneously, resolving to a …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nCreates a future that attempts to resolve the next item in …\nPoll this <code>TryFuture</code> as if it were a <code>Future</code>.\nPoll this <code>TryStream</code> as if it were a <code>Stream</code>.\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nAn adaptor for chunking up successful, ready items of the …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nSkip elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTake elements on this stream while the provided …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nUnwraps this future’s output, producing a future with …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nConverts a stream of pairs into a future, which resolves …\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nWrite data into this object.\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nAn adapter for zipping two streams together.\nA multi-producer, single-consumer queue for sending values …\nA channel for sending a single message between …\nThe receiving end of a bounded mpsc channel.\nThe error type for <code>Sender</code>s used as <code>Sink</code>s.\nThe transmission end of a bounded mpsc channel.\nThe error type returned from <code>try_next</code>.\nThe error type returned from <code>try_send</code>.\nThe receiving end of an unbounded mpsc channel.\nThe transmission end of an unbounded mpsc channel.\nCreates a bounded mpsc channel for communicating between …\nCloses the receiving half of a channel, without dropping …\nCloses the receiving half of a channel, without dropping …\nCloses this channel from the sender side, preventing any …\nCloses this channel from the sender side, preventing any …\nDisconnects this sender from the channel, closing it if …\nDisconnects this sender from the channel, closing it if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHashes the receiver into the provided hasher\nHashes the receiver into the provided hasher\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the message that was attempted to be sent but …\nDrops the message and converts into a <code>SendError</code>.\nReturns whether this channel is closed without needing a …\nReturns whether this channel is closed without needing a …\nReturns whether the sender send to this receiver.\nReturns whether the sender send to this receiver.\nReturns <code>true</code> if this error is a result of the receiver …\nReturns <code>true</code> if this error is a result of the receiver …\nReturn false is channel has no queued messages, true …\nReturns <code>true</code> if this error is a result of the channel …\nReturns <code>true</code> if this error is a result of the channel …\nReturn the number of messages in the queue or 0 if channel …\nPolls the channel to determine if there is guaranteed …\nCheck if the channel is ready to receive a message.\nReturns whether the senders send to the same receiver.\nReturns whether the senders send to the same receiver.\nSend a message on the channel.\nSend a message on the channel.\nTries to receive the next message without notifying a …\nTries to receive the next message without notifying a …\nAttempts to send a message on this <code>Sender</code>, returning the …\nCreates an unbounded mpsc channel for communicating …\nSends a message along this channel.\nError returned from a <code>Receiver</code> when the corresponding …\nA future that resolves when the receiving end of a channel …\nA future for a value that will be provided by another …\nA means of transmitting a single value to another task.\nCreates a future that resolves when this <code>Sender</code>’s …\nCreates a new one-shot channel for sending a single value …\nGracefully close this receiver, preventing any subsequent …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTests to see whether this <code>Sender</code>’s corresponding <code>Receiver</code>\nTests to see whether this <code>Sender</code> is connected to the given …\nPolls this <code>Sender</code> half to detect whether its associated …\nCompletes this oneshot with a successful result.\nAttempts to receive a message outside of the context of a …\nAn iterator which blocks on values from a stream until …\nRepresents an executor context.\nAn error returned by <code>enter</code> if an execution scope has …\nA single-threaded task pool for polling futures to …\nA handle to a <code>LocalPool</code> that implements <code>Spawn</code>.\nA general-purpose thread pool for scheduling tasks that …\nThread pool configuration object.\nExecute the closure <code>f</code> immediately after each worker thread …\nExecute closure <code>f</code> just prior to shutting down each worker …\nRun a future to completion on the current thread.\nTurn a stream into a blocking iterator.\nCreate a default thread pool configuration, which can then …\nCreate a <code>ThreadPool</code> with the given configuration.\nMarks the current thread as being within the dynamic …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this <code>BlockingStream</code> into the inner <code>Stream</code> type.\nSet thread name prefix of a future ThreadPool.\nCreates a new thread pool with the default configuration.\nCreate a default thread pool configuration.\nCreate a new, empty pool of tasks.\nSet size of a future ThreadPool\nRun all tasks in the pool to completion.\nRuns all the tasks in the pool until the given future …\nRuns all tasks in the pool and returns if no more progress …\nSpawns a future that will be run to completion.\nSpawns a task that polls the given future with output <code>()</code> to\nGet a clonable handle to the pool as a <code>Spawn</code>.\nSet stack size of threads in the pool, in bytes.\nRuns all tasks and returns after completing one future or …\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nA simple wrapper type which allows types which implement …\nAn entity already exists, often a file.\nProgram argument list too long.\nRead bytes asynchronously.\nAn extension trait which adds utility methods to …\nRead bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncRead</code> …\nSeek bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncSeek</code> …\nWrite bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncWrite</code>…\nThe operation failed because a pipe was closed.\nThe <code>BufReader</code> struct adds buffering to any reader.\nWraps a writer and buffers its output.\nReader for the <code>chain</code> method.\nFuture for the <code>close</code> method.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nFuture for the <code>copy()</code> function.\nFuture for the <code>copy_buf()</code> function.\nFuture for the <code>copy_buf_abortable()</code> function.\nCross-device or cross-filesystem (hard) link or rename.\nSets the offset to the current position plus the specified …\nA <code>Cursor</code> wraps an in-memory buffer and provides it with a …\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\nReader for the <code>empty()</code> function.\nSets the offset to the size of this object plus the …\nContains the error value\nThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…\nA list specifying general categories of I/O error.\nExecutable file is busy.\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nFuture for the <code>fill_buf</code> method.\nFuture for the <code>flush</code> method.\nThe remote host is not reachable.\nThe operation was partially successful and needs to be …\nThis operation was interrupted.\nSink for the <code>into_sink</code> method.\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\nA buffer type used with <code>Write::write_vectored</code>.\nA buffer type used with <code>Read::read_vectored</code>.\nThe filesystem object is, unexpectedly, a directory.\nWrap a writer, like <code>BufWriter</code> does, but prioritizes …\nStream for the <code>lines</code> method.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nContains the success value\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nFilesystem quota or some other kind of quota was exceeded.\nFuture for the <code>read</code> method.\nFuture for the <code>read_exact</code> method.\nThe readable half of an object returned from …\nFuture for the <code>read_line</code> method.\nThe filesystem or storage medium is read-only, but a write …\nFuture for the <code>read_to_end</code> method.\nFuture for the <code>read_to_string</code> method.\nFuture for the <code>read_until</code> method.\nFuture for the <code>read_vectored</code> method.\nReader for the <code>repeat()</code> function.\nResource is busy.\nA specialized <code>Result</code> type for I/O operations.\nError indicating a <code>ReadHalf&lt;T&gt;</code> and <code>WriteHalf&lt;T&gt;</code> were not …\nFuture for the <code>BufReader::seek_relative</code> method.\nFuture for the <code>seek</code> method.\nEnumeration of possible methods to seek within an I/O …\nWriter for the <code>sink()</code> function.\nStale network file handle.\nSets the offset to the provided number of bytes.\nThe underlying storage (typically, a filesystem) is full.\nReader for the <code>take</code> method.\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nAn owned window around an underlying buffer.\nThe operation needs to block to complete, but the blocking …\nFuture for the <code>write</code> method.\nFuture for the <code>write_all</code> method.\nThe writable half of an object returned from …\nFuture for the <code>write_vectored</code> method.\nAn error returned when an operation could not be completed …\nAdvance the internal cursor of the slice.\nAdvance the internal cursor of the slice.\nAdvance a slice of slices.\nAdvance a slice of slices.\nGet the underlying bytes as a slice with the original …\nReturns a reference to the internally buffered data.\nReturns a reference to the internally buffered data.\nReturns a reference to <code>buf_writer</code>’s internally buffered …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nCreates a future which copies all the bytes from one …\nCreates a future which copies all the bytes from one …\nCreates a future which copies all the bytes from one …\nAttempts to downcast the custom boxed error to <code>E</code>.\nConstructs a new handle to an empty reader.\nReturns the end index of this window into the underlying …\nShows a human-readable description of the <code>ErrorKind</code>.\nConverts Calloop’s error type into a <code>std::io::Error</code>.\nConverts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.\nConverts <code>TryReserveError</code> to an error with …\nConverts an <code>ErrorKind</code> into an <code>Error</code>.\nReturns the argument unchanged.\nConvert the <code>Error</code> to an <code>io::Error</code>, preserving the original …\nConvert a <code>serde_json::Error</code> into an <code>io::Error</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new instance of an <code>Error</code> from a particular OS …\nReturns a mutable reference to the inner error wrapped by …\nReturns a mutable reference to the contained IO object.\nAcquires a mutable reference to the underlying sink or …\nAcquires a mutable reference to the underlying sink or …\nGets mutable references to the underlying readers in this …\nGets a mutable reference to the underlying value in this …\nAcquires a mutable reference to the underlying sink or …\nGets a mutable reference to the underlying buffer inside …\nAcquires a pinned mutable reference to the underlying sink …\nAcquires a pinned mutable reference to the underlying sink …\nGets pinned mutable references to the underlying readers …\nAcquires a pinned mutable reference to the underlying sink …\nReturns a reference to the inner error wrapped by this …\nReturns a reference to the contained IO object.\nAcquires a reference to the underlying sink or stream that …\nAcquires a reference to the underlying sink or stream that …\nAcquires a reference to the underlying sink or stream that …\nGets references to the underlying readers in this <code>Chain</code>.\nGets a reference to the underlying value in this cursor.\nAcquires a reference to the underlying sink or stream that …\nGets a shared reference to the underlying buffer inside of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>Error</code>, returning its inner error (if any).\nConsumes self and returns the contained IO object.\nConsumes this combinator, returning the underlying sink or …\nConsumes this combinator, returning the underlying sink or …\nConsumes the <code>Chain</code>, returning the wrapped readers.\nConsumes this cursor, returning the underlying value.\nConsumes this combinator, returning the underlying sink or …\nConsumes this <code>Window</code>, returning the underlying buffer.\nGet the underlying bytes as a mutable slice with the …\nChecks if this <code>ReadHalf</code> and some <code>WriteHalf</code> were split from …\nChecks if this <code>WriteHalf</code> and some <code>ReadHalf</code> were split from …\nReturns the corresponding <code>ErrorKind</code> for this error.\nReturns an error representing the last OS error which …\nReturns the remaining number of bytes that can be read …\nCreates a new I/O error from a known kind of error as well …\nCreates a new <code>IoSliceMut</code> wrapping a byte slice.\nCreates a new <code>IoSlice</code> wrapping a byte slice.\nCreates a new <code>AllowStdIo</code> from an existing IO object.\nCreates a new <code>BufReader</code> with a default buffer capacity. …\nCreates a new <code>BufWriter</code> with a default buffer capacity. …\nCreate a new <code>LineWriter</code> with default buffer capacity. The …\nCreates a new cursor wrapping the provided underlying …\nCreates a new window around the buffer <code>t</code> defaulting to the …\nCreates a new I/O error from an arbitrary error payload.\nAttempt to close the object.\nForward to <code>buf_writer</code> ’s <code>BufWriter::poll_close()</code>\nAttempt to return the contents of the internal buffer, …\nAttempt to flush the object, ensuring that any buffered …\nForward to <code>buf_writer</code> ’s <code>BufWriter::poll_flush()</code>\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempt to seek to an offset, in bytes, in a stream.\nSeek to an offset, in bytes, in the underlying reader.\nSeek to the offset, in bytes, in the underlying writer.\nAttempts to seek relative to the current position. If the …")