searchState.loadedDescShard("cosmic", 1, "Calls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the color component <code>encoded</code> into linear space.\nLinear encoding\nThe sRGB standard.\nRepresents <code>2.2f64</code>.\nGamma encoding.\nThe transfer function for gamma encoded colors.\nA type level float constant.\nThe represented number.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA generic standard with linear components.\nLinear color component encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe sRGB standard, color space, and transfer function.\nHSL color space.\nLinear HSL with an alpha component. See the <code>Hsla</code> …\nAn iterator for <code>Hsl</code> values.\nThe transparency component. 0.0 (or 0u8) is fully …\nThe color.\nReturns the argument unchanged.\nThe hue of the color, in degrees. Decides if it’s red, …\nCalls <code>U::from(self)</code>.\nDecides how light the color will look. 0.0 will be black, …\nThe colorfulness of the color. 0.0 gives gray scale colors …\nThe white point and RGB primaries this color is adapted …\nHSLuv color space.\nHSLuv with an alpha component. See the <code>Hsluva</code> …\nAn iterator for <code>Hsluv</code> values.\nThe transparency component. 0.0 (or 0u8) is fully …\nThe color.\nReturns the argument unchanged.\nThe hue of the color, in degrees. Decides if it’s red, …\nCalls <code>U::from(self)</code>.\nDecides how light the color will look. 0.0 will be black, …\nThe colorfulness of the color, as a percentage of the …\nThe white point and RGB primaries this color is adapted …\nHSV color space.\nLinear HSV with an alpha component. See the <code>Hsva</code> …\nAn iterator for <code>Hsv</code> values.\nThe transparency component. 0.0 (or 0u8) is fully …\nThe color.\nReturns the argument unchanged.\nThe hue of the color, in degrees. Decides if it’s red, …\nCalls <code>U::from(self)</code>.\nThe colorfulness of the color. 0.0 gives gray scale colors …\nThe white point and RGB primaries this color is adapted …\nDecides how bright the color will look. 0.0 will be black, …\nA hue type for the CAM16 color appearance model.\nIterator over <code>Cam16Hue</code> values.\nA hue type for the CIE L*a*b* family of color spaces.\nIterator over <code>LabHue</code> values.\nA hue type for the CIE L*u*v* family of color spaces.\nIterator over <code>LuvHue</code> values.\nA hue type for the Oklab color space.\nIterator over <code>OklabHue</code> values.\nA hue type for the RGB family of color spaces.\nIterator over <code>RgbHue</code> values.\nBorrow this hue’s value as shared references.\nClear the hue vector. See <code>Vec::clear</code> for details.\nGet an owned, cloned version of this hue.\nGet an owned, cloned version of this hue.\nGet an owned, copied version of this hue.\nGet an owned, copied version of this hue.\nReturn an iterator that moves hues out of the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a hue from <code>a</code> and <code>b</code>, normalized to <code>[0°, 360°)</code>.\nCreate a new hue from degrees. This is an alias for <code>new</code>.\nConvert from another angle type.\nCreate a new hue from radians, instead of degrees.\nGet a hue, or slice of hues, with references to the values …\nGet a hue, or slice of hues, that allows modifying the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>a</code> and <code>b</code> values for this hue, normalized to <code>[-1, 1]</code>.\nGet the hue as degrees, in the range <code>(-180, 180]</code>.\nConvert into another angle type.\nGet the internal representation without normalizing or …\nConvert the hue to positive degrees, in the range <code>[0, 360)</code>.\nConvert the hue to positive radians, in the range <code>[0, 2π)</code>.\nConvert the hue to radians, in the range <code>(-π, π]</code>.\nGet the internal representation as degrees, without …\nGet the internal representation as radians, without …\nReturn an iterator over the hues in the wrapped collection.\nReturn an iterator that allows modifying the hues in the …\nCreate a new hue, specified in the default unit for the …\nPop a hue from the hue vector. See <code>Vec::pop</code> for details.\nPush an additional hue onto the hue vector. See <code>Vec::push</code> …\nUpdate this hue with a new value.\nCreate a struct with a vector with a minimum capacity. See …\nHWB color space.\nLinear HWB with an alpha component. See the <code>Hwba</code> …\nAn iterator for <code>Hwb</code> values.\nThe transparency component. 0.0 (or 0u8) is fully …\nThe blackness of the color. It specifies the amount black …\nThe color.\nReturns the argument unchanged.\nThe hue of the color, in degrees. Decides if it’s red, …\nCalls <code>U::from(self)</code>.\nThe white point and RGB primaries this color is adapted …\nThe whiteness of the color. It specifies the amount white …\nAn iterator for <code>Lab</code> values.\nThe CIE L*a*b* (CIELAB) color space.\nCIE L*a*b* (CIELAB) with an alpha component. See the <code>Laba</code> …\na* goes from red at -128 to green at 127.\nThe transparency component. 0.0 (or 0u8) is fully …\nb* goes from yellow at -128 to blue at 127.\nThe color.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nL* is the lightness of the color. 0.0 gives absolute black …\nThe white point associated with the color’s illuminant …\nAn iterator for <code>Lch</code> values.\nCIE L*C*h°, a polar version of CIE L*a*b*.\nCIE L*C*h° with an alpha component. See the <code>Lcha</code> …\nThe transparency component. 0.0 (or 0u8) is fully …\nC* is the colorfulness of the color. It’s similar to …\nThe color.\nReturns the argument unchanged.\nThe hue of the color, in degrees. Decides if it’s red, …\nCalls <code>U::from(self)</code>.\nL* is the lightness of the color. 0.0 gives absolute black …\nThe white point associated with the color’s illuminant …\nAn iterator for <code>Lchuv</code> values.\nCIE L*C*uv h°uv, a polar version of CIE L*u*v*.\nCIE L*C*uv h°uv with an alpha component. See the <code>Lchuva</code> …\nThe transparency component. 0.0 (or 0u8) is fully …\nC*uv is the colorfulness of the color. It’s similar to …\nThe color.\nReturns the argument unchanged.\nThe hue of the color, in degrees. Decides if it’s red, …\nCalls <code>U::from(self)</code>.\nL* is the lightness of the color. 0.0 gives absolute black …\nThe white point associated with the color’s illuminant …\nGamma 2.2 encoded luminance.\nGamma 2.2 encoded luminance with an alpha component.\nAn iterator for <code>Luma</code> values.\nLinear luminance.\nLinear luminance with an alpha component.\nLuminance.\nA white point and a transfer function.\nLuminance with an alpha component. See the <code>Lumaa</code> …\nA packed representation of Luma+Alpha in AL order.\nA packed representation of Luma+Alpha in LA order.\nsRGB encoded luminance.\nsRGB encoded luminance with an alpha component.\nThe transfer function for the luminance component.\nThe white point of the color space.\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nBorrow this color’s components as shared references.\nThe channel order for the color components in the packed …\nThe channel order for the color components in the packed …\nChannel orders for packed Luma types.\nClear the component vectors. See <code>Vec::clear</code> for details.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color packed into a type <code>P</code>, such as <code>u32</code> or <code>[u8; 4]</code>.\nThe color packed into a type <code>P</code>, such as <code>u32</code> or <code>[u8; 4]</code>.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nReturn an iterator that moves colors out of the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a <code>(luma,)</code> tuple.\nConvert from linear luminance from a different encoding.\nConvert from another component type.\nConvert linear luminance to non-linear luminance.\nConvert from a packed <code>u16</code> with specifiable component order.\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, that allows modifying the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a <code>(luma,)</code> tuple.\nConvert a linear color to a different encoding.\nConvert into another component type.\nConvert the color to linear luminance.\nConvert to a packed <code>u16</code> with with specifiable component …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator that allows modifying the colors in the …\nThe lightness of the color. 0.0 is black and 1.0 is white.\nThe lightness of the color. 0.0 is black and 1.0 is white.\nThe lightness of the color. 0.0 is black and 1.0 is white.\nThe lightness of the color. 0.0 is black and 1.0 is white.\nReturn the <code>luma</code> value maximum.\nReturn the <code>luma</code> value minimum.\nCreate a luminance color.\nPop a color’s components from the component vectors. See …\nPush an additional color’s components onto the component …\nUpdate this color with new values.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nCreate a struct of vectors with a minimum capacity. See …\nLuma+Alpha color packed in AL order.\nLuma+Alpha color packed in LA order.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator for <code>Luv</code> values.\nThe CIE L*u*v* (CIELUV) color space.\nCIE L*u*v* (CIELUV) with an alpha component. See the <code>Luva</code> …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe color.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nL* is the lightness of the color. 0.0 gives absolute black …\nThe range of valid u* varies depending on the values of L* …\nThe range of valid v* varies depending on the values of L* …\nThe white point associated with the color’s illuminant …\nGet a SVG/CSS3 color by name. Can be toggled with the …\nMethod for getting the absolute value of a number.\nA helper trait that collects arithmetic traits under one …\nMethod for getting the cube root of a number.\nTrait for clamping a value.\nAssigning trait for clamping a value.\nMethods for calculating <code>e ^ x</code>,\nTrait for creating a vectorized value from a scalar value.\nConversion from an array of scalars to a vectorized value.\nMethods for calculating the lengths of a hypotenuse.\nConversion from a vectorized value to an array of scalars.\nMethods for checking if a number can be used as a divisor.\nTrait for getting the natural logarithm of <code>self</code>.\nMethods for getting the largest or smallest of two values.\nCombined multiplication and addition operation.\nCombined multiplication and subtraction operation.\nMethods for the value <code>1</code>.\nThe resulting type.\nThe resulting type.\nTrait for lanewise comparison of two values.\nMethod for raising a number by a real number exponent.\nMethod for raising a number by a signed integer exponent.\nMethod for raising a number by a n unsigned integer …\nNumbers that belong to the real number set. It’s both a …\nMethod for calculating <code>1 / x</code>.\nMethods for rounding numbers to integers.\nSaturating addition operation.\nSaturating subtraction operation.\nThe scalar type that is stored in each lane of <code>Self</code>. …\nTrait for getting a number that represents the sign of <code>self</code>…\nMethod for getting the square root of a number.\nTrigonometry methods and their inverses.\nMethods for the value <code>0</code>.\nReturns the absolute value of <code>self</code>.\nCompute the arccosine in radians of <code>self</code>.\nCompute the arcsine in radians of <code>self</code>.\nCompute the arctangent in radians of <code>self</code>.\nCompute the arctangent in radians of <code>self</code> (y) and <code>other</code> …\nReturns the cube root of <code>self</code>.\nReturn the smallest integer greater than or equal to <code>self</code>.\nClamp self to be within the range <code>[min, max]</code>.\nClamp self to be within the range <code>[min, max]</code>.\nClamp self to be within the range <code>(-∞, max]</code>.\nClamp self to be within the range <code>(-∞, max]</code>.\nClamp self to be within the range <code>[min, ∞)</code>.\nClamp self to be within the range <code>[min, ∞)</code>.\nCompute the cosine of <code>self</code> (in radians).\nCompares <code>self == other</code>.\nReturn <code>e ^ self</code>.\nReturn the largest integer less than or equal to <code>self</code>.\nCreates a vectorized value from an array of scalars.\nCreate a number from an <code>f64</code> value, mainly for converting …\nCreate a new vectorized value where each lane is <code>scalar</code>. …\nCompares <code>self &gt; other</code>.\nCompares <code>self &gt;= other</code>.\nReturns the length of the hypotenuse formed by <code>self</code> and …\nCreates an array of scalars from a vectorized value.\nReturn <code>true</code> if <code>self</code> can be used as a divisor in <code>x / self</code>.\nReturns the natural logarithm of <code>self</code>.\nCompares <code>self &lt; other</code>.\nCompares <code>self &lt;= other</code>.\nReturn the largest of <code>self</code> and <code>other</code>.\nReturn the smallest of <code>self</code> and <code>other</code>.\nReturn a pair of <code>self</code> and <code>other</code>, where the smallest is the …\nMultiplies self with <code>m</code> and add <code>a</code>, as in <code>(self * m) + a</code>.\nMultiplies self with <code>m</code> and subtract <code>s</code>, as in <code>(self * m) - s</code>…\nCompares <code>self != other</code>.\nCreate a new <code>1</code> value.\nReturn <code>self</code> raised to the power of <code>exp</code>.\nReturn <code>self</code> raised to the power of <code>exp</code>.\nReturn <code>self</code> raised to the power of <code>exp</code>.\nReturn <code>1 / self</code>.\nReturn the nearest integer to <code>self</code>. Round half-way cases …\nReturns the sum of <code>self</code> and <code>other</code>, but saturates instead …\nReturns the difference of <code>self</code> and <code>other</code>, but saturates …\nReturns a number that represents the sign of <code>self</code>. For …\nCompute the sine of <code>self</code> (in radians).\nSimultaneously compute the sine and cosine of <code>self</code> (in …\nReturns the square root of <code>self</code>.\nCompute the tangent of <code>self</code> (in radians).\nCreate a new <code>0</code> value.\nAn iterator for <code>Okhsl</code> values.\nA Hue/Saturation/Lightness representation of <code>Oklab</code> in the …\nOkhsl with an alpha component.\nThe transparency component. 0.0 (or 0u8) is fully …\nThe color.\nReturns the argument unchanged.\nThe hue of the color, in degrees of a circle.\nCalls <code>U::from(self)</code>.\nThe relative luminance of the color, where\nThe saturation (freedom of black or white) of the color.\nAn iterator for <code>Okhsv</code> values.\nA Hue/Saturation/Value representation of <code>Oklab</code> in the <code>sRGB</code> …\nOkhsv with an alpha component. See the <code>Okhsva</code> …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe color.\nReturns the argument unchanged.\nThe hue of the color, in degrees of a circle.\nCalls <code>U::from(self)</code>.\nThe saturation (freedom of whitishness) of the color.\nThe monochromatic brightness of the color.\nAn iterator for <code>Okhwb</code> values.\nA Hue/Whiteness/Blackness representation of <code>Oklab</code> in the …\nOkhwb with an alpha component. See the <code>Okhwba</code> …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe amount of black, mixed in the pure hue, ranging from …\nThe color.\nReturns the argument unchanged.\nThe hue of the color, in degrees of a circle.\nCalls <code>U::from(self)</code>.\nThe amount of white, mixed in the pure hue, ranging from …\nAn iterator for <code>Oklab</code> values.\nThe Oklab color space.\nOklab with an alpha component.\n<code>a</code> changes the hue from reddish to greenish, when moving …\nThe transparency component. 0.0 (or 0u8) is fully …\n<code>b</code> changes the hue from yellowish to blueish, when moving …\nThe color.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>l</code> is the lightness of the color. <code>0</code> gives absolute black …\nAn iterator for <code>Oklch</code> values.\nOklch, a polar version of Oklab.\nOklch with an alpha component. See the <code>Oklcha</code> …\nThe transparency component. 0.0 (or 0u8) is fully …\n<code>chroma</code> is the colorfulness of the color. A color with …\nThe color.\nReturns the argument unchanged.\nh is the hue of the color, in degrees. Decides if it’s …\nCalls <code>U::from(self)</code>.\nL is the lightness of the color. 0 gives absolute black …\nError type for parsing a string of hexadecimal characters …\nGamma 2.2 encoded sRGB.\nGamma 2.2 encoded sRGB with an alpha component.\nThe hex value was not in a valid 3 or 6 character format.\nAn iterator for <code>Rgb</code> values.\nLinear sRGB.\nLinear sRGB with an alpha component.\nA packed representation of RGBA in ABGR order.\nA packed representation of RGBA in ARGB order.\nA packed representation of RGBA in BGRA order.\nA packed representation of RGBA in RGBA order.\nAn error occurred while parsing the string into a valid …\nRepresents the red, green and blue primaries of an RGB …\nThe primaries of the RGB color space.\nGeneric RGB.\nA set of primaries and a white point.\nAn RGB space and a transfer function.\nGeneric RGB with an alpha component. See the <code>Rgba</code> …\nThe hex value was not in a valid 4 or 8 character format.\nThe RGB color space.\nNon-linear sRGB, the most common RGB input/output format.\nNon-linear sRGB with an alpha component.\nThe transfer function for the color components.\nThe white point of the RGB color space.\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe transparency component. 0.0 (or 0u8) is fully …\nBorrow this color’s components as shared references.\nPrimary blue.\nThe amount of blue light, where 0.0 is no blue light and …\nThe amount of blue light, where 0.0 is no blue light and …\nThe amount of blue light, where 0.0 is no blue light and …\nThe amount of blue light, where 0.0 is no blue light and …\nThe channel order for the color components in the packed …\nThe channel order for the color components in the packed …\nThe channel order for the color components in the packed …\nThe channel order for the color components in the packed …\nChannel orders for packed RGBA types.\nClear the component vectors. See <code>Vec::clear</code> for details.\nGet an owned, cloned version of this color.\nGet an owned, cloned version of this color.\nThe color.\nThe color.\nThe color.\nThe color.\nThe color packed into a type <code>P</code>, such as <code>u32</code> or <code>[u8; 4]</code>.\nThe color packed into a type <code>P</code>, such as <code>u32</code> or <code>[u8; 4]</code>.\nThe color packed into a type <code>P</code>, such as <code>u32</code> or <code>[u8; 4]</code>.\nThe color packed into a type <code>P</code>, such as <code>u32</code> or <code>[u8; 4]</code>.\nGet an owned, copied version of this color.\nGet an owned, copied version of this color.\nReturn an iterator that moves colors out of the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a <code>(red, green, blue)</code> tuple.\nConvert linear RGB from a different encoding.\nConvert the RGB components from another number type.\nConvert linear RGB to non-linear RGB.\nParses a color hex code of format ‘#ff00bb’ or ‘#abc…\nConvert from a packed <code>u32</code> with specifiable component order.\nGet a color, or slice of colors, with references to the …\nGet a color, or slice of colors, that allows modifying the …\nPrimary green.\nThe amount of green light, where 0.0 is no green light and …\nThe amount of green light, where 0.0 is no green light and …\nThe amount of green light, where 0.0 is no green light and …\nThe amount of green light, where 0.0 is no green light and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a <code>(red, green, blue)</code> tuple.\nConvert a linear color to a different encoding.\nConvert the RGB components into another number type.\nConvert the color to linear RGB.\nConvert to a packed <code>u32</code> with with specifiable component …\nReturn an iterator over the colors in the wrapped …\nReturn an iterator that allows modifying the colors in the …\nReturn the <code>blue</code> value maximum.\nReturn the <code>green</code> value maximum.\nReturn the <code>red</code> value maximum.\nReturn the <code>blue</code> value minimum.\nReturn the <code>green</code> value minimum.\nReturn the <code>red</code> value minimum.\nCreate an RGB color.\nPop a color’s components from the component vectors. See …\nPush an additional color’s components onto the component …\nPrimary red.\nThe amount of red light, where 0.0 is no red light and 1.0 …\nThe amount of red light, where 0.0 is no red light and 1.0 …\nThe amount of red light, where 0.0 is no red light and 1.0 …\nThe amount of red light, where 0.0 is no red light and 1.0 …\nGet a pre-defined matrix for converting an RGB value with …\nUpdate this color with new values.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nThe kind of RGB standard. sRGB is the default.\nCreate a struct of vectors with a minimum capacity. See …\nGet a pre-defined matrix for converting an XYZ value into …\nRGBA color packed in ABGR order.\nRGBA color packed in ARGB order.\nRGBA color packed in BGRA order.\nRGBA color packed in RGBA order.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCombines <code>serialize_as_array</code> and <code>deserialize_as_array</code> as a …\nCombines <code>serialize_as_uint</code> and <code>deserialize_as_uint</code> as a …\nDeserialize a value from an array of its components.\nDeserialize a value from an unsigned integer.\nDeserialize a transparent color without requiring the …\nDeserialize a premultiplied transparent color without …\nSerialize the value as an array of its components.\nSerialize the value as an unsigned integer.\nDeserialize a value from an array of its components.\nSerialize the value as an array of its components.\nDeserialize a value from an unsigned integer.\nSerialize the value as an unsigned integer.\nConverts from a stimulus color component type, while …\nConverts into a stimulus color component type, while …\nColor components that represent a stimulus intensity.\nA marker trait for colors where all components are stimuli.\nConverts <code>other</code> into <code>Self</code>, while performing the appropriate …\nConverts <code>self</code> into <code>T</code>, while performing the appropriate …\nThe highest displayable value this component type can …\nCIE standard illuminant A\nRepresents an unspecified reference white point.\nCIE standard illuminant B\nCIE standard illuminant C\nCIE D series standard illuminant - D50\nCIE D series standard illuminant - D50\nCIE D series standard illuminant - D55\nCIE D series standard illuminant - D55\nCIE D series standard illuminant - D65\nCIE D series standard illuminant - D65\nCIE D series standard illuminant - D75\nCIE D series standard illuminant - D75\nCIE standard illuminant E\nCIE fluorescent illuminant series - F11\nCIE fluorescent illuminant series - F2\nCIE fluorescent illuminant series - F7\nWhitePoint defines the Xyz color co-ordinates for a given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the Xyz chromaticity co-ordinates for the white point.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator for <code>Xyz</code> values.\nThe CIE 1931 XYZ color space.\nCIE 1931 XYZ with an alpha component. See the <code>Xyza</code> …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe color.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe white point associated with the color’s illuminant …\nX is the scale of what can be seen as a response curve for …\nY is the luminance of the color, where 0.0 is black and …\nZ is the scale of what can be seen as the blue …\nAn iterator for <code>Yxy</code> values.\nThe CIE 1931 Yxy (xyY) color space.\nCIE 1931 Yxy (xyY) with an alpha component. See the <code>Yxya</code> …\nThe transparency component. 0.0 (or 0u8) is fully …\nThe color.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nluma (Y) was a measure of the brightness or luminance of a …\nThe white point associated with the color’s illuminant …\nx chromaticity co-ordinate derived from XYZ color space as …\ny chromaticity co-ordinate derived from XYZ color space as …\nget the index into the steps array for a given color the …\nget the index for a new color some steps away from a base …\nget surface color given a base and some steps\nget surface color given a base and some steps\nget text color given a base background color\nchecks that the color is valid srgb\nfind the nearest chroma which makes our color a valid …\nGet an array of 100 colors with a specific hue and chroma …\nUses the single thread executor by default.\nAn async executor that schedules tasks across a pol …\nAn async executor that schedules tasks on the same …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA non-monospaced sans-serif font with normal <code>Weight</code>.\nA font.\nA monospaced font with normal <code>Weight</code>.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nCreates a non-monospaced <code>Font</code> with the given <code>Family::Name</code> …\nAn Accesskit event for a specific Accesskit Node in an …\nA list with all the defined themes.\nAlignment on the axis of a container.\nThe underlying definition and configuration of an iced …\nThe black color.\nThe background of some element.\nA border.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nAlign at the center of the axis.\nA color in the <code>sRGB</code> color space.\nA solid color.\nScale as big as it can be without needing to crop or hide …\nThe strategy used to fit the contents of a widget to its …\nScale the image to cover all of the bounding box, cropping …\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe underlying definition and configuration of an iced …\nThe built-in dark variant.\nDegrees\nA DnD event.\nThe built-in Dracula variant.\nA generic widget.\nAlign at the end of the axis.\nContains the error value\nAn error that occurred while running an application.\nA user interface event.\nA type that can run futures.\nThe executor of the program.\nThe futures executor could not be created.\nThe built-in Ferra variant:\nDistort the image so the widget is 100% covered without …\nFill all the remaining space\nFill a portion of the remaining space relative to other …\nFill a fixed amount of space\nThe element will float while rotating. The layout will be …\nA font.\nA fill which transitions colors progressively along a …\nLinearly interpolate between several colors.\nThe application graphics context could not be created.\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nA <code>Transformation</code> that preserves whatever is transformed.\nA rectangle starting at <code>Point::ORIGIN</code> with infinite width …\nA <code>Size</code> with infinite width and height.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nA keyboard event\nThe strategy used to fill space in a specific dimension.\nThe built-in light variant.\nA set of size constraints for layouting.\nA linear gradient interpolates colors along a direction at …\nThe message of the program.\nThe built-in Moonfly variant.\nA mouse event\nNo limits\nThe built-in Nightfly variant.\nDon’t resize or scale the image at all.\nThe built-in Nord variant.\nThe origin (i.e. a <code>Point</code> at (0, 0)).\nContains the success value\nThe built-in Oxocarbon variant.\nThe amount of radians in half a circle.\nAn amount of space to pad for each side of a box\nAn amount of logical pixels.\nPlatform specific events\nA 2D point.\nThe internal definition of a <code>Program</code>.\nThe range of degrees of a circle.\nThe range of radians of a circle.\nRadians\nThe border radii for the corners of a graphics primitive …\nAn axis-aligned rectangle.\nThe default graphics renderer for <code>iced</code>.\nThe renderer of the program.\nThe result of running an iced program.\nThe strategy used to rotate the content.\nScale the image down if it’s too big for the space, but …\nThe settings of an iced program.\nA shadow.\nFill the least amount of space\nAn amount of space in 2 dimensions.\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nThe element will be solid while rotating. The layout will …\nAlign at the start of the axis.\nThe state of the program.\nA request to listen to external events.\nA color with no opacity.\nA set of concurrent actions to be performed by the iced …\nA built-in theme.\nThe theme of the program.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nA touch event\nA 2D transformation matrix.\nA <code>Size</code> with a width and height of 1 unit.\nA 2D vector.\nThe white color.\nA window event\nThe application window could not be created.\nPadding of zero\nZero pixels.\nA <code>Size</code> with zero width and height.\nThe zero <code>Vector</code>.\nTransparency, 0.0 - 1.0\nLeverage advanced concepts like custom widgets.\nSets the <code>Settings::antialiasing</code> of the <code>Application</code>.\nSets the <code>Settings::antialiasing</code> of the <code>Daemon</code>.\nIf set to true, the renderer will try to perform …\nCreate and run iced applications step by step.\nCreates an iced <code>Application</code> given its title, update, and …\nApplies the <code>Rotation</code> to the given <code>Size</code>, returning the …\nReturns the area of the <code>Rectangle</code>.\nBlue component, 0.0 - 1.0\nBatches all the provided subscriptions and returns the …\nThe blur radius of the shadow.\nSets the bottom left and bottom right values of the <code>Radius</code>.\nSets the <code>bottom</code> of the <code>Padding</code>.\nBottom padding\nSets the bottom left value of the <code>Radius</code>.\nBottom left radius\nSets the bottom right value of the <code>Radius</code>.\nBottom right radius\nReturns the <code>Point</code> at the center of the <code>Rectangle</code>.\nReturns the X coordinate of the <code>Point</code> at the center of the …\nReturns the Y coordinate of the <code>Point</code> at the center of the …\nSets the <code>window::Settings::position</code> to …\nAccess the clipboard.\nSets the <code>Color</code> of the <code>Border</code>.\nThe color of the border.\nThe color of the shadow.\nCreates a <code>Color</code> with shorter and cleaner syntax.\nReturns true if the given <code>Point</code> is contained in the …\nReturns true if the given <code>Point</code> is contained in the …\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>.\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>, with a …\nCreate and run daemons that run in the background.\nCreates an iced <code>Daemon</code> given its title, update, and view …\nSets the <code>window::Settings::decorations</code> of the <code>Application</code>.\nSets the default <code>Font</code> of the <code>Application</code>.\nSets the default <code>Font</code> of the <code>Daemon</code>.\nThe default <code>Font</code> to be used.\nThe text size that will be used by default.\nReturns the angle of the <code>Rotation</code> in <code>Degrees</code>.\nComputes the distance to another <code>Point</code>.\nAdapts the <code>Length</code> so it can contain the other <code>Length</code> and …\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nRuns the given closure inside the <code>Executor</code>.\nHandle events of a user interface.\nChoose your preferred executor to power your application.\nSets the executor of the <code>Application</code>.\nSets the executor of the <code>Daemon</code>.\nCreates a <code>Task</code> that exits the iced runtime.\nSets the <code>window::Settings::exit_on_close_request</code> of the …\nIf set to true the application will exit when the main …\nExpands the <code>Rectangle</code> a given amount.\nExpands this <code>Size</code> by the given amount.\nReturns the <code>palette::Extended</code> of the <code>Theme</code>.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the <em>fill factor</em> of the <code>Length</code>.\nFits the <code>Padding</code> between the provided <code>inner</code> and <code>outer</code> <code>Size</code>.\nAttempt to apply the given fit for a content size within …\nReturns the “fluid” variant of the <code>Length</code>.\nLoad and use fonts.\nAdds a font to the list of fonts that will be loaded at …\nAdds a font to the list of fonts that will be loaded at …\nThe fonts to load on boot.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n[ radi.top_left, radi.top_right, radi.bottom_right, …\nReturns the argument unchanged.\n[ radi.top_left, radi.top_right, radi.bottom_right, …\n[ radi.top_left, radi.top_right, radi.bottom_right, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n[top, rght, bottom, left]\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Color</code> from its linear RGBA components.\nCreates a <code>Color</code> from its RGB components.\nCreates a <code>Color</code> from its RGB8 components.\nCreates a <code>Color</code> from its RGBA components.\nCreates a <code>Color</code> from its RGB8 components and an alpha …\nGreen component, 0.0 - 1.0\nApplies a height constraint to the current <code>Limits</code>.\nHeight of the rectangle.\nThe height.\nReturns the total amount of horizontal <code>Padding</code>.\nThe identifier of the application.\nComputes the intersection with the given <code>Rectangle</code>.\nReturns whether the <code>Rectangle</code> intersects with the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>Color</code> into its linear values.\nConverts the <code>Color</code> into its RGBA8 equivalent.\nReturns the inverted <code>Color</code>.\nInverts the <code>Color</code> in-place.\nWhether the application is a daemon\nReturns <code>true</code> iff the <code>Length</code> is either <code>Length::Fill</code> or\nReturns true if the current <code>Rectangle</code> is completely within …\nReturns true if the current <code>Rectangle</code> is completely within …\nListen and react to keyboard events.\nSets the top left and bottom left values of the <code>Radius</code>.\nSets the <code>left</code> of the <code>Padding</code>.\nLeft padding\nSets the <code>window::Settings::level</code> of the <code>Application</code>.\nRemoves the minimum width constraint for the current <code>Limits</code>…\nTransforms the <code>Subscription</code> output with the given function.\nReturns the maximum <code>Size</code> of the <code>Limits</code>.\nReturns the maximum of each component of this size and …\nApplies a maximum height constraint to the current <code>Limits</code>.\nApplies a maximum width constraint to the current <code>Limits</code>.\nReturns the minimum <code>Size</code> of the <code>Limits</code>.\nReturns the minimum of each component of this size and …\nApplies a minimum height constraint to the current <code>Limits</code>.\nApplies a minimum width constraint to the current <code>Limits</code>.\nListen and react to mouse events.\nCreates a new <code>Executor</code>.\nCreates a new <code>Radius</code> with the same value for each corner.\nCreates new <code>Limits</code> with the given minimum and maximum <code>Size</code>.\nCreate a <code>Padding</code> that is equal on all sides.\nCreates a new <code>Color</code>.\nCreates a new <code>Point</code> with the given coordinates.\nCreates a new <code>Rectangle</code> with its top-left corner in the …\nCreates a new  <code>Size</code> with the given width and height.\nCreates a new <code>Vector</code> with the given components.\nReturns an empty <code>Subscription</code> that will not produce any …\nThe offset of the shadow.\nCreates an orthographic projection.\nDisplay interactive elements on top of other widgets.\nReturns the <code>Palette</code> of the <code>Theme</code>.\nParses a <code>Color</code> from a hex string.\nSets the <code>window::Settings::position</code> of the <code>Application</code>.\nReturns the position of the top left corner of the …\nRed component, 0.0 - 1.0\nReturns the angle of the <code>Rotation</code> in <code>Radians</code>.\nReturns a mutable reference to the angle of the <code>Rotation</code> …\nThe <code>Radius</code> of the border.\nSets the <code>window::Settings::resizable</code> of the <code>Application</code>.\nComputes the resulting <code>Size</code> that fits the <code>Limits</code> given …\nSets the top right and bottom right values of the <code>Radius</code>.\nSets the <code>right</code> of the <code>Padding</code>.\nRight padding\nRotates the <code>Rectangle</code> and returns the smallest <code>Rectangle</code> …\nRotates the given <code>Size</code> and returns the minimum <code>Size</code> …\nSets the <code>Radius</code> of the <code>Border</code>.\nRuns a basic iced application with default <code>Settings</code> given …\nRuns the <code>Program</code>.\nReturns a <code>Subscription</code> that will call the given function …\nRuns the <code>Application</code>.\nRuns the <code>Daemon</code>.\nRuns the <code>Program</code> with the given settings, and a closure …\nRuns the <code>Application</code> with a closure that creates the …\nRuns the <code>Daemon</code> with a closure that creates the initial …\nReturns a <code>Subscription</code> that will create and asynchronously …\nCreates a uniform scaling transformation.\nScales the alpha channel of the <code>Gradient</code> by the given …\nScales the alpha channel of the <code>Background</code> by the given …\nScales the alpha channel of the <code>Color</code> by the given factor.\nSets the scale factor of the <code>Application</code>.\nSets the scale factor of the <code>Daemon</code>.\nReturns the scale factor of the <code>Transformation</code>.\nConfigure your application.\nSets the <code>Settings</code> that will be used to run the <code>Application</code>.\nSets the <code>Settings</code> that will be used to run the <code>Daemon</code>.\nShrinks the current <code>Limits</code> by the given <code>Size</code>.\nShrinks the <code>Rectangle</code> a given amount.\nReturns the <code>Size</code> of the <code>Rectangle</code>.\nSnaps the <code>Rectangle</code> to <strong>unsigned</strong> integer coordinates.\nSpawns a future in the <code>Executor</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nSets the style logic of the <code>Application</code>.\nSets the style logic of the <code>Daemon</code>.\nThe <code>Style</code> of the <code>Font</code>.\nSets the subscription logic of the <code>Application</code>.\nSets the subscription logic of the <code>Daemon</code>.\nCreate runtime tasks.\nSets the theme logic of the <code>Application</code>.\nSets the theme logic of the <code>Daemon</code>.\nListen and react to time.\nCalculates the line in which the angle intercepts the …\nSets the top left and top right values of the <code>Radius</code>.\nSets the <code>top</code> of the <code>Padding</code>.\nTop padding\nSets the top left value of the <code>Radius</code>.\nTop left radius\nSets the top right value of the <code>Radius</code>.\nTop right radius\nListen and react to touch events.\nCreates a translate transformation.\nReturns the translation of the <code>Transformation</code>.\nSets the <code>window::Settings::transparent</code> of the <code>Application</code>.\nComputes the union with the given <code>Rectangle</code>.\nReturns the total amount of vertical <code>Padding</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nUse the built-in widgets or create your own.\nSets the width of the <code>Border</code>.\nApplies a width constraint to the current <code>Limits</code>.\nThe width of the border.\nWidth of the rectangle.\nThe width.\nConfigure the window of your application in native …\nSets the <code>window::Settings</code> of the <code>Application</code>.\nSets the <code>window::Settings::size</code> of the <code>Application</code>.\nAdds a value to the <code>Subscription</code> context.\nCreates a new square <code>Rectangle</code> with the center at the …\nCreates a new <code>Rectangle</code> with its top-left corner at the …\nCreates a new axis-aligned <code>Rectangle</code> from the given …\nThe X coordinate.\nX coordinate of the top-left corner.\nThe X component of the <code>Vector</code>\nThe Y coordinate.\nY coordinate of the top-left corner.\nThe Y component of the <code>Vector</code>\nA buffer for short-term storage and transfer within and …\nThe bounds of a <code>Node</code> and its children, using absolute …\nAn interactive component that can be displayed on top of …\nA component that can be used by widgets to draw themselves …\nA connection to the state of a shell.\nA paragraph.\nA component that displays information and allows …\nThe bounds of the paragraph.\nClears all of the recorded primitives in the <code>Renderer</code>.\nAccess the clipboard.\nThe content of the paragraph.\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds a DnD operation.\nEnds recording a new layer.\nEnds recording a new layer.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nThe font of the <code>Text</code>.\nThe horizontal alignment of the <code>Text</code>.\nLoad and draw raster graphics.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nPosition your widgets properly.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nThe line height of the <code>Text</code>.\nHandle mouse events.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nDisplay interactive elements on top of other widgets.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nReads the current content of the <code>Clipboard</code> as text.\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nConsider using <code>read_data</code> instead Reads the current content …\nStarts a DnD operation.\nStarts a DnD operation.\nStarts a DnD operation.\nWrite your own renderer.\nRequest window size\nRequest window size\nRequest window size\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nSet the final action for the DnD operation. Only should be …\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nThe size of the <code>Text</code> in logical pixels.\nRegisters Dnd destinations\nRegisters Dnd destinations\nRegisters Dnd destinations\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nWrite your own subscriptions.\nLoad and draw vector graphics.\nDraw and interact with text.\nThe vertical alignment of the <code>Text</code>.\nCreate custom widgets and operate on them.\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nDraws the primitives recorded in the given closure in a …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nThe <code>Wrapping</code> strategy of the <code>Text</code>.\nWrites the given text contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nA buffer for short-term storage and transfer within and …\nA list of DnD destination rectangles.\nSource of a DnD operation.\nThe kind of <code>Clipboard</code>.\nA null implementation of the <code>Clipboard</code> trait.\nThe primary clipboard.\nThe standard clipboard.\nA surface is the source of the DnD operation.\nA widget is the source of the DnD operation.\nEnds a DnD operation.\nReads the current content of the primary <code>Clipboard</code>.\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nReads the current content of the <code>Clipboard</code> as text.\nReads the current content of the <code>Clipboard</code>.\nConsider using <code>read_data</code> instead Reads the current content …\nReads the current content of the primary <code>Clipboard</code>.\nStarts a DnD operation.\nRequest window size\nSet the final action for the DnD operation. Only should be …\nStarts a DnD operation. icon surface is a tuple of the …\nRegisters Dnd destinations\nWrites the given text contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nAn antialiasing strategy.\nAn error occurred in the context’s internal backend\nA simple cache that stores generated values to avoid …\nSome cached text.\nA graphics compositor that can draw to windows.\nAn editor.\nAn error that occurred while creating an application’s …\nA fill which linearly interpolates colors along a …\nA mesh with a gradient.\nA suitable graphics adapter or device could not be found.\nA raster or vector image.\nA layer of graphical primitives.\nA linear gradient interpolates colors along a direction …\nMultiple errors occurred\nMultisample AA with 16 samples\nMultisample AA with 2 samples\nMultisample AA with 4 samples\nMultisample AA with 8 samples\nA low-level primitive to render a mesh of triangles.\nFailed to find any pixel format that matches the criteria.\nA paragraph.\nA raster image.\nSome raw text.\nThe iced renderer of the backend.\nThe settings of a renderer.\nA mesh with a solid color.\nThe surface of the backend.\nA text primitive.\nA vector image.\nThe requested backend version is not supported.\nA viewing region for displaying computer graphics.\nThe antialiasing strategy that will be used for triangle …\nCache computations and efficiently reuse them.\nManage colors for shaders.\nA compositor is responsible for initializing a renderer …\nConfigures a new <code>Surface</code> with the given dimensions.\nCreates a <code>Self::Renderer</code> for the <code>Compositor</code>.\nCrates a new <code>Surface</code> for the given window.\nCompute the damage between frames.\nThe default <code>Font</code> to use.\nThe default size of text.\nSee what can go wrong when creating graphical backends.\nReturns <code>Information</code> used by this <code>Compositor</code>.\nFlushes and settles any pending group of primitives in the …\nBuild and draw geometry.\nA gradient that can be used as a fill for some geometry.\nLoad and operate on images.\nDraw and stack layers of graphical primitives.\nLoads a font from its bytes.\nLoads a font from its bytes.\nDraw triangles!\nCreates a new <code>Compositor</code>.\nCreates a new <code>Compositor</code>.\nPresents the <code>Renderer</code> primitives to the next frame of the …\nClears all the layers contents and resets its bounds.\nResizes the <code>Layer</code> to the given bounds.\nScreenshots the current <code>Renderer</code> primitives to an …\nDraw text.\nCreates a new <code>Compositor</code> with a backend preference.\nCreates a new <code>Layer</code> with the given bounds.\nThe name of the backend where the error happened\nThe reason why this backend could not be used\nThe bounds of the image.\nThe bounds of the image.\nThe image handle\nThe handle of a vector image.\nThe vertices and indices of the mesh.\nThe vertices and indices of the mesh.\nThe clip bounds of the <code>Mesh</code>.\nThe clip bounds of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nThe bounds of the text.\nThe clip bounds of the text.\nThe color of the text.\nThe contents of the text.\nThe font of the text.\nThe horizontal alignment of the text.\nThe line height of the text.\nThe shaping strategy of the text.\nThe size of the text in logical pixels.\nThe vertical alignment of the text.\nA simple cache that stores generated values to avoid …\nThe type of cache produced.\nA piece of data that can be cached.\nThe <code>Cache</code> is empty.\nThe <code>Cache</code> is filled.\nA cache group.\nThe state of a <code>Cache</code>.\nCaches this value, producing its corresponding <code>Cache</code>.\nLoads the <code>Cache</code> into a proper instance.\nThe current value of the <code>Cache</code>\nThe previous value of the <code>Cache</code>.\nA flag that indicates whether the renderer should perform …\nA color packed as 4 floats representing RGBA channels.\nPacks a <code>Color</code>.\nA graphics compositor that can draw to windows.\nThe compositor of the renderer.\nDefines the default compositor of a renderer.\nContains information about the graphics (e.g. graphics …\nInvalid dimensions\nThe swap chain has been lost and needs to be recreated.\nPresent Error\nThere is no more memory left to allocate a new frame.\nThe underlying surface has changed, and therefore the …\nPresent Error\nThe iced renderer of the backend.\nResize Error\nThe surface of the backend.\nResult of an unsuccessful call to <code>Compositor::present</code>.\nA timeout was encountered while trying to acquire the next …\nA window that can be used in a <code>Compositor</code>.\nContains the graphics adapter.\nContains the graphics backend.\nConfigures a new <code>Surface</code> with the given dimensions.\nCreates a <code>Self::Renderer</code> for the <code>Compositor</code>.\nCrates a new <code>Surface</code> for the given window.\nReturns <code>Information</code> used by this <code>Compositor</code>.\nLoads a font from its bytes.\nCreates a new <code>Compositor</code>.\nPresents the <code>Renderer</code> primitives to the next frame of the …\nScreenshots the current <code>Renderer</code> primitives to an …\nCreates a new <code>Compositor</code> with a backend preference.\nAn Accesskit event for a specific Accesskit Node in an …\nAlignment on the axis of a container.\nThe background of some element.\nA border.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nAlign at the center of the axis.\nA buffer for short-term storage and transfer within and …\nA color in the <code>sRGB</code> color space.\nA solid color.\nScale as big as it can be without needing to crop or hide …\nThe strategy used to fit the contents of a widget to its …\nScale the image to cover all of the bounding box, cropping …\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nDegrees\nA DnD event.\nThe built-in Dracula variant.\nA generic <code>Widget</code>.\nAlign at the end of the axis.\nA user interface event.\nThe built-in Ferra variant:\nDistort the image so the widget is 100% covered without …\nFill all the remaining space\nFill a portion of the remaining space relative to other …\nFill a fixed amount of space\nThe element will float while rotating. The layout will be …\nA font.\nA fill which transitions colors progressively along a …\nLinearly interpolate between several colors.\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nThe hasher used to compare layouts.\nA raster image that can be drawn.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nA keyboard event\nThe bounds of a <code>Node</code> and its children, using absolute …\nThe strategy used to fill space in a specific dimension.\nThe built-in light variant.\nA linear gradient interpolates colors along a direction at …\nThe built-in Moonfly variant.\nA mouse event\nThe built-in Nightfly variant.\nDon’t resize or scale the image at all.\nThe built-in Nord variant.\nAn interactive component that can be displayed on top of …\nThe built-in Oxocarbon variant.\nAn amount of space to pad for each side of a box\nAn amount of logical pixels.\nPlatform specific events\nA 2D point.\nRadians\nAn axis-aligned rectangle.\nA component that can be used by widgets to draw themselves …\nThe strategy used to rotate the content.\nScale the image down if it’s too big for the space, but …\nA shadow.\nA connection to the state of a shell.\nFill the least amount of space\nAn amount of space in 2 dimensions.\nA <code>SmolStr</code> is a string type that has the following …\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nThe element will be solid while rotating. The layout will …\nAlign at the start of the axis.\nA raster image that can be drawn.\nA paragraph.\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nA touch event\nA 2D transformation matrix.\nA 2D vector.\nA component that displays information and allows …\nA window event\nTransparency, 0.0 - 1.0\nAlign and position widgets.\nBlue component, 0.0 - 1.0\nThe blur radius of the shadow.\nDraw lines around containers.\nThe border radii of the image\nThe border radius for the svg\nBottom padding\nThe bounds of the paragraph.\nClears all of the recorded primitives in the <code>Renderer</code>.\nThe color of the border.\nThe <code>Color</code> filter to be applied to the <code>Svg</code>.\nThe color of the shadow.\nCreates a <code>Color</code> with shorter and cleaner syntax.\nThe content of the paragraph.\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nEnds recording a new layer.\nEnds recording a new layer.\nHandle events of a user interface.\nThe <code>Family</code> of the <code>Font</code>.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nThe filter method of the image.\nLoad and use fonts.\nThe font of the <code>Text</code>.\nGreen component, 0.0 - 1.0\nColors that transition progressively.\nThe handle of the image.\nThe handle of the <code>Svg</code>.\nHeight of the rectangle.\nThe height.\nThe horizontal alignment of the <code>Text</code>.\nWidget and Window IDs.\nListen to keyboard events.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nLeft padding\nThe line height of the <code>Text</code>.\nThe offset of the shadow.\nThe opacity of the image.\nThe opacity of the <code>Svg</code>.\nSpace stuff around the perimeter.\nRed component, 0.0 - 1.0\nThe <code>Radius</code> of the border.\nReads the current content of the <code>Clipboard</code> as text.\nRight padding\nThe rotation to be applied to the image; on its center.\nThe rotation to be applied to the image; on its center.\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nThe size of the <code>Text</code> in logical pixels.\nIf set to <code>true</code>, the image will be snapped to the pixel …\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nUse the built-in theme and styles.\nKeep track of time, both in native and web platforms!\nTop padding\nBuild touch events.\nThe vertical alignment of the <code>Text</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nCreate custom widgets and operate on them.\nThe width of the border.\nWidth of the rectangle.\nThe width.\nBuild window-based GUI applications.\nThe <code>Wrapping</code> strategy of the <code>Text</code>.\nWrites the given text contents to the <code>Clipboard</code>.\nThe X coordinate.\nX coordinate of the top-left corner.\nThe X component of the <code>Vector</code>\nThe Y coordinate.\nY coordinate of the top-left corner.\nThe Y component of the <code>Vector</code>\nAlignment on the axis of a container.\nAlign bottom\nAlign at the center of the axis.\nHorizontally centered\nVertically centered\nAlign at the end of the axis.\nThe horizontal <code>Alignment</code> of some resource.\nAlign left\nAlign right\nAlign at the start of the axis.\nAlign top\nThe vertical <code>Alignment</code> of some resource.\nA border.\nThe border radii for the corners of a graphics primitive …\nCreates a new <code>Radius</code> with the given value as bottom left …\nCreates a new <code>Radius</code> with the given bottom left value.\nBottom left radius\nCreates a new <code>Radius</code> with the given bottom right value.\nBottom right radius\nCreates a new <code>Border</code> with the given <code>Color</code>.\nThe color of the border.\nCreates a new <code>Radius</code> with the given value as top left and …\nCreates a new <code>Radius</code> with the same value for each corner.\nThe <code>Radius</code> of the border.\nCreates a new <code>Radius</code> with the given value as top right and …\nCreates a new <code>Border</code> with the given <code>Radius</code>.\nCreates a new <code>Radius</code> with the given value as top left and …\nCreates a new <code>Radius</code> with the given top left value.\nTop left radius\nCreates a new <code>Radius</code> with the given top right value.\nTop right radius\nCreates a new <code>Border</code> with the given <code>width</code>.\nThe width of the border.\nAn Accesskit event for a specific Accesskit Node in an …\nThe <code>Event</code> was handled and processed by a widget.\nA DnD event.\nA user interface event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event\nA mouse event\nA platform specific event\nPlatform specific events\nThe status of an <code>Event</code> after being processed.\nA touch event\nA window event\nGlyphs in cursive fonts generally use a more informal …\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nThe width of some text.\nThe style of some text.\nThe weight of some text.\nThe <code>Family</code> of the <code>Font</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nA point along the gradient vector where the specified <code>color</code>…\nA fill which transitions colors progressively along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction at …\nHow the <code>Gradient</code> is angled within its bounds.\nThe color of the gradient at the specified <code>offset</code>.\nOffset along the gradient vector.\n<code>ColorStop</code>s along the linear gradient path.\na custom id, which is equal to any <code>Id</code> with a matching …\nThe identifier of a generic widget.\nSimilar to PartialEq, but only intended for use when …\nInternal representation of an <code>Id</code>.\nXXX Do not use this as an id for an accessibility node, it …\na unique id\nget window node id that won’t conflict with other node …\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nIdentify keyboard keys.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe key pressed with all keyboard modifiers applied, …\nThe key released with all keyboard modifiers applied, …\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe physical key pressed.\nThe physical key released.\nThe text produced by the key press, if any.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nRedo or repeat an action.\nFound on Sun’s USB keyboard.\nInitiate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nThe Application switch key, which provides a list of …\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n↓\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n←\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n→\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\n↑\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nUsed to remove the character to the left of the cursor. …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nNavigate to previous content or page in current history. (…\nSome laptops place this key to the left of the ↑ key.\nOpen the list of browser favorites. (…\nNavigate to next content or page in current history. (…\nSome laptops place this key to the right of the ↑ key.\nGo to the user’s preferred home page. (…\nThe “home” button on Android.\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe <code>Caps Lock</code> (Capital) key.\nCapsLock or ⇪\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nCode representing the location of a physical key.\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nShow the application’s context menu. This key is …\nThe application context menu key, which is typically found …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nConvert the current input method sequence.\nJapanese: 変 (henkan)\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nFound on Sun’s USB keyboard.\nThe Cursor Select key.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nFound on Sun’s USB keyboard.\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nUsed to delete the character to the right of the cursor. …\n⌦. The forward delete key. Note that on Apple keyboards, …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nToggle removable media to eject (open) and insert (close) …\nEject or ⏏. This key is placed in the function section …\nThe End key, used with keyboard entry to go to the end of …\nPage Down, End, or ↘\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\nEnter or ↵. Labeled Return on Apple keyboards.\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nThe <code>Esc</code> key. This key was originally used to initiate an …\nEsc or ⎋\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFound on Sun’s USB keyboard.\nThe Function switch <code>Fn</code> key. Activating this key …\nFn This is typically a hardware key that does not generate …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nOpen a help dialog or toggle display of help information. (…\nHelp. Not present on standard PC keyboards.\nThe Hibernate key. This key saves the current state of the …\nThe Hiragana (Japanese Kana characters) key.\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana/Katakana toggle key. (…\nThe Home key, used with keyboard entry, to go to start of …\nHome or ↖\nToggle display of information about currently selected …\nToggle between text modes for insertion or overtyping. (…\nInsert or Ins. Not present on Apple keyboards.\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kanji (Japanese name for ideographic characters of …\nThe Katakana (Japanese Kana characters) key.\nUse for dedicated カタカナ key found on some Japanese …\nA key on the keyboard.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nA macOS “scancode”.\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nA named key.\nA key with an established name.\nContains the platform-native physical key identifier.\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nAccept current input method sequence without conversion in …\nJapanese: 無変換 (muhenkan)\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nOn the Mac, this is used for the numpad Clear key.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nFound on Sun’s USB keyboard.\nScroll down or display next page of content.\nPage Down, PgDn, or ⇟\nScroll up or display previous page of content.\nPage Up, PgUp, or ⇞\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nFound on Sun’s USB keyboard.\nPause the current state or application (as appropriate).\nPause Break\n. on a US keyboard.\nRepresents the location of a physical key.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThis key is placed in the function section on some Apple …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nInitiate print-screen function.\nPrtScr SysRq or Print Screen\nThe properties (Props) key.\nFound on Sun’s USB keyboard.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nToggle between scrolling and cursor movement modes.\nScroll Lock\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\nUsed in text to insert a space between words. Usually …\n  (space)\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nThe Horizontal Tabulation <code>Tab</code> key.\nTab or ⇥\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nFound on Sun’s USB keyboard.\nAn unidentified key.\nAn unidentified code.\nThis variant is used when the key cannot be translated to …\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA Windows “scancode”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nAn amount of space to pad for each side of a box\nCreate a <code>Padding</code> that is equal on all sides.\nCreate some bottom <code>Padding</code>.\nBottom padding\nCreate some left <code>Padding</code>.\nLeft padding\nCreate some right <code>Padding</code>.\nRight padding\nCreate some top <code>Padding</code>.\nTop padding\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nA <code>Theme</code> with a customized <code>Palette</code>.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nThe built-in Dracula variant.\nThe built-in Ferra variant:\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nThe built-in light variant.\nThe built-in Moonfly variant.\nThe built-in Nightfly variant.\nThe built-in Nord variant.\nThe built-in Oxocarbon variant.\nA color palette.\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe danger <code>Color</code> of the <code>Palette</code>.\nDefine the colors of a theme.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe text <code>Color</code> of the <code>Palette</code>.\nA set of background colors.\nA set of danger colors.\nThe built-in Catppuccin Frappé variant of an <code>Extended</code> …\nThe built-in Catppuccin Latte variant of an <code>Extended</code> …\nThe built-in Catppuccin Macchiato variant of an <code>Extended</code> …\nThe built-in Catppuccin Mocha variant of an <code>Extended</code> …\nThe built-in dark variant of an <code>Extended</code> palette.\nThe built-in Dracula variant of an <code>Extended</code> palette.\nThe built-in Ferra variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Dark variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Light variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Dragon variant of an <code>Extended</code> …\nThe built-in Kanagawa Lotus variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Wave variant of an <code>Extended</code> palette.\nThe built-in light variant of an <code>Extended</code> palette.\nThe built-in Moonfly variant of an <code>Extended</code> palette.\nThe built-in Nightfly variant of an <code>Extended</code> palette.\nThe built-in Nord variant of an <code>Extended</code> palette.\nThe built-in Oxocarbon variant of an <code>Extended</code> palette.\nThe built-in Solarized Dark variant of an <code>Extended</code> palette.\nThe built-in Solarized Light variant of an <code>Extended</code> …\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night Storm variant of an <code>Extended</code> …\nAn extended set of colors generated from a <code>Palette</code>.\nRecommended background, icon, and text <code>Color</code>.\nA color palette.\nA set of primary colors.\nA set of secondary colors.\nA set of success colors.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe set of background colors.\nThe base background color.\nThe base primary color.\nThe base secondary color.\nThe base success color.\nThe base danger color.\nThe background color.\nThe danger <code>Color</code> of the <code>Palette</code>.\nThe set of danger colors.\nThe icon color, which defaults to the text color.\nWhether the palette is dark or not.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe set of primary colors.\nThe set of secondary colors.\nA stronger version of the base background color.\nA stronger version of the base primary color.\nA stronger version of the base secondary color.\nA stronger version of the base success color.\nA stronger version of the base danger color.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe set of success colors.\nThe text <code>Color</code> of the <code>Palette</code>.\nThe text color.\nA weaker version of the base background color.\nA weaker version of the base primary color.\nA weaker version of the base secondary color.\nA weaker version of the base success color.\nA weaker version of the base danger color.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nA touch interaction.\nA unique identifier representing a finger on a touch …\nA touch interaction was ended.\nA touch interaction was canceled.\nAn on-going touch interaction was moved.\nA touch interaction was started.\nThe identifier of a generic widget.\nA piece of logic that can traverse the widget tree of an …\nA bunch of text.\nA persistent state widget tree.\nA component that displays information and allows …\nThe children of the root widget of the <code>Tree</code>.\nOperates on a widget that contains other widgets.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nthe Id of the <code>Tree</code>\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nThe <code>State</code> of the <code>Tree</code>.\nThe tag of the <code>Tree</code>.\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nRedraw at the given time.\nThe window is completely centered on the screen.\nThe user has requested for the window to close.\nA window was closed.\nPlatform-specific\nThe platform-specific default position for a new window.\nA window-related event.\nA file has been dropped into the window.\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nA window was focused.\nThe application takes the whole screen of its current …\nThe application is hidden\nAn window icon normally used for the titlebar or taskbar.\nThe id of the window.\nPlatform-specific\nA window level groups windows with respect to their …\nThe mode of a window-based application.\nA window was moved.\nRedraw the next frame.\nThe default behavior.\nA window was opened.\nThe position of a window in a given screen.\nA request to redraw a window.\nA window redraw was requested.\nA window was resized.\nThe window settings of an application.\nThe window is positioned with specific coordinates: <code>(X, Y)</code>.\nLike <code>Specific</code>, but the window is positioned with the …\nA window was unfocused.\nThe type of user attention to request.\nThe application appears in its own window.\nWhether the window should have a border, a title bar, etc. …\nWhether the window will close when the user requests it, …\nChange the icon of a window.\nThe icon of the window.\nThe window <code>Level</code>.\nThe maximum size of the window.\nThe minimum size of the window.\nPlatform specific settings.\nThe initial position of the window.\nWhether the window should be resizable or not.\nThe border area for the drag resize handle.\nThe initial logical dimensions of the window.\nWhether the window should be transparent.\nWhether the window should be visible or not.\nThe position of the opened window. This is relative to the …\nThe size of the created window. This is its “inner” …\nProduced when the length of the <code>rgba</code> argument isn’t …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nAn error produced when using <code>from_rgba</code> with invalid …\nAn window icon normally used for the titlebar or taskbar.\nBuilds an  <code>Icon</code> from its RGBA pixels in the <code>sRGB</code> color …\nThe length of the provided RGBA data.\nThe provided height.\nThe amount of pixels of the provided RGBA data.\nThe provided width.\nThe product of <code>width</code> and <code>height</code>.\nDiffs the damage regions given some previous and current …\nGroups the given damage regions that are close together …\nComputes the damage regions given some previous and …\nAn error occurred in the context’s internal backend\nThe backend did not match the preference\nAn error that occurred while creating an application’s …\nA suitable graphics adapter or device could not be found.\nMultiple errors occurred\nFailed to find any pixel format that matches the criteria.\nThe reason why a graphics adapter could not be found\nThe request to create the backend failed\nThe requested backend version is not supported.\nThe name of the backend where the error happened\nThe reason why this backend could not be used\nThe preferred backend\nA boxed static future.\nA boxed static stream.\nA type that can run futures.\nAn extension trait that enforces <code>Send</code> only on native …\nAn extension trait that enforces <code>Sync</code> only on native …\nA batteries-included runtime of commands and subscriptions.\nA request to listen to external events.\nThe underlying implementations of the <code>iced_futures</code> …\nBoxes a stream.\nRuns the given closure inside the <code>Executor</code>.\nListen to runtime events.\nChoose your preferred executor to power a runtime.\nListen to keyboard events.\nCreates a new <code>Executor</code>.\nSpawns a future in the <code>Executor</code>.\nCreate asynchronous streams of data.\nListen to external events in your application.\nA default, cross-platform backend.\nBackends that are only available in native platforms: …\nA backend that does nothing!\nA <code>tokio</code> executor.\nA <code>ThreadPool</code> backend.\nA <code>tokio</code> backend.\nA thread pool executor for futures.\nListen and react to time.\nA <code>tokio</code> executor.\nListen and react to time.\nReturns a <code>Subscription</code> that produces messages at a set …\nAn executor that drops all the futures, instead of …\nListen and react to time.\nReturns a <code>Subscription</code> to all the ignored runtime events.\nCreates a <code>Subscription</code> that produces a message for every …\nCreates a <code>Subscription</code> that listens and filters all the …\nA type that can run futures.\nRuns the given closure inside the <code>Executor</code>.\nCreates a new <code>Executor</code>.\nSpawns a future in the <code>Executor</code>.\nRead bytes asynchronously.\nAn extension trait which adds utility methods to …\nRead bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncRead</code> …\nSeek bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncSeek</code> …\nWrite bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncWrite</code>…\nThe type of value produced by the sink when an error …\nThe type of failures yielded by this future\nThe type of failures yielded by this future\nA future represents an asynchronous computation, commonly …\nAn extension trait for <code>Future</code>s that provides a variety of …\nValues yielded by the stream.\nThe type of successful values yielded by this future\nThe type of successful values yielded by this future\nThe type of value produced on completion.\nA <code>Sink</code> is a value into which other values can be sent, …\nAn extension trait for <code>Sink</code>s that provides a variety of …\nA stream of values produced asynchronously.\nAn extension trait for <code>Stream</code>s that provides a variety of …\nA convenience for futures that return <code>Result</code> values that …\nAdapters specific to <code>Result</code>-returning futures\nA convenience for streams that return <code>Result</code> values that …\nAdapters specific to <code>Result</code>-returning streams\nExecute predicate over asynchronous stream, and return <code>true</code>…\nExecutes another future after this one resolves …\nChain on a computation for when a value is ready, passing …\nExecute predicate over asynchronous stream, and return <code>true</code>…\nWrap the future in a Box, pinning it.\nWrap the stream in a Box, pinning it.\nWrap the future in a Box, pinning it.\nWrap the stream in a Box, pinning it.\nAdds a fixed-size buffer to the current sink.\nAn adaptor for creating a buffered list of pending futures …\nAn adaptor for creating a buffered list of pending futures.\nBorrows a stream, rather than consuming it.\nCatches unwinding panics while polling the future.\nCatches unwinding panics while polling the stream.\nAdapter for chaining two streams.\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nAn adaptor for chunking up items of the stream inside a …\nClose the sink.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nTransforms a stream into a collection, returning a future …\nConcatenate all items of a stream into a single extendable …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nDrives the stream to completion, counting the number of …\nRepeats a stream endlessly.\nCreates a stream which gives the current iteration count …\nMaps this future’s <code>Error</code> to a new error type using the …\nWraps the current stream in a new stream which converts …\nBuilt-in executors and related tools.\nFanout items to multiple sinks.\nA future that completes after the given item has been …\nCreates a future which will wait for a non-empty buffer to …\nCreates a future which will wait for a non-empty buffer to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream while …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nFlatten the execution of this future when the output of …\nFlattens a stream of streams into just one continuous …\nFlattens the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlattens a stream of streams into just one continuous …\nFlush the sink, processing all pending items.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nExecute an accumulating asynchronous computation over a …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nA future that completes after the given stream has been …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a stream such that <code>poll_next</code> will never again be …\nDo something with the output of a future before passing it …\nDo something with each item of this stream, afterwards …\nDo something with the error value of a future before …\nDo something with the error value of this stream, …\nDo something with the success value of a future before …\nDo something with the success value of this stream, …\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nConverts this stream into a future of …\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nConvert this future into a single element stream.\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nAsynchronous I/O.\nPolls multiple futures simultaneously, returning a tuple …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this stream in an <code>Either</code> stream, making it the …\nReturns a stream over the lines of this reader. This …\nReturns a stream over the lines of this reader. This …\nFutures-powered synchronization primitives.\nMap this future’s output to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this future’s error value to a different value.\nWraps the current stream in a new stream which maps the …\nMap this future’s output to a different type, returning …\nMaps this future’s success value to a different value.\nWraps the current stream in a new stream which maps the …\nMaps this future’s success value to a different value, …\nThis module contains the <code>Never</code> type.\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nCreates a future that resolves to the next item in the …\nEvaluates and consumes the future, returning the resulting …\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nExecutes another future if this one resolves to an error. …\nChain on a computation for when an error happens, passing …\nCreates a new stream which exposes a <code>peek</code> method.\nA macro which yields to the event loop once.\nPins a value on the stack.\nAttempts to resolve the future to a final value, …\nA macro which returns the result of polling a future once …\nFlush any remaining output and close this sink, if …\nAttempt to close the object.\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nAttempt to return the contents of the internal buffer, …\nFlush any remaining output from this sink.\nAttempt to flush the object, ensuring that any buffered …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nAttempt to pull out the next value of this stream, …\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempts to prepare the <code>Sink</code> to receive a value.\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nAttempt to seek to an offset, in bytes, in a stream.\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nAttempt to write bytes from <code>buf</code> into the object.\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nA “prelude” for crates using the <code>futures</code> crate.\nTries to read some bytes directly into the given <code>buf</code> in …\nTries to read some bytes directly into the given <code>buf</code> in …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes associated …\nCreates a future which will read from the <code>AsyncRead</code> into …\nCreates a future which will read from the <code>AsyncRead</code> into …\nExtracts the successful type of a <code>Poll&lt;T&gt;</code>.\nAn adaptor for chunking up ready items of the stream …\nTurn this future into a future that yields <code>()</code> on …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCreates a future which will seek an IO object, and then …\nCreates a future which will seek an IO object, and then …\nPolls multiple futures and streams simultaneously, …\nPolls multiple futures and streams simultaneously, …\nReturns a <code>Future</code> that resolves when the next item in this …\nA future that completes after the given item has been …\nA future that completes after the given stream has been …\nCreate a cloneable handle to this future where all handles …\nMap this sink’s error to a different error type using …\nTransforms the error returned by the sink.\nReturns the bounds on the remaining length of the stream.\nCreates a new stream which skips <code>n</code> items of the underlying …\nSkip elements on this stream while the provided …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nHelper method for splitting this read/write object into …\nHelper method for splitting this read/write object into …\nBegin the process of sending a value to the sink. Each …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nCreates a future which will return the current seek …\nCreates a future which will return the current seek …\nCombines several streams, all producing the same <code>Item</code> …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nTake elements from this stream until the provided future …\nTake elements from this stream while the provided …\nTools for working with tasks.\nChain on a computation for when a future finished, passing …\nComputes from this stream’s items new items of a …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAn adaptor for chunking up successful items of the stream …\nAttempt to transform a stream into a collection, returning …\nAttempt to concatenate all items of a stream into a single …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream while …\nFlatten the execution of this future when the successful …\nFlattens a stream of streams into just one continuous …\nFlatten the execution of this future when the successful …\nFlattens a stream of streams into just one continuous …\nAttempt to execute an accumulating asynchronous …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nPolls multiple futures simultaneously, resolving to a …\nCreates a future that attempts to resolve the next item in …\nPoll this <code>TryFuture</code> as if it were a <code>Future</code>.\nPoll this <code>TryStream</code> as if it were a <code>Stream</code>.\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryFuture::try_poll</code> on …\nAn adaptor for chunking up successful, ready items of the …\nSkip elements on this stream while the provided …\nTake elements on this stream while the provided …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nUnwraps this future’s output, producing a future with …\nConverts a stream of pairs into a future, which resolves …\nComposes a function <em>in front of</em> the sink.\nComposes a function <em>in front of</em> the sink.\nCreates a future which will write bytes from <code>buf</code> into the …\nCreates a future which will write bytes from <code>buf</code> into the …\nWrite data into this object.\nWrite data into this object.\nCreates a future which will write bytes from <code>bufs</code> into the …\nCreates a future which will write bytes from <code>bufs</code> into the …\nAn adapter for zipping two streams together.\nA multi-producer, single-consumer queue for sending values …\nA channel for sending a single message between …\nThe receiving end of a bounded mpsc channel.\nThe error type for <code>Sender</code>s used as <code>Sink</code>s.\nThe transmission end of a bounded mpsc channel.\nThe error type returned from <code>try_next</code>.\nThe error type returned from <code>try_send</code>.\nThe receiving end of an unbounded mpsc channel.\nThe transmission end of an unbounded mpsc channel.\nCreates a bounded mpsc channel for communicating between …\nCreates an unbounded mpsc channel for communicating …\nError returned from a <code>Receiver</code> when the corresponding …\nA future that resolves when the receiving end of a channel …\nA future for a value that will be provided by another …\nA means of transmitting a single value to another task.\nCreates a new one-shot channel for sending a single value …\nAn iterator which blocks on values from a stream until …\nRepresents an executor context.\nAn error returned by <code>enter</code> if an execution scope has …\nA single-threaded task pool for polling futures to …\nA handle to a <code>LocalPool</code> that implements <code>Spawn</code>.\nA general-purpose thread pool for scheduling tasks that …\nThread pool configuration object.\nRun a future to completion on the current thread.\nTurn a stream into a blocking iterator.\nMarks the current thread as being within the dynamic …\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nA simple wrapper type which allows types which implement …\nAn entity already exists, often a file.\nProgram argument list too long.\nRead bytes asynchronously.\nAn extension trait which adds utility methods to …\nRead bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncRead</code> …\nSeek bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncSeek</code> …\nWrite bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncWrite</code>…\nThe operation failed because a pipe was closed.\nThe <code>BufReader</code> struct adds buffering to any reader.\nWraps a writer and buffers its output.\nReader for the <code>chain</code> method.\nFuture for the <code>close</code> method.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nFuture for the <code>copy()</code> function.\nFuture for the <code>copy_buf()</code> function.\nFuture for the <code>copy_buf_abortable()</code> function.\nCross-device or cross-filesystem (hard) link or rename.\nSets the offset to the current position plus the specified …\nA <code>Cursor</code> wraps an in-memory buffer and provides it with a …\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\nReader for the <code>empty()</code> function.\nSets the offset to the size of this object plus the …\nContains the error value\nThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…\nA list specifying general categories of I/O error.\nExecutable file is busy.\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nFuture for the <code>fill_buf</code> method.\nFuture for the <code>flush</code> method.\nThe remote host is not reachable.\nThe operation was partially successful and needs to be …\nThis operation was interrupted.\nSink for the <code>into_sink</code> method.\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\nA buffer type used with <code>Write::write_vectored</code>.\nA buffer type used with <code>Read::read_vectored</code>.\nThe filesystem object is, unexpectedly, a directory.\nWrap a writer, like <code>BufWriter</code> does, but prioritizes …\nStream for the <code>lines</code> method.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nContains the success value\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nFilesystem quota or some other kind of quota was exceeded.\nFuture for the <code>read</code> method.\nFuture for the <code>read_exact</code> method.\nThe readable half of an object returned from …\nFuture for the <code>read_line</code> method.\nThe filesystem or storage medium is read-only, but a write …\nFuture for the <code>read_to_end</code> method.\nFuture for the <code>read_to_string</code> method.\nFuture for the <code>read_until</code> method.\nFuture for the <code>read_vectored</code> method.\nReader for the <code>repeat()</code> function.\nResource is busy.\nA specialized <code>Result</code> type for I/O operations.\nError indicating a <code>ReadHalf&lt;T&gt;</code> and <code>WriteHalf&lt;T&gt;</code> were not …\nFuture for the <code>BufReader::seek_relative</code> method.\nFuture for the <code>seek</code> method.\nEnumeration of possible methods to seek within an I/O …\nWriter for the <code>sink()</code> function.\nStale network file handle.\nSets the offset to the provided number of bytes.\nThe underlying storage (typically, a filesystem) is full.\nReader for the <code>take</code> method.\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nAn owned window around an underlying buffer.\nThe operation needs to block to complete, but the blocking …\nFuture for the <code>write</code> method.\nFuture for the <code>write_all</code> method.\nThe writable half of an object returned from …\nFuture for the <code>write_vectored</code> method.\nAn error returned when an operation could not be completed …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nCreates a future which copies all the bytes from one …\nCreates a future which copies all the bytes from one …\nCreates a future which copies all the bytes from one …\nConstructs a new handle to an empty reader.\nAttempt to close the object.\nAttempt to return the contents of the internal buffer, …\nAttempt to flush the object, ensuring that any buffered …\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempt to seek to an offset, in bytes, in a stream.\nAttempt to write bytes from <code>buf</code> into the object.\nCreates an instance of a reader that infinitely repeats …\nCreates an instance of a writer which will successfully …\nAn RAII guard returned by the <code>MutexGuard::map</code> and …\nA futures-aware mutex.\nAn RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …\nA future which resolves when the target mutex has been …\nAn RAII guard returned by the <code>lock_owned</code> and <code>try_lock_owned</code>…\nA future which resolves when the target mutex has been …\nA type with no possible values.\nRead bytes asynchronously.\nRead bytes asynchronously.\nSeek bytes asynchronously.\nWrite bytes asynchronously.\nThe type of value produced by the sink when an error …\nThe type of failures yielded by this future\nThe type of failures yielded by this future\nA future represents an asynchronous computation, commonly …\nValues yielded by the stream.\nThe type of successful values yielded by this future\nThe type of successful values yielded by this future\nThe type of value produced on completion.\nA <code>Sink</code> is a value into which other values can be sent, …\nA stream of values produced asynchronously.\nA convenience for futures that return <code>Result</code> values that …\nA convenience for streams that return <code>Result</code> values that …\nAn extension trait which adds utility methods to <code>AsyncWrite</code>…\nAdapters specific to <code>Result</code>-returning streams\nAdapters specific to <code>Result</code>-returning futures\nAn extension trait which adds utility methods to <code>AsyncSeek</code> …\nAn extension trait for <code>Future</code>s that provides a variety of …\nAn extension trait which adds utility methods to <code>AsyncRead</code> …\nAn extension trait for <code>Stream</code>s that provides a variety of …\nAn extension trait which adds utility methods to …\nAn extension trait for <code>Sink</code>s that provides a variety of …\nExecute predicate over asynchronous stream, and return <code>true</code>…\nExecutes another future after this one resolves …\nChain on a computation for when a value is ready, passing …\nExecute predicate over asynchronous stream, and return <code>true</code>…\nWrap the future in a Box, pinning it.\nWrap the stream in a Box, pinning it.\nWrap the future in a Box, pinning it.\nWrap the stream in a Box, pinning it.\nAdds a fixed-size buffer to the current sink.\nAn adaptor for creating a buffered list of pending futures …\nAn adaptor for creating a buffered list of pending futures.\nBorrows a stream, rather than consuming it.\nCatches unwinding panics while polling the future.\nCatches unwinding panics while polling the stream.\nAdapter for chaining two streams.\nCreates an adaptor which will chain this stream with …\nAn adaptor for chunking up items of the stream inside a …\nClose the sink.\nCreates a future which will entirely close this <code>AsyncWrite</code>.\nTransforms a stream into a collection, returning a future …\nConcatenate all items of a stream into a single extendable …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nA convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …\nDrives the stream to completion, counting the number of …\nRepeats a stream endlessly.\nCreates a stream which gives the current iteration count …\nMaps this future’s <code>Error</code> to a new error type using the …\nWraps the current stream in a new stream which converts …\nFanout items to multiple sinks.\nA future that completes after the given item has been …\nCreates a future which will wait for a non-empty buffer to …\nFilters the values produced by this stream according to …\nFilters the values produced by this stream while …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nMaps a stream like <code>StreamExt::map</code> but flattens nested …\nFlatten the execution of this future when the output of …\nFlattens a stream of streams into just one continuous …\nFlattens the execution of this future when the successful …\nFlatten the execution of this future when the successful …\nFlattens a stream of streams into just one continuous …\nFlush the sink, processing all pending items.\nCreates a future which will entirely flush this <code>AsyncWrite</code>.\nExecute an accumulating asynchronous computation over a …\nRuns this stream to completion, executing the provided …\nRuns this stream to completion, executing the provided …\nA future that completes after the given stream has been …\nFuse a future such that <code>poll</code> will never again be called …\nFuse a stream such that <code>poll_next</code> will never again be …\nAsynchronous values.\nDo something with the output of a future before passing it …\nDo something with each item of this stream, afterwards …\nDo something with the error value of a future before …\nDo something with the error value of this stream, …\nDo something with the success value of a future before …\nDo something with the success value of this stream, …\nAdapter that converts this stream into an <code>AsyncBufRead</code>.\nWraps a <code>TryFuture</code> into a type that implements <code>Future</code>.\nConverts this stream into a future of …\nAllow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.\nConvert this future into a single element stream.\nWraps a <code>TryStream</code> into a type that implements <code>Stream</code>\nWrap this future in an <code>Either</code> future, making it the …\nWrap this sink in an <code>Either</code> sink, making it the left-hand …\nWrap this stream in an <code>Either</code> stream, making it the …\nReturns a stream over the lines of this reader. This …\nMap this future’s output to a different type, returning …\nMaps this stream’s items to a different type, returning …\nMaps this future’s error value to a different value.\nWraps the current stream in a new stream which maps the …\nMap this future’s output to a different type, returning …\nMaps this future’s success value to a different value.\nWraps the current stream in a new stream which maps the …\nMaps this future’s success value to a different value, …\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nCreates a future that resolves to the next item in the …\nEvaluates and consumes the future, returning the resulting …\nMaps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.\nExecutes another future if this one resolves to an error. …\nChain on a computation for when an error happens, passing …\nCreates a new stream which exposes a <code>peek</code> method.\nAttempts to resolve the future to a final value, …\nFlush any remaining output and close this sink, if …\nAttempt to close the object.\nA convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …\nAttempt to return the contents of the internal buffer, …\nFlush any remaining output from this sink.\nAttempt to flush the object, ensuring that any buffered …\nA convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …\nAttempt to pull out the next value of this stream, …\nA convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempts to prepare the <code>Sink</code> to receive a value.\nA convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …\nAttempt to seek to an offset, in bytes, in a stream.\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nAttempt to write bytes from <code>buf</code> into the object.\nAttempt to write bytes from <code>bufs</code> into the object using …\nTries to read some bytes directly into the given <code>buf</code> in …\nCreates a future which will read exactly enough bytes to …\nCreates a future which will read all the bytes associated …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes from this …\nCreates a future which will read all the bytes associated …\nCreates a future which will read from the <code>AsyncRead</code> into …\nAn adaptor for chunking up ready items of the stream …\nTurn this future into a future that yields <code>()</code> on …\nWrap this future in an <code>Either</code> future, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nWrap this stream in an <code>Either</code> stream, making it the …\nCombinator similar to <code>StreamExt::fold</code> that holds internal …\nCreates a future which will seek an IO object, and then …\nReturns a <code>Future</code> that resolves when the next item in this …\nA future that completes after the given item has been …\nA future that completes after the given stream has been …\nCreate a cloneable handle to this future where all handles …\nAsynchronous sinks.\nMap this sink’s error to a different error type using …\nTransforms the error returned by the sink.\nReturns the bounds on the remaining length of the stream.\nCreates a new stream which skips <code>n</code> items of the underlying …\nSkip elements on this stream while the provided …\nSplits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …\nHelper method for splitting this read/write object into …\nBegin the process of sending a value to the sink. Each …\nA convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …\nAsynchronous streams.\nCreates a future which will return the current seek …\nCreates a new stream of at most <code>n</code> items of the underlying …\nCreates an AsyncRead adapter which will read at most <code>limit</code> …\nTake elements from this stream until the provided future …\nTake elements from this stream while the provided …\nChain on a computation for when a future finished, passing …\nComputes from this stream’s items new items of a …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute a predicate over an asynchronous stream …\nAttempt to execute several futures from a stream …\nAttempt to execute several futures from a stream …\nAn adaptor for chunking up successful items of the stream …\nAttempt to transform a stream into a collection, returning …\nAttempt to concatenate all items of a stream into a single …\nAttempt to filter the values produced by this stream …\nAttempt to filter the values produced by this stream while …\nFlatten the execution of this future when the successful …\nFlattens a stream of streams into just one continuous …\nFlatten the execution of this future when the successful …\nFlattens a stream of streams into just one continuous …\nAttempt to execute an accumulating asynchronous …\nAttempts to run this stream to completion, executing the …\nAttempts to run this stream to completion, executing the …\nCreates a future that attempts to resolve the next item in …\nPoll this <code>TryFuture</code> as if it were a <code>Future</code>.\nPoll this <code>TryStream</code> as if it were a <code>Stream</code>.\nA convenience method for calling <code>TryStream::try_poll_next</code> …\nA convenience method for calling <code>TryFuture::try_poll</code> on …")