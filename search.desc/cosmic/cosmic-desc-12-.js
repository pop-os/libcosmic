searchState.loadedDescShard("cosmic", 12, "The <code>Style</code> of a class with the given status.\nThe text produced by the key press.\nThe <code>Color</code> of the value of the text input.\nThe amount of pixels to scroll.\nThe <code>TextInput</code> can be interacted with.\nThe theme catalog of a <code>TextInput</code>.\nThe item class of the <code>Catalog</code>.\nThe cursor of a text input.\nThe default <code>Padding</code> of a <code>TextInput</code>.\nThe <code>TextInput</code> cannot be interacted with.\nThe <code>TextInput</code> is focused.\nThe <code>TextInput</code> is being hovered.\nThe content of the <code>Icon</code>.\nThe identifier of a <code>TextInput</code>.\nThe left side of a <code>TextInput</code>.\nThe right side of a <code>TextInput</code>.\nThe side of a <code>TextInput</code>.\nThe state of a <code>TextInput</code>.\nThe possible status of a <code>TextInput</code>.\nThe appearance of a text input.\nA styling function for a <code>TextInput</code>.\nA field that can be filled with text.\nThe value of a <code>TextInput</code>.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nThe unicode code point that will be used as the icon.\nTrack the cursor of a text input.\nReturns the <code>Cursor</code> of the <code>TextInput</code>.\nThe default style of a <code>TextInput</code>.\nThe default class produced by the <code>Catalog</code>.\nProduces a <code>Task</code> that focuses the <code>TextInput</code> with the given …\nFocuses the <code>TextInput</code>.\nThe font that will be used to display the <code>code_point</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe <code>Color</code> of the icon of the text input.\nInserts a new <code>char</code> at the given grapheme <code>index</code>.\nInserts a bunch of graphemes at the given grapheme <code>index</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>Value</code> is empty or not.\nReturns whether the <code>TextInput</code> is currently focused or not.\nReturns the total amount of graphemes in the <code>Value</code>.\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to an arbitrary location.\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to the end of the input …\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to the front of the …\nCreates a new <code>Value</code> from a string slice.\nCreates a custom <code>Id</code>.\nCreates a new <code>State</code>, representing an unfocused <code>TextInput</code>.\nReturns the position of the next end of a word from the …\nThe <code>Color</code> of the placeholder of the text input.\nReturns the position of the previous start of a word from …\nRemoves the grapheme at the given <code>index</code>.\nRemoves the graphemes from <code>start</code> to <code>end</code>.\nReturns a new <code>Value</code> with all its graphemes replaced with …\nReturns a new <code>Value</code> containing the graphemes from <code>start</code> …\nProduces a <code>Task</code> that selects all the content of the …\nSelects all the content of the <code>TextInput</code>.\nReturns the current selection of the <code>Cursor</code> for the given …\nThe <code>Color</code> of the selection of the text input.\nThe side of a <code>TextInput</code> where to display the <code>Icon</code>.\nThe font size of the content.\nThe spacing between the <code>Icon</code> and the text in a <code>TextInput</code>.\nReturns the <code>State</code> of the <code>Cursor</code>.\nThe <code>Style</code> of a class with the given status.\nUnfocuses the <code>TextInput</code>.\nCreates a unique <code>Id</code>.\nReturns a new <code>Value</code> containing the graphemes until the …\nThe <code>Color</code> of the value of the text input.\nThe cursor of a text input.\nCursor without a selection\nCursor selecting a range of text\nThe state of a <code>Cursor</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe end of the selection\nThe start of the selection\nThe <code>Toggler</code> can be interacted with.\nThe theme catalog of a <code>Toggler</code>.\nThe item class of the <code>Catalog</code>.\nThe <code>Toggler</code> is disabled.\nThe <code>Toggler</code> is being hovered.\nThe possible status of a <code>Toggler</code>.\nThe appearance of a toggler.\nA styling function for a <code>Toggler</code>.\nA toggler widget.\nThe background <code>Color</code> of the toggler.\nThe <code>Color</code> of the background border of the toggler.\nThe width of the background border of the toggler.\nThe border radius of the toggler.\nThe default style of a <code>Toggler</code>.\nThe default class produced by the <code>Catalog</code>.\nThe foreground <code>Color</code> of the toggler.\nThe <code>Color</code> of the foreground border of the toggler.\nThe width of the foreground border of the toggler.\nReturns the argument unchanged.\nReturns the argument unchanged.\nthe space between the handle and the border of the toggler\nthe radius of the handle of the toggler\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Style</code> of a class with the given status.\nIndicates whether the <code>Toggler</code> is toggled.\nIndicates whether the <code>Toggler</code> is toggled.\nThe tooltip will appear on the bottom of the widget.\nThe tooltip will follow the cursor.\nThe tooltip will appear on the left of the widget.\nThe position of the tooltip. Defaults to following the …\nThe tooltip will appear on the right of the widget.\nAn element to display a widget over another.\nThe tooltip will appear on the top of the widget.\nThe <code>Slider</code> can be interacted with.\nThe theme catalog of a <code>Slider</code>.\nA circular handle.\nThe item class of the <code>Catalog</code>.\nThe <code>Slider</code> is being dragged.\nLinear gradient for the background of the rail includes an …\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nThe <code>Slider</code> is being hovered.\nStart and end colors of the rail\nThe background color of the rail\nA rectangular shape.\nThe possible status of a <code>Slider</code>.\nThe appearance of a slider.\nA styling function for a <code>Slider</code>.\nAn vertical bar and a handle that selects a single value …\nThe <code>Background</code> of the handle.\nThe border <code>Color</code> of the handle.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe default style of a <code>Slider</code>.\nThe default class produced by the <code>Catalog</code>.\nThe appearance of the <code>Handle</code> of the slider.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe <code>Style</code> of a class with the given status.\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nLet the widget determin the angle of the gradient\nthe linear gradient of the slider\nA buffer for short-term storage and transfer within and …\nAn error that occurred while running an application.\nThe <code>Executor</code> that will run commands and subscriptions.\nThe futures executor could not be created.\nThe data needed to initialize your <code>Program</code>.\nThe application graphics context could not be created.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nAn interactive, native, cross-platform, multi-windowed …\nAn event loop proxy with backpressure that implements <code>Sink</code>.\nThe graphics backend to use to draw the <code>Program</code>.\nThe settings of an application.\nThe theme used to draw the <code>Program</code>.\nThe application window could not be created.\nAccess the clipboard.\nConvert <code>winit</code> types into <code>iced_runtime</code> types, and viceversa.\nThe fonts to load on boot.\nFrees an amount of slots for additional messages to be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe identifier of the application.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the application should exit when no windows are …\nInitializes the <code>Program</code> with the flags provided to <code>run</code> as …\nCreates a new <code>Proxy</code> from an <code>EventLoopProxy</code>.\nWayland specific shell\nCreate interactive, native cross-platform applications for …\nReads the current content of the <code>Clipboard</code> as text.\nReturns the scale factor of the window of the <code>Program</code>.\nSends a value to the event loop.\nSends an action to the event loop.\nConfigure your application.\nReturns the <code>Style</code> variation of the <code>Theme</code>.\nReturns the event <code>Subscription</code> for the current state of the\nReturns the current <code>Theme</code> of the <code>Program</code>.\nReturns the current title of the <code>Program</code>.\nCreates a new <code>Clipboard</code> that isn’t associated with a …\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nReturns the identifier of the window used to create the …\nWrites the given text contents to the <code>Clipboard</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA buffer for short-term storage and transfer within and …\nConverts a physical cursor position to a logical <code>Point</code>.\nConverts a <code>window::Mode</code> to a <code>winit</code> fullscreen mode.\nConverts some <code>window::Icon</code> into it’s <code>winit</code> counterpart.\nConverts a <code>Key</code> from <code>winit</code> to an <code>iced</code> key.\nConverts a <code>KeyCode</code> from <code>winit</code> to an <code>iced</code> key code.\nConverts a <code>winit</code> fullscreen mode to a <code>window::Mode</code>.\nConverts some <code>ModifiersState</code> from <code>winit</code> to an <code>iced</code> …\nConverts a <code>MouseButton</code> from <code>winit</code> to an <code>iced</code> mouse button.\nConverts a <code>mouse::Interaction</code> to a <code>winit</code> cursor icon.\nConverts a <code>NativeKeyCode</code> from <code>winit</code> to an <code>iced</code> native key …\nConverts a <code>PhysicalKey</code> from <code>winit</code> to an <code>iced</code> physical key.\nConverts a <code>window::Position</code> to a <code>winit</code> logical position …\nConverts a <code>Touch</code> from <code>winit</code> to an <code>iced</code> touch event.\nConverts some <code>UserAttention</code> into it’s <code>winit</code> counterpart.\nConverts a <code>window::Mode</code> to a visibility flag.\nConverts some <code>window::Settings</code> into some <code>WindowAttributes</code> …\nConverts a winit window event into an iced event.\nConverts a <code>window::Level</code> to a <code>winit</code> window level.\nAn antialiasing strategy.\nAn error occurred in the context’s internal backend\nA simple cache that stores generated values to avoid …\nSome cached text.\nA graphics compositor that can draw to windows.\nAn editor.\nAn error that occurred while creating an application’s …\nA fill which linearly interpolates colors along a …\nA mesh with a gradient.\nA suitable graphics adapter or device could not be found.\nA raster or vector image.\nA layer of graphical primitives.\nA linear gradient interpolates colors along a direction …\nMultiple errors occurred\nMultisample AA with 16 samples\nMultisample AA with 2 samples\nMultisample AA with 4 samples\nMultisample AA with 8 samples\nA low-level primitive to render a mesh of triangles.\nFailed to find any pixel format that matches the criteria.\nA paragraph.\nA raster image.\nSome raw text.\nThe iced renderer of the backend.\nThe settings of a renderer.\nA mesh with a solid color.\nThe surface of the backend.\nA text primitive.\nA vector image.\nThe requested backend version is not supported.\nA viewing region for displaying computer graphics.\nThe antialiasing strategy that will be used for triangle …\nCache computations and efficiently reuse them.\nManage colors for shaders.\nA compositor is responsible for initializing a renderer …\nConfigures a new <code>Surface</code> with the given dimensions.\nCreates a <code>Self::Renderer</code> for the <code>Compositor</code>.\nCrates a new <code>Surface</code> for the given window.\nCompute the damage between frames.\nThe default <code>Font</code> to use.\nThe default size of text.\nSee what can go wrong when creating graphical backends.\nReturns <code>Information</code> used by this <code>Compositor</code>.\nFlushes and settles any pending group of primitives in the …\nBuild and draw geometry.\nA gradient that can be used as a fill for some geometry.\nLoad and operate on images.\nDraw and stack layers of graphical primitives.\nDraw triangles!\nPresents the <code>Renderer</code> primitives to the next frame of the …\nClears all the layers contents and resets its bounds.\nResizes the <code>Layer</code> to the given bounds.\nScreenshots the current <code>Renderer</code> primitives to an …\nDraw text.\nCreates a new <code>Compositor</code> with a backend preference.\nCreates a new <code>Layer</code> with the given bounds.\nThe name of the backend where the error happened\nThe reason why this backend could not be used\nThe bounds of the image.\nThe bounds of the image.\nThe image handle\nThe handle of a vector image.\nThe vertices and indices of the mesh.\nThe vertices and indices of the mesh.\nThe clip bounds of the <code>Mesh</code>.\nThe clip bounds of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nThe bounds of the text.\nThe clip bounds of the text.\nThe color of the text.\nThe contents of the text.\nThe font of the text.\nThe horizontal alignment of the text.\nThe line height of the text.\nThe shaping strategy of the text.\nThe size of the text in logical pixels.\nThe vertical alignment of the text.\nA simple cache that stores generated values to avoid …\nThe type of cache produced.\nA piece of data that can be cached.\nThe <code>Cache</code> is empty.\nThe <code>Cache</code> is filled.\nA cache group.\nThe state of a <code>Cache</code>.\nCaches this value, producing its corresponding <code>Cache</code>.\nLoads the <code>Cache</code> into a proper instance.\nThe current value of the <code>Cache</code>\nThe previous value of the <code>Cache</code>.\nA flag that indicates whether the renderer should perform …\nA color packed as 4 floats representing RGBA channels.\nPacks a <code>Color</code>.\nA graphics compositor that can draw to windows.\nThe compositor of the renderer.\nDefines the default compositor of a renderer.\nContains information about the graphics (e.g. graphics …\nInvalid dimensions\nThe swap chain has been lost and needs to be recreated.\nPresent Error\nThere is no more memory left to allocate a new frame.\nThe underlying surface has changed, and therefore the …\nPresent Error\nThe iced renderer of the backend.\nResize Error\nThe surface of the backend.\nResult of an unsuccessful call to <code>Compositor::present</code>.\nA timeout was encountered while trying to acquire the next …\nA window that can be used in a <code>Compositor</code>.\nContains the graphics adapter.\nContains the graphics backend.\nConfigures a new <code>Surface</code> with the given dimensions.\nCreates a <code>Self::Renderer</code> for the <code>Compositor</code>.\nCrates a new <code>Surface</code> for the given window.\nReturns <code>Information</code> used by this <code>Compositor</code>.\nPresents the <code>Renderer</code> primitives to the next frame of the …\nScreenshots the current <code>Renderer</code> primitives to an …\nCreates a new <code>Compositor</code> with a backend preference.\nAn Accesskit event for a specific Accesskit Node in an …\nAlignment on the axis of a container.\nThe background of some element.\nA border.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nAlign at the center of the axis.\nA buffer for short-term storage and transfer within and …\nA color in the <code>sRGB</code> color space.\nA solid color.\nScale as big as it can be without needing to crop or hide …\nThe strategy used to fit the contents of a widget to its …\nScale the image to cover all of the bounding box, cropping …\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nDegrees\nA DnD event.\nThe built-in Dracula variant.\nA generic <code>Widget</code>.\nAlign at the end of the axis.\nA user interface event.\nThe built-in Ferra variant:\nDistort the image so the widget is 100% covered without …\nFill all the remaining space\nFill a portion of the remaining space relative to other …\nFill a fixed amount of space\nThe element will float while rotating. The layout will be …\nA font.\nA fill which transitions colors progressively along a …\nLinearly interpolate between several colors.\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nThe hasher used to compare layouts.\nA raster image that can be drawn.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nA keyboard event\nThe bounds of a <code>Node</code> and its children, using absolute …\nThe strategy used to fill space in a specific dimension.\nThe built-in light variant.\nA linear gradient interpolates colors along a direction at …\nThe built-in Moonfly variant.\nA mouse event\nThe built-in Nightfly variant.\nDon’t resize or scale the image at all.\nThe built-in Nord variant.\nAn interactive component that can be displayed on top of …\nThe built-in Oxocarbon variant.\nAn amount of space to pad for each side of a box\nAn amount of logical pixels.\nPlatform specific events\nA 2D point.\nRadians\nAn axis-aligned rectangle.\nA component that can be used by widgets to draw themselves …\nThe strategy used to rotate the content.\nScale the image down if it’s too big for the space, but …\nA shadow.\nA connection to the state of a shell.\nFill the least amount of space\nAn amount of space in 2 dimensions.\nA <code>SmolStr</code> is a string type that has the following …\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nThe element will be solid while rotating. The layout will …\nAlign at the start of the axis.\nA raster image that can be drawn.\nA paragraph.\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nA touch event\nA 2D transformation matrix.\nA 2D vector.\nA component that displays information and allows …\nA window event\nTransparency, 0.0 - 1.0\nAlign and position widgets.\nBlue component, 0.0 - 1.0\nThe blur radius of the shadow.\nDraw lines around containers.\nThe border radii of the image\nThe border radius for the svg\nBottom padding\nThe bounds of the paragraph.\nClears all of the recorded primitives in the <code>Renderer</code>.\nAccess the clipboard.\nThe color of the border.\nThe <code>Color</code> filter to be applied to the <code>Svg</code>.\nThe color of the shadow.\nCreates a <code>Color</code> with shorter and cleaner syntax.\nThe content of the paragraph.\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nEnds recording a new layer.\nEnds recording a new layer.\nHandle events of a user interface.\nThe <code>Family</code> of the <code>Font</code>.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nThe filter method of the image.\nLoad and use fonts.\nThe font of the <code>Text</code>.\nGreen component, 0.0 - 1.0\nColors that transition progressively.\nThe handle of the image.\nThe handle of the <code>Svg</code>.\nHeight of the rectangle.\nThe height.\nThe horizontal alignment of the <code>Text</code>.\nWidget and Window IDs.\nLoad and draw raster graphics.\nListen to keyboard events.\nPosition your widgets properly.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nLeft padding\nThe line height of the <code>Text</code>.\nHandle mouse events.\nThe offset of the shadow.\nThe opacity of the image.\nThe opacity of the <code>Svg</code>.\nDisplay interactive elements on top of other widgets.\nSpace stuff around the perimeter.\nRed component, 0.0 - 1.0\nThe <code>Radius</code> of the border.\nReads the current content of the <code>Clipboard</code> as text.\nWrite your own renderer.\nRight padding\nThe rotation to be applied to the image; on its center.\nThe rotation to be applied to the image; on its center.\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nThe size of the <code>Text</code> in logical pixels.\nIf set to <code>true</code>, the image will be snapped to the pixel …\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nLoad and draw vector graphics.\nDraw and interact with text.\nUse the built-in theme and styles.\nKeep track of time, both in native and web platforms!\nTop padding\nBuild touch events.\nThe vertical alignment of the <code>Text</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nCreate custom widgets and operate on them.\nThe width of the border.\nWidth of the rectangle.\nThe width.\nBuild window-based GUI applications.\nThe <code>Wrapping</code> strategy of the <code>Text</code>.\nWrites the given text contents to the <code>Clipboard</code>.\nThe X coordinate.\nX coordinate of the top-left corner.\nThe X component of the <code>Vector</code>\nThe Y coordinate.\nY coordinate of the top-left corner.\nThe Y component of the <code>Vector</code>\nAlignment on the axis of a container.\nAlign bottom\nAlign at the center of the axis.\nHorizontally centered\nVertically centered\nAlign at the end of the axis.\nThe horizontal <code>Alignment</code> of some resource.\nAlign left\nAlign right\nAlign at the start of the axis.\nAlign top\nThe vertical <code>Alignment</code> of some resource.\nA border.\nThe border radii for the corners of a graphics primitive …\nCreates a new <code>Radius</code> with the given value as bottom left …\nCreates a new <code>Radius</code> with the given bottom left value.\nBottom left radius\nCreates a new <code>Radius</code> with the given bottom right value.\nBottom right radius\nCreates a new <code>Border</code> with the given <code>Color</code>.\nThe color of the border.\nCreates a new <code>Radius</code> with the given value as top left and …\nCreates a new <code>Radius</code> with the same value for each corner.\nThe <code>Radius</code> of the border.\nCreates a new <code>Radius</code> with the given value as top right and …\nCreates a new <code>Border</code> with the given <code>Radius</code>.\nCreates a new <code>Radius</code> with the given value as top left and …\nCreates a new <code>Radius</code> with the given top left value.\nTop left radius\nCreates a new <code>Radius</code> with the given top right value.\nTop right radius\nCreates a new <code>Border</code> with the given <code>width</code>.\nThe width of the border.\nA buffer for short-term storage and transfer within and …\nA list of DnD destination rectangles.\nSource of a DnD operation.\nThe kind of <code>Clipboard</code>.\nA null implementation of the <code>Clipboard</code> trait.\nThe primary clipboard.\nThe standard clipboard.\nA surface is the source of the DnD operation.\nA widget is the source of the DnD operation.\nReads the current content of the primary <code>Clipboard</code>.\nReads the current content of the <code>Clipboard</code> as text.\nReads the current content of the <code>Clipboard</code>.\nReads the current content of the primary <code>Clipboard</code>.\nStarts a DnD operation. icon surface is a tuple of the …\nWrites the given text contents to the <code>Clipboard</code>.\nAn Accesskit event for a specific Accesskit Node in an …\nThe <code>Event</code> was handled and processed by a widget.\nA DnD event.\nA user interface event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event\nA mouse event\nA platform specific event\nPlatform specific events\nThe status of an <code>Event</code> after being processed.\nA touch event\nA window event\nGlyphs in cursive fonts generally use a more informal …\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nThe width of some text.\nThe style of some text.\nThe weight of some text.\nThe <code>Family</code> of the <code>Font</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nA point along the gradient vector where the specified <code>color</code>…\nA fill which transitions colors progressively along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction at …\nHow the <code>Gradient</code> is angled within its bounds.\nThe color of the gradient at the specified <code>offset</code>.\nOffset along the gradient vector.\n<code>ColorStop</code>s along the linear gradient path.\na custom id, which is equal to any <code>Id</code> with a matching …\nThe identifier of a generic widget.\nSimilar to PartialEq, but only intended for use when …\nInternal representation of an <code>Id</code>.\nXXX Do not use this as an id for an accessibility node, it …\na unique id\nget window node id that won’t conflict with other node …\nA cheaply cloneable and sliceable chunk of contiguous …\nA handle pointing to some encoded image bytes in-memory.\nImage filtering strategy.\nA handle of some image data.\nThe image Handle to be displayed. Iced exposes its own …\nThe unique identifier of some <code>Handle</code> data.\nA raster image that can be drawn.\nBilinear interpolation.\nNearest neighbor.\nA file handle. The image data will be read from the file …\nA <code>Renderer</code> that can render raster graphics.\nA handle pointing to decoded image pixels in RGBA format.\nThe border radii of the image\nDraws an image with the given <code>Handle</code> and inside the …\nThe filter method of the image.\nThe handle of the image.\nReturns the dimensions of an image for the given <code>Handle</code>.\nThe opacity of the image.\nThe rotation to be applied to the image; on its center.\nIf set to <code>true</code>, the image will be snapped to the pixel …\nThe height of the image.\nThe id of this handle.\nThe pixels.\nThe width of the image.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nIdentify keyboard keys.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe key pressed with all keyboard modifiers applied, …\nThe key released with all keyboard modifiers applied, …\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe physical key pressed.\nThe physical key released.\nThe text produced by the key press, if any.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nRedo or repeat an action.\nFound on Sun’s USB keyboard.\nInitiate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nThe Application switch key, which provides a list of …\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n↓\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n←\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n→\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\n↑\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nUsed to remove the character to the left of the cursor. …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nNavigate to previous content or page in current history. (…\nSome laptops place this key to the left of the ↑ key.\nOpen the list of browser favorites. (…\nNavigate to next content or page in current history. (…\nSome laptops place this key to the right of the ↑ key.\nGo to the user’s preferred home page. (…\nThe “home” button on Android.\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe <code>Caps Lock</code> (Capital) key.\nCapsLock or ⇪\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nCode representing the location of a physical key.\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nShow the application’s context menu. This key is …\nThe application context menu key, which is typically found …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nConvert the current input method sequence.\nJapanese: 変 (henkan)\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nFound on Sun’s USB keyboard.\nThe Cursor Select key.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nFound on Sun’s USB keyboard.\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nUsed to delete the character to the right of the cursor. …\n⌦. The forward delete key. Note that on Apple keyboards, …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nToggle removable media to eject (open) and insert (close) …\nEject or ⏏. This key is placed in the function section …\nThe End key, used with keyboard entry to go to the end of …\nPage Down, End, or ↘\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\nEnter or ↵. Labeled Return on Apple keyboards.\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nThe <code>Esc</code> key. This key was originally used to initiate an …\nEsc or ⎋\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFound on Sun’s USB keyboard.\nThe Function switch <code>Fn</code> key. Activating this key …\nFn This is typically a hardware key that does not generate …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nOpen a help dialog or toggle display of help information. (…\nHelp. Not present on standard PC keyboards.\nThe Hibernate key. This key saves the current state of the …\nThe Hiragana (Japanese Kana characters) key.\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana/Katakana toggle key. (…\nThe Home key, used with keyboard entry, to go to start of …\nHome or ↖\nToggle display of information about currently selected …\nToggle between text modes for insertion or overtyping. (…\nInsert or Ins. Not present on Apple keyboards.\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kanji (Japanese name for ideographic characters of …\nThe Katakana (Japanese Kana characters) key.\nUse for dedicated カタカナ key found on some Japanese …\nA key on the keyboard.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nA macOS “scancode”.\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nA named key.\nA key with an established name.\nContains the platform-native physical key identifier.\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nAccept current input method sequence without conversion in …\nJapanese: 無変換 (muhenkan)\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nOn the Mac, this is used for the numpad Clear key.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nFound on Sun’s USB keyboard.\nScroll down or display next page of content.\nPage Down, PgDn, or ⇟\nScroll up or display previous page of content.\nPage Up, PgUp, or ⇞\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nFound on Sun’s USB keyboard.\nPause the current state or application (as appropriate).\nPause Break\n. on a US keyboard.\nRepresents the location of a physical key.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThis key is placed in the function section on some Apple …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nInitiate print-screen function.\nPrtScr SysRq or Print Screen\nThe properties (Props) key.\nFound on Sun’s USB keyboard.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nToggle between scrolling and cursor movement modes.\nScroll Lock\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\nUsed in text to insert a space between words. Usually …\n  (space)\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nThe Horizontal Tabulation <code>Tab</code> key.\nTab or ⇥\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nFound on Sun’s USB keyboard.\nAn unidentified key.\nAn unidentified code.\nThis variant is used when the key cannot be translated to …\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA Windows “scancode”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nThe bounds of a <code>Node</code> and its children, using absolute …\nA set of size constraints for layouting.\nThe bounds of an element and its children.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nDistribute elements using a flex-based layout.\nProduces a <code>Node</code> with two children nodes one right next to …\nComputes the <code>Node</code> that fits the <code>Limits</code> given some width, …\nComputes a <code>padded</code> <code>Node</code> with a positioning step.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nThe main axis of a flex layout.\nThe horizontal axis\nThe vertical axis\nComputes the flex layout with the given axis and limits, …\nThe cursor has a defined position.\nThe back mouse button.\nThe button of a mouse.\nA mouse button was pressed.\nA mouse button was released.\nA mouse click.\nThe mouse cursor state.\nThe mouse cursor entered the window.\nThe mouse cursor left the window.\nThe mouse cursor was moved\nA mouse event.\nThe forward mouse button.\nThe interaction of a mouse cursor.\nThe left mouse button.\nA line-based scroll movement\nThe middle (wheel) button.\nSome other button.\nA pixel-based scroll movement\nThe right mouse button.\nA scroll movement.\nThe cursor is currently unavailable (i.e. out of bounds or …\nThe mouse wheel was scrolled.\nTrack mouse clicks.\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA mouse click.\nA double click\nThe kind of mouse click.\nA single click\nA triple click\nA generic <code>Overlay</code>.\nAn <code>Overlay</code> container that displays multiple overlay …\nAn interactive component that can be displayed on top of …\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nReturns a <code>Group</code> of overlay <code>Element</code> children.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nAn amount of space to pad for each side of a box\nCreate a <code>Padding</code> that is equal on all sides.\nCreate some bottom <code>Padding</code>.\nBottom padding\nCreate some left <code>Padding</code>.\nLeft padding\nCreate some right <code>Padding</code>.\nRight padding\nCreate some top <code>Padding</code>.\nTop padding\nA polygon with four sides.\nA component that can be used by widgets to draw themselves …\nThe styling attributes of a <code>Renderer</code>.\nThe <code>Border</code> of the <code>Quad</code>. The border is drawn on the inside …\nThe bounds of the <code>Quad</code>.\nClears all of the recorded primitives in the <code>Renderer</code>.\nEnds recording a new layer.\nEnds recording a new layer.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nThe color to apply to symbolic icons.\nThe scale factor\nThe <code>Shadow</code> of the <code>Quad</code>.\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nThe text color\nIn-memory data\nThe data of a vectorial image.\nA handle of Svg data.\nFile data\nA <code>Renderer</code> that can render vector graphics.\nA raster image that can be drawn.\nThe border radius for the svg\nThe <code>Color</code> filter to be applied to the <code>Svg</code>.\nDraws an SVG with the given <code>Handle</code>, an optional <code>Color</code> …\nThe handle of the <code>Svg</code>.\nReturns the default dimensions of an SVG for the given …\nThe opacity of the <code>Svg</code>.\nThe rotation to be applied to the image; on its center.\nThe <code>char</code> representing a ▼ icon in the built-in <code>ICON_FONT</code>.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nBorrowed data.\nA bounds difference.\nThe <code>char</code> representing a ✔ icon in the <code>ICON_FONT</code>.\nThe point was within the bounds of the returned character …\nThe difference detected in some text.\nA component that can be used by widgets to edit multi-line …\nThe <code>Editor</code> of this <code>Renderer</code>.\nThe font of the <code>Editor</code>.\nThe font of this <code>Paragraph</code>.\nThe font type used.\nA fragment of <code>Text</code>.\nWraps at the glyph level.\nA text highlight.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe result of hit testing on text.\nThe icon font of the backend.\nA trait for converting a value to some text <code>Fragment</code>.\nThe highlight iterator type.\nThe height of a line of text in a paragraph.\nNo wrapping.\nNo difference.\nOwned data.\nA text paragraph.\nThe <code>Paragraph</code> of this <code>Renderer</code>.\nThe Raw of this <code>Renderer</code>.\nA factor of the size of the text.\nA renderer capable of measuring and drawing <code>Text</code>.\nThe settings to configure the <code>Highlighter</code>.\nA shape difference.\nThe shaping strategy of some text.\nA span of text.\nA paragraph.\nWraps at the word level.\nWraps at the word level, or fallback to glyph level if a …\nThe wrapping strategy of some text.\nThe <code>Background</code> of the highlight.\nThe <code>Border</code> of the highlight.\nReturns the current boundaries of the <code>Editor</code>.\nThe bounds of the paragraph.\nNotifies the <code>Highlighter</code> that the line at the given index …\nThe <code>Color</code> of the <code>Span</code>.\nCompares the <code>Paragraph</code> with some desired <code>Text</code> and returns …\nThe content of the paragraph.\nReturns the current line of the <code>Highlighter</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nReturns the current cursor position of the <code>Editor</code>.\nReturns the default <code>Self::Font</code>.\nReturns the default size of <code>Text</code>.\nEdit text.\nDraws the given <code>Editor</code> at the given position and with the …\nDraws the given <code>Paragraph</code> at the given position and with …\nDraws the given Raw\nDraws the given <code>Text</code> at the given position and with the …\nThe font of the <code>Text</code>.\nThe font of the <code>Span</code>.\nReturns the distance to the given grapheme index in the …\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nThe <code>Highlight</code> of the <code>Span</code>.\nHighlights the given line.\nHighlight text.\nTests whether the provided point is within the boundaries …\nTests whether the provided point is within the boundaries …\nReturns the horizontal alignment of the <code>Paragraph</code>.\nThe horizontal alignment of the <code>Text</code>.\nConverts the value to some text <code>Fragment</code>.\nReturns true if the <code>Editor</code> has no contents.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nThe line height of the <code>Text</code>.\nThe <code>LineHeight</code> of the <code>Span</code>.\nThe link of the <code>Span</code>.\nReturns the minimum boundaries to fit the current contents …\nReturns the minimum boundaries that can fit the contents …\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nThe <code>Padding</code> of the <code>Span</code>.\nDraw paragraphs.\nPerforms an <code>Action</code> on the <code>Editor</code>.\nLays out the <code>Paragraph</code> with some new boundaries.\nReturns the current selected text of the <code>Editor</code>.\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nThe size of the <code>Text</code> in logical pixels.\nThe size of the <code>Span</code> in <code>Pixels</code>.\nReturns all bounds for the provided <code>Span</code> index of the …\nWhether the <code>Span</code> should be struck through or not.\nThe <code>Fragment</code> of text.\nWhether the <code>Span</code> should be underlined or not.\nUpdates the <code>Editor</code> with some new attributes.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nReturns the vertical alignment of the <code>Paragraph</code>.\nThe vertical alignment of the <code>Text</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nCreates a new <code>Editor</code> laid out with the given text.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nThe <code>Wrapping</code> strategy of the <code>Text</code>.\nAn interaction with an <code>Editor</code>.\nDelete the previous character.\nCursor without a selection\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe cursor of an <code>Editor</code>.\nDelete the next character.\nA direction in some text.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nA component that can be used by widgets to edit multi-line …\nMove to the end of the line.\nBreak the current line.\nThe font of the <code>Editor</code>.\nMove to the start of the line.\nInsert the given character.\nMove left.\n&lt;-\nA cursor movement.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nMove right.\n-&gt;\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect the entire buffer.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nCursor selecting a range of text\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nReturns the current boundaries of the <code>Editor</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nReturns the current cursor position of the <code>Editor</code>.\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nReturns true if the <code>Editor</code> has no contents.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nReturns the minimum boundaries to fit the current contents …\nPerforms an <code>Action</code> on the <code>Editor</code>.\nReturns the current selected text of the <code>Editor</code>.\nUpdates the <code>Editor</code> with some new attributes.\nCreates a new <code>Editor</code> laid out with the given text.\nThe amount of pixels to scroll.\nThe format of some text.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe highlight iterator type.\nA highlighter that highlights nothing.\nThe settings to configure the <code>Highlighter</code>.\nNotifies the <code>Highlighter</code> that the line at the given index …\nThe <code>Color</code> of the text.\nReturns the current line of the <code>Highlighter</code>.\nThe <code>Font</code> of the text.\nHighlights the given line.\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nThe font of this <code>Paragraph</code>.\nA text paragraph.\nA <code>Paragraph</code> of plain text.\nCompares the <code>Paragraph</code> with some desired <code>Text</code> and returns …\nReturns the distance to the given grapheme index in the …\nTests whether the provided point is within the boundaries …\nTests whether the provided point is within the boundaries …\nReturns the horizontal alignment of the <code>Paragraph</code>.\nReturns the minimum boundaries that can fit the contents …\nLays out the <code>Paragraph</code> with some new boundaries.\nReturns all bounds for the provided <code>Span</code> index of the …\nReturns the vertical alignment of the <code>Paragraph</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nA <code>Theme</code> with a customized <code>Palette</code>.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nThe built-in Dracula variant.\nThe built-in Ferra variant:\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nThe built-in light variant.\nThe built-in Moonfly variant.\nThe built-in Nightfly variant.\nThe built-in Nord variant.\nThe built-in Oxocarbon variant.\nA color palette.\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe danger <code>Color</code> of the <code>Palette</code>.\nDefine the colors of a theme.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe text <code>Color</code> of the <code>Palette</code>.\nA set of background colors.\nA set of danger colors.\nThe built-in Catppuccin Frappé variant of an <code>Extended</code> …\nThe built-in Catppuccin Latte variant of an <code>Extended</code> …\nThe built-in Catppuccin Macchiato variant of an <code>Extended</code> …\nThe built-in Catppuccin Mocha variant of an <code>Extended</code> …\nThe built-in dark variant of an <code>Extended</code> palette.\nThe built-in Dracula variant of an <code>Extended</code> palette.\nThe built-in Ferra variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Dark variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Light variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Dragon variant of an <code>Extended</code> …\nThe built-in Kanagawa Lotus variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Wave variant of an <code>Extended</code> palette.\nThe built-in light variant of an <code>Extended</code> palette.\nThe built-in Moonfly variant of an <code>Extended</code> palette.\nThe built-in Nightfly variant of an <code>Extended</code> palette.\nThe built-in Nord variant of an <code>Extended</code> palette.\nThe built-in Oxocarbon variant of an <code>Extended</code> palette.\nThe built-in Solarized Dark variant of an <code>Extended</code> palette.\nThe built-in Solarized Light variant of an <code>Extended</code> …\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night Storm variant of an <code>Extended</code> …\nAn extended set of colors generated from a <code>Palette</code>.\nRecommended background, icon, and text <code>Color</code>.\nA color palette.\nA set of primary colors.\nA set of secondary colors.\nA set of success colors.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe set of background colors.\nThe base background color.\nThe base primary color.\nThe base secondary color.\nThe base success color.\nThe base danger color.\nThe background color.\nThe danger <code>Color</code> of the <code>Palette</code>.\nThe set of danger colors.\nThe icon color, which defaults to the text color.\nWhether the palette is dark or not.\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe set of primary colors.\nThe set of secondary colors.\nA stronger version of the base background color.\nA stronger version of the base primary color.\nA stronger version of the base secondary color.\nA stronger version of the base success color.\nA stronger version of the base danger color.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe set of success colors.\nThe text <code>Color</code> of the <code>Palette</code>.\nThe text color.\nA weaker version of the base background color.\nA weaker version of the base primary color.\nA weaker version of the base secondary color.\nA weaker version of the base success color.\nA weaker version of the base danger color.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nA touch interaction.\nA unique identifier representing a finger on a touch …\nA touch interaction was ended.\nA touch interaction was canceled.\nAn on-going touch interaction was moved.\nA touch interaction was started.\nThe identifier of a generic widget.\nA piece of logic that can traverse the widget tree of an …\nA bunch of text.\nA persistent state widget tree.\nA component that displays information and allows …\nThe children of the root widget of the <code>Tree</code>.\nOperates on a widget that contains other widgets.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nthe Id of the <code>Tree</code>\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nQuery or update internal widget state.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nThe <code>State</code> of the <code>Tree</code>.\nThe tag of the <code>Tree</code>.\nText widgets display information through writing.\nStore internal widget state in a state tree to ensure …\nThe <code>Operation</code> needs to be followed by another <code>Operation</code>.\nThe internal state of a widget that can be focused.\nThe <code>Operation</code> produced no result.\nA piece of logic that can traverse the widget tree of an …\nThe result of an <code>Operation</code>.\nThe internal state of a widget that can be scrolled.\nThe <code>Operation</code> produced some result.\nThe internal state of a widget that has text input.\nWraps the <code>Operation</code> in a black box, erasing its returning …\nOperates on a widget that contains other widgets.\nFocuses the widget.\nOperate on widgets that can be focused.\nReturns whether the widget is focused or not.\nMaps the output of an <code>Operation</code> using the given function.\nMoves the cursor of the text input to an arbitrary …\nMoves the cursor of the text input to the end of the input …\nMoves the cursor of the text input to the front of the …\nProduces an <code>Operation</code> that applies the given <code>Operation</code> to …\nScroll the widget by the given <code>AbsoluteOffset</code> along the …\nScroll the widget to the given <code>AbsoluteOffset</code> along the …\nOperate on widgets that can be scrolled.\nSearch for widgets with the target Id.\nSelects all the content of the text input.\nSnaps the scroll of the widget to the given <code>percentage</code> …\nOperate on widgets that have text input.\nChains the output of an <code>Operation</code> with the provided …\nUnfocuses the widget.\nA summary of the focusable widgets present on a widget …\nThe internal state of a widget that can be focused.\nProduces an <code>Operation</code> that generates a <code>Count</code> and chains it …\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that focuses the widget with the …\nFocuses the widget.\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that searches for the current …\nThe index of the current focused widget, if any.\nReturns whether the widget is focused or not.\nThe total amount of focusable widgets.\nUnfocuses the widget.\nThe amount of absolute offset in each direction of a …\nThe amount of relative offset in each direction of a …\nThe internal state of a widget that can be scrolled.\nProduces an <code>Operation</code> that scrolls the widget with the …\nScroll the widget by the given <code>AbsoluteOffset</code> along the …\nProduces an <code>Operation</code> that scrolls the widget with the …\nScroll the widget to the given <code>AbsoluteOffset</code> along the …\nProduces an <code>Operation</code> that snaps the widget with the given …\nSnaps the scroll of the widget to the given <code>percentage</code> …\nThe amount of horizontal offset\nThe amount of horizontal offset\nThe amount of vertical offset\nThe amount of vertical offset\nProduces an <code>Operation</code> that searches for the Id\nThe internal state of a widget that has text input.\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to an arbitrary …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the end of the input …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the front of the …\nProduces an <code>Operation</code> that selects all the content of the …\nSelects all the content of the text input.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nThe theme catalog of a <code>Text</code>.\nThe item class of this <code>Catalog</code>.\nWraps at the glyph level.\nThe height of a line of text in a paragraph.\nNo wrapping.\nA factor of the size of the text.\nThe shaping strategy of some text.\nThe internal state of a <code>Text</code> widget.\nThe appearance of some text.\nA styling function for a <code>Text</code>.\nA bunch of text.\nWraps at the word level.\nWraps at the word level, or fallback to glyph level if a …\nThe wrapping strategy of some text.\nText with the default base color.\nThe <code>Color</code> of the text.\nText conveying some negative information, like an error.\nThe default text styling; color is inherited.\nThe default class produced by this <code>Catalog</code>.\nDraws text using the same logic as the <code>Text</code> widget.\nProduces the <code>layout::Node</code> of a <code>Text</code> widget.\nText conveying some important information, like an action.\nText conveying some secondary information, like a footnote.\nThe <code>Style</code> of a class with the given status.\nText conveying some positive information, like a …\nA map of named widget states.\nNo meaningful internal state.\nSome meaningful internal state.\nThe internal <code>State</code> of a widget.\nThe identifier of some widget state.\nA persistent state widget tree.\nThe children of the root widget of the <code>Tree</code>.\nReconciles the <code>current_children</code> with the provided list of …\nthe Id of the <code>Tree</code>\nThe <code>State</code> of the <code>Tree</code>.\nThe tag of the <code>Tree</code>.\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nRedraw at the given time.\nThe window is completely centered on the screen.\nThe user has requested for the window to close.\nA window was closed.\nPlatform-specific\nThe platform-specific default position for a new window.\nA window-related event.\nA file has been dropped into the window.\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nA window was focused.\nThe application takes the whole screen of its current …\nThe application is hidden\nAn window icon normally used for the titlebar or taskbar.\nThe id of the window.\nPlatform-specific\nA window level groups windows with respect to their …\nThe mode of a window-based application.\nA window was moved.\nRedraw the next frame.\nThe default behavior.\nA window was opened.\nThe position of a window in a given screen.\nA request to redraw a window.\nA window redraw was requested.\nA window was resized.\nThe window settings of an application.\nThe window is positioned with specific coordinates: <code>(X, Y)</code>.\nLike <code>Specific</code>, but the window is positioned with the …\nA window was unfocused.\nThe type of user attention to request.\nThe application appears in its own window.\nWhether the window should have a border, a title bar, etc. …\nWhether the window will close when the user requests it, …\nChange the icon of a window.\nThe icon of the window.\nThe window <code>Level</code>.\nThe maximum size of the window.\nThe minimum size of the window.\nPlatform specific settings.\nThe initial position of the window.\nWhether the window should be resizable or not.\nThe border area for the drag resize handle.\nConfigure your windows.\nThe initial logical dimensions of the window.\nWhether the window should be transparent.\nWhether the window should be visible or not.\nThe position of the opened window. This is relative to the …\nThe size of the created window. This is its “inner” …\nProduced when the length of the <code>rgba</code> argument isn’t …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nAn error produced when using <code>from_rgba</code> with invalid …\nAn window icon normally used for the titlebar or taskbar.\nBuilds an  <code>Icon</code> from its RGBA pixels in the <code>sRGB</code> color …\nThe length of the provided RGBA data.\nThe provided height.\nThe amount of pixels of the provided RGBA data.\nThe provided width.\nThe product of <code>width</code> and <code>height</code>.\nThe platform specific window settings of an application.\nThe window settings of an application.\nSets the application id of the window.\nWhether the window should have a border, a title bar, etc. …\nWhether the window will close when the user requests it, …\nThe icon of the window.\nThe window <code>Level</code>.\nThe maximum size of the window.\nThe minimum size of the window.\nWhether bypass the window manager mapping for x11 windows\nPlatform specific settings.\nThe initial position of the window.\nWhether the window should be resizable or not.\nThe border area for the drag resize handle.\nThe initial logical dimensions of the window.\nWhether the window should be transparent.\nWhether the window should be visible or not.\nDiffs the damage regions given some previous and current …\nGroups the given damage regions that are close together …\nComputes the damage regions given some previous and …\nAn error occurred in the context’s internal backend\nThe backend did not match the preference\nAn error that occurred while creating an application’s …\nA suitable graphics adapter or device could not be found.\nMultiple errors occurred\nFailed to find any pixel format that matches the criteria.\nThe reason why a graphics adapter could not be found\nThe request to create the backend failed\nThe requested backend version is not supported.\nThe name of the backend where the error happened\nThe reason why this backend could not be used\nThe preferred backend\nA boxed static future.\nA boxed static stream.\nA type that can run futures.\nAn extension trait that enforces <code>Send</code> only on native …\nAn extension trait that enforces <code>Sync</code> only on native …\nA batteries-included runtime of commands and subscriptions.\nA request to listen to external events.\nThe underlying implementations of the <code>iced_futures</code> …\nBoxes a stream.\nListen to runtime events.\nChoose your preferred executor to power a runtime.\nListen to keyboard events.\nCreates a new <code>Executor</code>.\nSpawns a future in the <code>Executor</code>.\nCreate asynchronous streams of data.\nListen to external events in your application.\nA default, cross-platform backend.\nBackends that are only available in native platforms: …\nA backend that does nothing!\nA <code>tokio</code> executor.\nA <code>ThreadPool</code> backend.\nA <code>tokio</code> backend.\nA thread pool executor for futures.\nListen and react to time.\nA <code>tokio</code> executor.\nListen and react to time.\nReturns a <code>Subscription</code> that produces messages at a set …\nAn executor that drops all the futures, instead of …\nListen and react to time.\nReturns a <code>Subscription</code> to all the ignored runtime events.\nCreates a <code>Subscription</code> that produces a message for every …\nCreates a <code>Subscription</code> that listens and filters all the …\nA type that can run futures.\nCreates a new <code>Executor</code>.\nSpawns a future in the <code>Executor</code>.\nRead bytes asynchronously.\nAn extension trait which adds utility methods to …\nRead bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncRead</code> …\nSeek bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncSeek</code> …\nWrite bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncWrite</code>…\nThe type of value produced by the sink when an error …\nThe type of failures yielded by this future\nThe type of failures yielded by this future\nA future represents an asynchronous computation, commonly …\nAn extension trait for <code>Future</code>s that provides a variety of …\nValues yielded by the stream.\nThe type of successful values yielded by this future\nThe type of successful values yielded by this future\nThe type of value produced on completion.\nA <code>Sink</code> is a value into which other values can be sent, …\nAn extension trait for <code>Sink</code>s that provides a variety of …\nA stream of values produced asynchronously.\nAn extension trait for <code>Stream</code>s that provides a variety of …\nA convenience for futures that return <code>Result</code> values that …\nAdapters specific to <code>Result</code>-returning futures\nA convenience for streams that return <code>Result</code> values that …\nAdapters specific to <code>Result</code>-returning streams\nTells this buffer that <code>amt</code> bytes have been consumed from …\nBuilt-in executors and related tools.\nAsynchronous I/O.\nPolls multiple futures simultaneously, returning a tuple …\nFutures-powered synchronization primitives.\nThis module contains the <code>Never</code> type.\nA macro which yields to the event loop once.\nPins a value on the stack.\nAttempts to resolve the future to a final value, …\nA macro which returns the result of polling a future once …\nFlush any remaining output and close this sink, if …\nAttempt to close the object.\nAttempt to return the contents of the internal buffer, …\nFlush any remaining output from this sink.\nAttempt to flush the object, ensuring that any buffered …\nAttempt to pull out the next value of this stream, …\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempts to prepare the <code>Sink</code> to receive a value.\nAttempt to seek to an offset, in bytes, in a stream.\nAttempt to write bytes from <code>buf</code> into the object.\nA “prelude” for crates using the <code>futures</code> crate.\nExtracts the successful type of a <code>Poll&lt;T&gt;</code>.\nPolls multiple futures and streams simultaneously, …\nPolls multiple futures and streams simultaneously, …\nBegin the process of sending a value to the sink. Each …\nCombines several streams, all producing the same <code>Item</code> …\nTools for working with tasks.\nPolls multiple futures simultaneously, resolving to a …\nPoll this <code>TryFuture</code> as if it were a <code>Future</code>.\nPoll this <code>TryStream</code> as if it were a <code>Stream</code>.\nA multi-producer, single-consumer queue for sending values …\nA channel for sending a single message between …\nThe receiving end of a bounded mpsc channel.\nThe error type for <code>Sender</code>s used as <code>Sink</code>s.\nThe transmission end of a bounded mpsc channel.\nThe error type returned from <code>try_next</code>.\nThe error type returned from <code>try_send</code>.\nThe receiving end of an unbounded mpsc channel.\nThe transmission end of an unbounded mpsc channel.\nCreates a bounded mpsc channel for communicating between …\nCreates an unbounded mpsc channel for communicating …\nError returned from a <code>Receiver</code> when the corresponding …\nA future that resolves when the receiving end of a channel …\nA future for a value that will be provided by another …\nA means of transmitting a single value to another task.\nCreates a new one-shot channel for sending a single value …\nAn iterator which blocks on values from a stream until …\nRepresents an executor context.\nAn error returned by <code>enter</code> if an execution scope has …\nA single-threaded task pool for polling futures to …\nA handle to a <code>LocalPool</code> that implements <code>Spawn</code>.\nA general-purpose thread pool for scheduling tasks that …\nThread pool configuration object.\nRun a future to completion on the current thread.\nTurn a stream into a blocking iterator.\nMarks the current thread as being within the dynamic …\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nA simple wrapper type which allows types which implement …\nAn entity already exists, often a file.\nProgram argument list too long.\nRead bytes asynchronously.\nAn extension trait which adds utility methods to …\nRead bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncRead</code> …\nSeek bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncSeek</code> …\nWrite bytes asynchronously.\nAn extension trait which adds utility methods to <code>AsyncWrite</code>…\nThe operation failed because a pipe was closed.\nThe <code>BufReader</code> struct adds buffering to any reader.\nWraps a writer and buffers its output.\nReader for the <code>chain</code> method.\nFuture for the <code>close</code> method.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nFuture for the <code>copy()</code> function.\nFuture for the <code>copy_buf()</code> function.\nFuture for the <code>copy_buf_abortable()</code> function.\nCross-device or cross-filesystem (hard) link or rename.\nSets the offset to the current position plus the specified …\nA <code>Cursor</code> wraps an in-memory buffer and provides it with a …\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\nReader for the <code>empty()</code> function.\nSets the offset to the size of this object plus the …\nContains the error value\nThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…\nA list specifying general categories of I/O error.\nExecutable file is busy.\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nFuture for the <code>fill_buf</code> method.\nFuture for the <code>flush</code> method.\nThe remote host is not reachable.\nThe operation was partially successful and needs to be …\nThis operation was interrupted.\nSink for the <code>into_sink</code> method.\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\nA buffer type used with <code>Write::write_vectored</code>.\nA buffer type used with <code>Read::read_vectored</code>.\nThe filesystem object is, unexpectedly, a directory.\nWrap a writer, like <code>BufWriter</code> does, but prioritizes …\nStream for the <code>lines</code> method.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nContains the success value\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nFilesystem quota or some other kind of quota was exceeded.\nFuture for the <code>read</code> method.\nFuture for the <code>read_exact</code> method.\nThe readable half of an object returned from …\nFuture for the <code>read_line</code> method.\nThe filesystem or storage medium is read-only, but a write …\nFuture for the <code>read_to_end</code> method.\nFuture for the <code>read_to_string</code> method.\nFuture for the <code>read_until</code> method.\nFuture for the <code>read_vectored</code> method.\nReader for the <code>repeat()</code> function.\nResource is busy.\nA specialized <code>Result</code> type for I/O operations.\nError indicating a <code>ReadHalf&lt;T&gt;</code> and <code>WriteHalf&lt;T&gt;</code> were not …\nFuture for the <code>BufReader::seek_relative</code> method.\nFuture for the <code>seek</code> method.\nEnumeration of possible methods to seek within an I/O …\nWriter for the <code>sink()</code> function.\nStale network file handle.\nSets the offset to the provided number of bytes.\nThe underlying storage (typically, a filesystem) is full.\nReader for the <code>take</code> method.\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nAn owned window around an underlying buffer.\nThe operation needs to block to complete, but the blocking …\nFuture for the <code>write</code> method.\nFuture for the <code>write_all</code> method.\nThe writable half of an object returned from …\nFuture for the <code>write_vectored</code> method.\nAn error returned when an operation could not be completed …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nCreates a future which copies all the bytes from one …\nCreates a future which copies all the bytes from one …\nCreates a future which copies all the bytes from one …\nConstructs a new handle to an empty reader.\nAttempt to close the object.\nAttempt to return the contents of the internal buffer, …\nAttempt to flush the object, ensuring that any buffered …\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempt to seek to an offset, in bytes, in a stream.\nAttempt to write bytes from <code>buf</code> into the object.\nCreates an instance of a reader that infinitely repeats …\nCreates an instance of a writer which will successfully …\nAn RAII guard returned by the <code>MutexGuard::map</code> and …\nA futures-aware mutex.\nAn RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …\nA future which resolves when the target mutex has been …\nAn RAII guard returned by the <code>lock_owned</code> and <code>try_lock_owned</code>…\nA future which resolves when the target mutex has been …\nA type with no possible values.\nRead bytes asynchronously.\nRead bytes asynchronously.\nSeek bytes asynchronously.\nWrite bytes asynchronously.\nThe type of value produced by the sink when an error …\nThe type of failures yielded by this future\nThe type of failures yielded by this future\nA future represents an asynchronous computation, commonly …\nValues yielded by the stream.\nThe type of successful values yielded by this future\nThe type of successful values yielded by this future\nThe type of value produced on completion.\nA <code>Sink</code> is a value into which other values can be sent, …\nA stream of values produced asynchronously.\nA convenience for futures that return <code>Result</code> values that …\nA convenience for streams that return <code>Result</code> values that …\nAn extension trait which adds utility methods to <code>AsyncRead</code> …\nAdapters specific to <code>Result</code>-returning futures\nAn extension trait for <code>Future</code>s that provides a variety of …\nAn extension trait which adds utility methods to <code>AsyncWrite</code>…\nAn extension trait for <code>Sink</code>s that provides a variety of …\nAn extension trait which adds utility methods to <code>AsyncSeek</code> …\nAn extension trait which adds utility methods to …\nAdapters specific to <code>Result</code>-returning streams\nAn extension trait for <code>Stream</code>s that provides a variety of …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nAsynchronous values.\nAttempts to resolve the future to a final value, …\nFlush any remaining output and close this sink, if …\nAttempt to close the object.\nAttempt to return the contents of the internal buffer, …\nFlush any remaining output from this sink.\nAttempt to flush the object, ensuring that any buffered …\nAttempt to pull out the next value of this stream, …\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempts to prepare the <code>Sink</code> to receive a value.\nAttempt to seek to an offset, in bytes, in a stream.\nAttempt to write bytes from <code>buf</code> into the object.\nAsynchronous sinks.\nBegin the process of sending a value to the sink. Each …\nAsynchronous streams.\nPoll this <code>TryFuture</code> as if it were a <code>Future</code>.\nPoll this <code>TryStream</code> as if it were a <code>Stream</code>.\nA handle to an <code>Abortable</code> task.\nA registration handle for an <code>Abortable</code> task. Values of …\nA future/stream which can be remotely short-circuited …\nIndicator that the <code>Abortable</code> task was aborted.\nFuture for the <code>always_ready</code> function.\nFuture for the <code>and_then</code> method.\nAn owned dynamically typed <code>Future</code> for use in cases where …\nFuture for the <code>catch_unwind</code> method.\nThe output of the completed future\nThe output of the completed future\nCombines two different futures, streams, or sinks having …\nFuture for the <code>err_into</code> method.\nThe type of failures yielded by this future\nFuture for the <code>flatten</code> method.\nSink for the <code>flatten_sink</code> method.\nStream for the <code>flatten_stream</code> method.\nFuture for the <code>fuse</code> method.\nA future which tracks whether or not the underlying future …\nA future represents an asynchronous computation, commonly …\nA not-yet-completed future\nA not-yet-completed future\nAn extension trait for <code>Future</code>s that provides a variety of …\nA custom trait object for polling futures, roughly akin to …\nThe empty variant after the result of a <code>MaybeDone</code> has been …\nThe empty variant after the result of a <code>TryMaybeDone</code> has …\nFuture for the <code>inspect</code> method.\nFuture for the <code>inspect_err</code> method.\nFuture for the <code>inspect_ok</code> method.\nFuture for the <code>into_future</code> method.\nStream for the <code>into_stream</code> method.\nFuture for the <code>join</code> function.\nFuture for the <code>join3</code> function.\nFuture for the <code>join4</code> function.\nFuture for the <code>join5</code> function.\nFuture for the <code>join_all</code> function.\nFuture for the <code>lazy</code> function.\nFirst branch of the type\n<code>BoxFuture</code>, but without the <code>Send</code> requirement.\nA custom trait object for polling futures, roughly akin to …\nFuture for the <code>map</code> method.\nFuture for the <code>map_err</code> method.\nFuture for the <code>map_into</code> combinator.\nFuture for the <code>map_ok</code> method.\nFuture for the <code>map_ok_or_else</code> method.\nA future that may have completed.\nFuture for the <code>never_error</code> combinator.\nThe type of successful values yielded by this future\nFuture for the <code>ok_into</code> method.\nA future representing a value which may or may not be …\nFuture for the <code>or_else</code> method.\nThe type of value produced on completion.\nFuture for the <code>pending()</code> function.\nFuture for the <code>poll_fn</code> function.\nFuture for the <code>poll_immediate</code> function.\nFuture for the <code>ready</code> function.\nA future which sends its output to the corresponding …\nThe handle to a remote future returned by <code>remote_handle</code>. …\nSecond branch of the type\nFuture for the <code>select()</code> function.\nFuture for the <code>select_all</code> function.\nFuture for the <code>select_ok</code> function.\nFuture for the <code>shared</code> method.\nFuture for the <code>then</code> method.\nFuture for the <code>try_flatten</code> method.\nFuture for the <code>try_flatten_stream</code> method.\nA convenience for futures that return <code>Result</code> values that …\nAdapters specific to <code>Result</code>-returning futures\nFuture for the <code>try_join</code> function.\nFuture for the <code>try_join3</code> function.\nFuture for the <code>try_join4</code> function.\nFuture for the <code>try_join5</code> function.\nFuture for the <code>try_join_all</code> function.\nA future that may have completed with an error.\nFuture for the <code>try_select()</code> function.\nFuture for the <code>unit_error</code> combinator.\nA custom implementation of a future trait object for …\nFuture for the <code>unwrap_or_else</code> method.\nA weak reference to a <code>Shared</code> that can be upgraded much …\nCreates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …\nCreates a future that is always immediately ready with a …\nDrops the future represented by the given fat pointer.\nCreate a future that is immediately ready with an error …\nConvert an owned instance into a (conceptually owned) fat …\nReturns <code>true</code> if the underlying future should no longer be …\nJoins the result of two futures, waiting for them both to …\nSame as <code>join</code>, but with more futures.\nSame as <code>join</code>, but with more futures.\nSame as <code>join</code>, but with more futures.\nCreates a future which represents a collection of the …\nCreates a new future that allows delayed execution of a …\nWraps a future into a <code>MaybeDone</code>\nCreate a future that is immediately ready with a success …\nCreates a future which never resolves, representing a …\nAttempts to resolve the future to a final value, …\nCreates a new future wrapping around a function returning …\nCreates a future that is immediately ready with an Option …\nCreates a future that is immediately ready with a value.\nWaits for either one of two differently-typed futures to …\nCreates a new future which will select over a list of …\nCreates a new future which will select the first …\nJoins the result of two futures, waiting for them both to …\nSame as <code>try_join</code>, but with more futures.\nSame as <code>try_join</code>, but with more futures.\nSame as <code>try_join</code>, but with more futures.\nCreates a future which represents either a collection of …\nWraps a future into a <code>TryMaybeDone</code>\nPoll this <code>TryFuture</code> as if it were a <code>Future</code>.\nWaits for either one of two differently-typed futures to …\nSink for the <code>buffer</code> method.\nFuture for the <code>close</code> method.\nSink for the <code>drain</code> function.\nThe type of value produced by the sink when an error …\nSink that clones incoming items and forwards them to two …\nFuture for the <code>feed</code> method.\nFuture for the <code>flush</code> method.\nFuture for the <code>send</code> method.\nFuture for the <code>send_all</code> method.\nA <code>Sink</code> is a value into which other values can be sent, …\nSink for the <code>sink_err_into</code> method.\nAn extension trait for <code>Sink</code>s that provides a variety of …\nSink for the <code>sink_map_err</code> method.\nSink for the <code>unfold</code> function.\nSink for the <code>with</code> method.\nSink for the <code>with_flat_map</code> method.\nCreate a sink that will just discard all items given to it.\nFlush any remaining output and close this sink, if …\nFlush any remaining output from this sink.\nAttempts to prepare the <code>Sink</code> to receive a value.\nBegin the process of sending a value to the sink. Each …\nCreate a sink from a function which processes one item at …\nA handle to an <code>Abortable</code> task.\nA registration handle for an <code>Abortable</code> task. Values of …\nA future/stream which can be remotely short-circuited …\nIndicator that the <code>Abortable</code> task was aborted.\nFuture for the <code>all</code> method.\nStream for the <code>and_then</code> method.\nFuture for the <code>any</code> method.\nAn owned dynamically typed <code>Stream</code> for use in cases where …\nStream for the <code>buffer_unordered</code> method.\nStream for the <code>buffered</code> method.\nStream for the <code>catch_unwind</code> method.\nStream for the <code>chain</code> method.\nStream for the <code>chunks</code> method.\nFuture for the <code>collect</code> method.\nFuture for the <code>concat</code> method.\nFuture for the <code>count</code> method.\nStream for the <code>cycle</code> method.\nStream for the <code>empty</code> function.\nStream for the <code>enumerate</code> method.\nStream for the <code>err_into</code> method.\nThe type of failures yielded by this future\nStream for the <code>filter</code> method.\nStream for the <code>filter_map</code> method.\nStream for the <code>flat_map</code> method.\nStream for the <code>flat_map_unordered</code> method.\nStream for the <code>flatten</code> method.\nStream for the <code>flatten_unordered</code> method.\nFuture for the <code>fold</code> method.\nFuture for the <code>for_each</code> method.\nFuture for the <code>for_each_concurrent</code> method.\nFuture for the <code>forward</code> method.\nStream for the <code>fuse</code> method.\nA stream which tracks whether or not the underlying stream …\nAn unbounded queue of futures.\nA set of futures which may complete in any order.\nStream for the <code>inspect</code> method.\nStream for the <code>inspect_err</code> method.\nStream for the <code>inspect_ok</code> method.\nReader for the <code>into_async_read</code> method.\nStream for the <code>into_stream</code> method.\nValues yielded by the stream.\nStream for the <code>iter</code> function.\nPoll the first stream.\n<code>BoxStream</code>, but without the <code>Send</code> requirement.\nStream for the <code>map</code> method.\nStream for the <code>map_err</code> method.\nStream for the <code>map_ok</code> method.\nFuture for the <code>next</code> method.\nFuture for the <code>Peekable::next_if</code> method.\nFuture for the <code>Peekable::next_if_eq</code> method.\nThe type of successful values yielded by this future\nA stream which emits single element and then EOF.\nStream for the <code>or_else</code> method.\nFuture for the <code>Peekable::peek</code> method.\nFuture for the <code>Peekable::peek_mut</code> method.\nA <code>Stream</code> that implements a <code>peek</code> method.\nStream for the <code>pending()</code> function.\nStream for the <code>poll_fn</code> function.\nStream for the poll_immediate function.\nType to tell <code>SelectWithStrategy</code> which stream to poll next.\nStream for the <code>ready_chunks</code> method.\nStream for the <code>repeat</code> function.\nAn stream that repeats elements of type <code>A</code> endlessly by …\nError indicating a <code>SplitSink&lt;S&gt;</code> and <code>SplitStream&lt;S&gt;</code> were …\nPoll the second stream.\nStream for the <code>scan</code> method.\nStream for the <code>select()</code> function.\nAn unbounded set of streams\nFuture for the <code>select_next_some</code> method.\nStream for the <code>select_with_strategy()</code> function. See …\nStream for the <code>skip</code> method.\nStream for the <code>skip_while</code> method.\nA <code>Sink</code> part of the split pair\nA <code>Stream</code> part of the split pair\nA stream of values produced asynchronously.\nAn extension trait for <code>Stream</code>s that provides a variety of …\nFuture for the <code>into_future</code> method.\nStream for the <code>take</code> method.\nStream for the <code>take_until</code> method.\nStream for the <code>take_while</code> method.\nStream for the <code>then</code> method.\nFuture for the <code>try_all</code> method.\nFuture for the <code>try_any</code> method.\nStream for the <code>try_buffer_unordered</code> method.\nStream for the <code>try_buffered</code> method.\nStream for the <code>try_chunks</code> method.\nError indicating, that while chunk was collected inner …\nFuture for the <code>try_collect</code> method.\nFuture for the <code>try_concat</code> method.\nStream for the <code>try_filter</code> method.\nStream for the <code>try_filter_map</code> method.\nStream for the <code>try_flatten</code> method.\nStream for the <code>try_flatten_unordered</code> method.\nFuture for the <code>try_fold</code> method.\nFuture for the <code>try_for_each</code> method.\nFuture for the <code>try_for_each_concurrent</code> method.\nFuture for the <code>try_next</code> method.\nStream for the <code>try_ready_chunks</code> method.\nError indicating, that while chunk was collected inner …\nStream for the <code>try_skip_while</code> method.\nA convenience for streams that return <code>Result</code> values that …\nAdapters specific to <code>Result</code>-returning streams\nStream for the <code>try_take_while</code> method.\nStream for the <code>try_unfold</code> function.\nStream for the <code>unfold</code> function.\nFuture for the <code>unzip</code> method.\nStream for the <code>zip</code> method.\nCreates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …\nCreates a stream which contains no elements.\nAn unbounded set of futures.\nReturns <code>true</code> if the stream should no longer be polled.\nConverts an <code>Iterator</code> into a <code>Stream</code> which is always ready …\nCreates a stream of a single element.\nCreates a stream which never returns any elements.\nCreates a new stream wrapping a function returning …\nCreates a new stream that always immediately returns …\nAttempt to pull out the next value of this stream, …\nCreate a stream which produces the same item repeatedly.\nCreates a new stream that repeats elements of type <code>A</code> …\nThis function will attempt to pull items from both …\nAn unbounded set of streams\nConvert a list of streams into a <code>Stream</code> of results from …\nThis function will attempt to pull items from both …\nPoll this <code>TryStream</code> as if it were a <code>Stream</code>.\nCreates a <code>TryStream</code> from a seed and a closure returning a …\nCreates a <code>Stream</code> from a seed and a closure returning a …\nA set of futures which may complete in any order.\nOwned iterator over all futures in the unordered set.\nImmutable iterator over all the futures in the unordered …\nMutable iterator over all futures in the unordered set.\nMutable iterator over all futures in the unordered set.\nImmutable iterator over all futures in the unordered set.\nOwned iterator over all streams in the unordered set.\nImmutable iterator over all streams in the unordered set.\nMutable iterator over all streams in the unordered set.\nAn unbounded set of streams\nConvert a list of streams into a <code>Stream</code> of results from …\nA way of waking up a specific task.\nA synchronization primitive for task wakeup.\nThe context of an asynchronous task.\nA custom trait object for polling futures, roughly akin to …\nA custom trait object for polling futures, roughly akin to …\nThe <code>LocalSpawn</code> is similar to <code>Spawn</code>, but allows spawning …\nExtension trait for <code>LocalSpawn</code>.\nRepresents that a value is not ready yet.\nIndicates whether a value is available or if the current …\nA <code>RawWaker</code> allows the implementor of a task executor to …\nA virtual function pointer table (vtable) that specifies …\nRepresents that a value is immediately ready.\nThe <code>Spawn</code> trait allows for pushing futures onto an …\nAn error that occurred during spawning.\nExtension trait for <code>Spawn</code>.\nA custom implementation of a future trait object for …\nA <code>Waker</code> is a handle for waking up a task by notifying its …\nA <code>Waker</code> that is only valid for a given lifetime.\nDrops the future represented by the given fat pointer.\nConvert an owned instance into a (conceptually owned) fat …\nCreate a new <code>Waker</code> which does nothing when <code>wake()</code> is …\nGet a static reference to a <code>Waker</code> which does nothing when …\nSpawns a future that will be run to completion.\nSpawns a future that will be run to completion.\nIndicates that the associated task is ready to make …\nCreates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.\nCreates a reference to a <code>Waker</code> from a reference to …\nListens to keyboard key presses and calls the given …\nListens to keyboard key releases and calls the given …\nCreates a new <code>Stream</code> that produces the items sent from a …\nCreates a new <code>Stream</code> that produces the items sent from a …\nA subscription event.\nA stream of runtime events.\nThe hasher used for identifying subscriptions.\nA user interacted with a user interface in a window.\nThe events that will be produced by a <code>Subscription</code> with …\nThe description of a <code>Subscription</code>.\nA request to listen to external events.\nA registry of subscription streams.\nCreates a <code>Subscription</code> from a <code>Recipe</code> describing it.\nHashes the <code>Recipe</code>.\nReturns the different recipes of the <code>Subscription</code>.\nExecutes the <code>Recipe</code> and produces the stream of events of …\nThe <code>Event</code> describing the interaction.\nThe <code>event::Status</code> of the interaction.\nThe window holding the interface of the interaction.\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA simple cache that stores generated geometry to avoid …\nThe style used to fill geometry.\nThe region of a surface that can be used to draw geometry.\nThe kind of <code>Frame</code> this renderer supports.\nThe kind of geometry this renderer can draw.\nA fill which linearly interpolates colors along a …\nA <code>Gradient</code> color.\nA raster image that can be drawn.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA linear gradient interpolates colors along a direction …\nA sharp corner.\nAn immutable set of points that may or may not be …\nA renderer capable of drawing some <code>Self::Geometry</code>.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe style of a stroke.\nThe coloring style of some drawing.\nA raster image that can be drawn.\nA bunch of text that can be drawn to a canvas\nThe border radii of the image\nThe border radius for the svg\nThe color of the text\nThe <code>Color</code> filter to be applied to the <code>Svg</code>.\nThe contents of the text\nDraws the given <code>Self::Geometry</code>.\nFill <code>Geometry</code> with a certain style.\nThe filter method of the image.\nThe font of the text\nDraw and generate geometry.\nThe handle of the image.\nThe handle of the <code>Svg</code>.\nThe horizontal alignment of the text\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe line height of the text.\nThe shape to be used at the corners of paths or basic …\nCreates a new <code>Self::Frame</code>.\nThe offset of <code>LineDash::segments</code> to start the pattern.\nThe opacity of the image.\nThe opacity of the <code>Svg</code>.\nBuild different kinds of 2D shapes.\nThe position of the text relative to the alignment …\nThe rotation to be applied to the image; on its center.\nThe rotation to be applied to the image; on its center.\nThe fill rule defines how to determine what is inside and …\nThe alternating lengths of lines and gaps which describe …\nThe shaping strategy of the text.\nThe size of the text\nIf set to <code>true</code>, the image will be snapped to the pixel …\nCreate lines from a <code>Path</code> and assigns them various …\nThe color or gradient of the fill.\nThe color or gradient of the stroke.\nThe vertical alignment of the text\nThe distance between the two edges of the stroke.\nThe style used to fill geometry.\nA <code>Gradient</code> color.\nThe fill rule defines how to determine what is inside and …\nA solid <code>Color</code>.\nThe coloring style of some drawing.\nThe fill rule defines how to determine what is inside and …\nThe color or gradient of the fill.\nThe internal implementation of a <code>Frame</code>.\nThe region of a surface that can be used to draw geometry.\nA segment of a differentiable curve.\nA <code>Path</code> builder.\nAn immutable set of points that may or may not be …\nBuild and draw curves.\nThe center of the arc.\nThe end of the segment’s angle, clockwise rotation from …\nThe radius of the arc.\nThe start of the segment’s angle, clockwise rotation …\nA segment of a differentiable curve.\nAn elliptical <code>Arc</code>.\nThe center of the arc.\nThe center of the arc.\nThe end of the segment’s angle, clockwise rotation from …\nThe end of the segment’s angle, clockwise rotation from …\nThe radii of the arc’s ellipse. The horizontal and …\nThe radius of the arc.\nThe clockwise rotation of the arc’s ellipse.\nThe start of the segment’s angle, clockwise rotation …\nThe start of the segment’s angle, clockwise rotation …\nFlag parameters for arcs as described by the SVG …\nAn alias for <code>usize</code>.\nA view over a contiguous storage of custom attributes.\nInterface for objects storing custom attributes associated …\nAn alias for a slice of <code>f32</code> values.\nA beveled corner is to be used to join path segments. The …\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nThe stroke for each sub-path does not extend beyond its …\nID of a control point in a path.\nID of an endpoint point in a path.\nRepresents an event or edge of path.\nRefers to an event in a path.\nThe fill rule defines how to determine what is inside and …\nA path event representing endpoints and control points as …\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nLine cap as defined by the SVG specification.\nLine join as defined by the SVG specification.\nA sharp corner is to be used to join path segments.\nSame as a miter join, but if the miter limit is exceeded, …\nAn empty attribute slice.\nA simple path data structure.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nThe commands of a path encoded in a single array using IDs …\nA view over <code>PathCommands</code>.\nA path event representing endpoints and control points as …\nA view on a <code>Path</code>.\nA view over a sequence of endpoints forming a polygon.\nInterface for types types (typically endpoints and control …\nInterface for objects storing endpoints and control points …\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nAt each end of each sub-path, the shape representing the …\nA round corner is to be used to join path segments.\nThe positive or negative side of a vector or segment.\nAt the end of each sub-path, the shape representing the …\nThe two possible orientations for the edges of a shape to …\nPath building utilities.\nA generic representation for paths that allow more control …\nReturns the endpoint’s custom attributes as a slice of …\nTools to iterate over paths.\nOf the four candidate arc sweeps, two will represent an …\nf32 version of the lyon_geom types used everywhere. Most …\nReturns the number of float attributes per endpoint.\nThe default path data structure.\nA container to store multiple paths contiguously.\nSpecific path types for polygons.\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\n<code>lyon_path</code> traits reexported here for convenience.\nThe radius of each corner of a rounded rectangle.\nBuilds a path.\nA Builder that approximates curves with successions of …\nA convenience wrapper for <code>PathBuilder</code> without custom …\nThe base path building interface.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nBuilds a path with a transformation applied.\nImplements an SVG-like building interface on top of a …\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nEnds the current sub path.\nAdds an horizontal line segment.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nAdds a vertical line segment.\nA view on a <code>PathCommands</code> buffer and two slices for …\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nThe commands of a path encoded in a single array using IDs …\nBuilds path commands.\nA view over <code>PathCommands</code>.\nAn iterator of <code>PathEvent</code>.\nAn angle in radians\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nA 2d curve segment defined by four points: the beginning …\nAn infinite line defined by a point and a vector.\nA line defined by the equation …\nA linear segment.\nA 2d curve segment defined by three points: the beginning …\nAlias for <code>euclid::default::Rotation2D</code>\nCommon APIs to segment types.\nAn elliptic arc curve segment using the SVG’s end-point …\nAlias for <code>euclid::default::Transform2D</code>\nAlias for <code>euclid::default::Translation2D</code>\nA 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.\nReturn the curve after the split point.\nAngle in radians\nCompute the length of the segment using a flattened …\nElliptic arc related maths and tools.\nReturn the curve before the split point.\nSample the derivative at t (expecting t between 0 and 1).\nSwap the direction of the segment.\nApproximates the curve with sequence of line segments.\nStart of the curve.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nOf the four candidate arc sweeps, two will represent an …\nShorthand for <code>Point::new(x, y)</code>.\nSample the curve at t (expecting t between 0 and 1).\nShorthand for <code>Size::new(x, y)</code>.\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nEnd of the curve.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nFlattening iterator for arcs.\nAn elliptic arc curve segment using the SVG’s end-point …\nOf the four candidate arc sweeps, two will represent an …\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nA string with a fixed capacity.\nA vector with a fixed capacity.\nError value indicating insufficient capacity\nA draining iterator for <code>ArrayVec</code>.\nBy-value iterator for <code>ArrayVec</code>.\nThe polynomial form of a cubic bézier segment.\nA 2d curve segment defined by four points: the beginning …\nAn angle in radians\nA 2d vector of booleans, useful for component-wise logic …\nA 3d vector of booleans, useful for component-wise logic …\nA 2d axis aligned rectangle represented by its minimum and …\nAn axis aligned 3D box represented by its minimum and …\nHomogeneous vector in 3D space.\nA one-dimensional distance, with value represented by <code>T</code> …\nA 2d Point tagged with a unit.\nA 3d Point tagged with a unit.\nA 2d Rectangle optionally tagged with a unit.\nA rigid transformation. All lengths are preserved under …\nA transform that can represent rotations in 2d, …\nA transform that can represent rotations in 3d, …\nA scaling factor between two different units of …\nA group of 2D side offsets, which correspond to …\nA 2d size tagged with a unit.\nA 3d size tagged with a unit.\nA 2d transform represented by a column-major 3 by 3 …\nA 3d transform stored as a column-major 4 by 4 matrix.\nA 2d transformation from a space to another that can only …\nA 3d transformation from a space to another that can only …\nTrait for basic trigonometry functions, so they can be …\nThe default unit.\nA 2d Vector tagged with a unit.\nA 3d Vector tagged with a unit.\nAngle in radians\nUtilities for testing approximate ordering - especially …\nShorthand for …\nShorthand for <code>BoolVector2D { x, y }</code>.\nShorthand for <code>BoolVector3D { x, y, z }</code>.\nA set of aliases for all types, tagged with the default …\nThe extent of the element in the <code>U</code> units along the <code>z</code> axis.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis.\nComponent multiplied by the imaginary number <code>i</code>.\nComponent multiplied by the imaginary number <code>j</code>.\nComponent multiplied by the imaginary number <code>k</code>.\nA one-dimensional length, tagged with its units.\nShorthand for <code>Point2D::new(x, y)</code>.\nShorthand for <code>Point3D::new(x, y)</code>.\nThe real part.\nShorthand for …\nShorthand for <code>Size2D::new(w, h)</code>.\nShorthand for <code>Size3D::new(w, h, d)</code>.\nConvenience constructor.\nConvenience constructor.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>z</code> (traditionally, depth) coordinate.\nTrait for testing approximate equality\nDefault epsilon value\nReturns <code>true</code> if this object is approximately equal to the …\nAngle in radians\nThe extent of the element in the <code>U</code> units along the <code>z</code> axis.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis.\nComponent multiplied by the imaginary number <code>i</code>.\nComponent multiplied by the imaginary number <code>j</code>.\nComponent multiplied by the imaginary number <code>k</code>.\nThe real part.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>z</code> (traditionally, depth) coordinate.\nDefines the smallest integer equal or greater than the …\nDefines the biggest integer equal or lower than the …\nDefines the nearest integer value to the original value.\nRounds to the smallest integer equal or greater than the …\nRounds to the biggest integer equal or lower than the …\nRounds to the nearest integer value.\nA flattening iterator for quadratic bézier segments.\nA flattening iterator for quadratic bézier segments.\nThe polynomial form of a quadratic bézier segment.\nA 2d curve segment defined by three points: the beginning …\nCommon APIs to segment types.\nReturn the curve after the split point.\nCompute the length of the segment using a flattened …\nReturn the curve before the split point.\nSample the derivative at t (expecting t between 0 and 1).\nSwap the direction of the segment.\nApproximates the curve with sequence of line segments.\nStart of the curve.\nSample the curve at t (expecting t between 0 and 1).\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nEnd of the curve.\nAngle between vectors v1 and v2 (oriented clockwise …\nAn iterator that consumes <code>Event</code> iterator and yields …\nAn iterator that consumes an iterator of <code>Point</code>s and …\nAn extension trait for <code>PathEvent</code> iterators.\nApplies a 2D transform to a path iterator and yields the …\nAn angle in radians (f32).\nAlias for <code>euclid::default::Box2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Point2D&lt;f32&gt;</code>.\nAlias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Scale&lt;f32&gt;</code>\nAlias for <code>euclid::default::Size2D&lt;f32&gt;</code>.\nAlias for <code>euclid::default::Transform2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Translation2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Point2D&lt;f32&gt;</code>.\nAngle in radians\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nShorthand for <code>Point::new(x, y)</code>.\nShorthand for <code>Size::new(x, y)</code>.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nA simple path data structure.\nA view on a <code>Path</code>.\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nA Builder that appends a path to an existing PathBuffer.\nA Builder that appends a path to an existing PathBuffer, …\nIterator over the paths in a <code>PathBufferSlice</code>.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator of <code>Event&lt;EndpointId, ()&gt;</code>.\nAn iterator of <code>PathEvent</code>.\nA view over a sequence of endpoints forming a polygon.\nAn iterator of <code>IdEvent</code> for <code>Polygon</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, ()&gt;</code>.\nBuilds a path.\nThe base path building interface.\nAn extension trait for <code>PathEvent</code> iterators.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nEnds the current sub path.\nAdds an horizontal line segment.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nAdds a vertical line segment.\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA <code>Gradient</code> color.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA sharp corner.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe style of a stroke.\nThe coloring style of some drawing.\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe shape to be used at the corners of paths or basic …\nThe offset of <code>LineDash::segments</code> to start the pattern.\nThe alternating lengths of lines and gaps which describe …\nThe color or gradient of the stroke.\nThe distance between the two edges of the stroke.\nA fill which linearly interpolates colors along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction …\nPacked <code>Gradient</code> data for use in shader code.\nThe absolute ending position of the gradient.\nCreates a new <code>Packed</code> gradient for use in shader code.\nThe absolute starting position of the gradient.\n<code>ColorStop</code>s along the linear gradient direction.\nA raster or vector image.\nA raster image.\nA vector image.\nTries to load an image by its <code>Handle</code>.\nThe bounds of the image.\nThe bounds of the image.\nThe image handle\nThe handle of a vector image.\nPixel is 8-bit alpha\n<code>AnimationDecoder</code> trait\nAn Image in AVIF Format\nPixel contains 8-bit B, G and R channels\nPixel is 8-bit BGR with an alpha channel\nAn Image in BMP Format\nThe number of channels of this pixel type.\nA string that can help to interpret the meaning each …\nThis pixel has the format of one of the predefined …\nPixel is 8-bit CMYK\nAn enumeration over supported color types and bit depths\nInputs to <code>ImageBuffer::copy_from_color_space</code>.\nThe maximum value for this type of primitive within the …\nThe minimum value for this type of primitive within the …\nAn Image in DDS Format\nAn error was encountered while decoding.\nThe delay of a frame relative to the previous one.\nA Dynamic Image\nTypes which are safe to treat as an immutable byte slice …\nAn error was encountered while encoding.\nContains the error value\nAn enumeration of color types encountered in image formats.\nAn Image in farbfeld Format\nA flat buffer over a (multi channel) image.\nA single animation frame\nAn implementation dependent iterator, reading the frames …\nA trait for manipulating images.\nTrait to inspect an image.\nAn Image in GIF Format\nSendable grayscale + alpha channel image buffer\nSendable grayscale image buffer\nAn Image in Radiance HDR Format\nAn Image in ICO Format\nGeneric image buffer\nThe trait that all decoders implement\nSpecialized image decoding not be supported by all formats\nThe trait all encoders implement\nThe generic error type for image operations.\nAn enumeration of supported image formats. Not all formats …\nEach pixel in this image is 16-bit Luma\nEach pixel in this image is 8-bit Luma")