searchState.loadedDescShard("atomicwrites", 0, "Overwrite files silently.\nCreate a file and write to it atomically, in a callback.\nDon’t overwrite files. <code>AtomicFile.write</code> will raise …\nRepresents an error raised by <code>AtomicFile.write</code>.\nThe error originated in the library itself, while it was …\nWhether to allow overwriting if the target file exists.\nThe error originated in the user-supplied callback.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMove <code>src</code> to <code>dst</code>. An error will be returned if <code>dst</code> exists.\nHelper for writing to the file at <code>path</code> atomically, in …\nLike <code>AtomicFile::new</code>, but the temporary file is written to …\nGet the target filepath.\nMove <code>src</code> to <code>dst</code>. If <code>dst</code> exists, it will be silently …\nOpen a temporary file, call <code>f</code> on it (which is supposed to …\nOpen a temporary file with custom <code>OpenOptions</code>, call <code>f</code> on …")