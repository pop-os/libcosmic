searchState.loadedDescShard("iced_core", 0, "The core library of Iced.\nThe black color.\nThe background of some element.\nA color in the <code>sRGB</code> color space.\nA solid color.\nScale as big as it can be without needing to crop or hide …\nThe strategy used to fit the contents of a widget to its …\nScale the image to cover all of the bounding box, cropping …\nDegrees\nA generic <code>Widget</code>.\nDistort the image so the widget is 100% covered without …\nFill all the remaining space\nFill a portion of the remaining space relative to other …\nFill a fixed amount of space\nThe element will float while rotating. The layout will be …\nLinearly interpolate between several colors.\nThe hasher used to compare layouts.\nA <code>Transformation</code> that preserves whatever is transformed.\nA rectangle starting at <code>Point::ORIGIN</code> with infinite width …\nA <code>Size</code> with infinite width and height.\nThe strategy used to fill space in a specific dimension.\nDon’t resize or scale the image at all.\nThe origin (i.e. a <code>Point</code> at (0, 0)).\nThe amount of radians in half a circle.\nAn amount of logical pixels.\nA 2D point.\nThe range of degrees of a circle.\nThe range of radians of a circle.\nRadians\nAn axis-aligned rectangle.\nThe strategy used to rotate the content.\nScale the image down if it’s too big for the space, but …\nA shadow.\nA connection to the state of a shell.\nFill the least amount of space\nAn amount of space in 2 dimensions.\nA <code>SmolStr</code> is a string type that has the following …\nThe element will be solid while rotating. The layout will …\nA color with no opacity.\nA 2D transformation matrix.\nA <code>Size</code> with a width and height of 1 unit.\nA 2D vector.\nThe white color.\nZero pixels.\nA <code>Size</code> with zero width and height.\nThe zero <code>Vector</code>.\nTransparency, 0.0 - 1.0\nAlign and position widgets.\nApplies the <code>Rotation</code> to the given <code>Size</code>, returning the …\nReturns whether the widgets of the current application …\nReturns the area of the <code>Rectangle</code>.\nReturns a reference to the <code>Widget</code> of the <code>Element</code>,\nReturns a mutable reference to the <code>Widget</code> of the <code>Element</code>,\nBlue component, 0.0 - 1.0\nThe blur radius of the shadow.\nDraw lines around containers.\nReturns the <code>Point</code> at the center of the <code>Rectangle</code>.\nReturns the X coordinate of the <code>Point</code> at the center of the …\nReturns the Y coordinate of the <code>Point</code> at the center of the …\nAccess the clipboard.\nThe color of the shadow.\nCreates a <code>Color</code> with shorter and cleaner syntax.\nReturns true if the given <code>Point</code> is contained in the …\nReturns true if the given <code>Point</code> is contained in the …\nReturns the angle of the <code>Rotation</code> in <code>Degrees</code>.\nComputes the distance to another <code>Point</code>.\nAdapts the <code>Length</code> so it can contain the other <code>Length</code> and …\nHandle events of a user interface.\nExpands the <code>Rectangle</code> a given amount.\nExpands this <code>Size</code> by the given amount.\nMarks the <code>Element</code> as <em>to-be-explained</em>.\nReturns the <em>fill factor</em> of the <code>Length</code>.\nAttempt to apply the given fit for a content size within …\nReturns the “fluid” variant of the <code>Length</code>.\nLoad and use fonts.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Color</code> from its linear RGBA components.\nCreates a <code>Color</code> from its RGB components.\nCreates a <code>Color</code> from its RGB8 components.\nCreates a <code>Color</code> from its RGBA components.\nCreates a <code>Color</code> from its RGB8 components and an alpha …\nGreen component, 0.0 - 1.0\nColors that transition progressively.\nHeight of the rectangle.\nThe height.\nWidget and Window IDs.\nLoad and draw raster graphics.\nComputes the intersection with the given <code>Rectangle</code>.\nReturns whether the <code>Rectangle</code> intersects with the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>Color</code> into its linear values.\nConverts the <code>Color</code> into its RGBA8 equivalent.\nInvalidates the current application layout.\nInvalidates the current application widgets.\nReturns the inverted <code>Color</code>.\nInverts the <code>Color</code> in-place.\nReturns true if the <code>Shell</code> contains no published messages\nReturns <code>true</code> iff the <code>Length</code> is either <code>Length::Fill</code> or\nReturns whether the current layout is invalid or not.\nReturns true if the current <code>Rectangle</code> is completely within …\nReturns true if the current <code>Rectangle</code> is completely within …\nListen to keyboard events.\nPosition your widgets properly.\nApplies a transformation to the produced message of the …\nReturns the maximum of each component of this size and …\nMerges the current <code>Shell</code> with another one by applying the …\nReturns the minimum of each component of this size and …\nHandle mouse events.\nCreates a new <code>Element</code> containing the given <code>Widget</code>.\nCreates a new <code>Color</code>.\nCreates a new <code>Point</code> with the given coordinates.\nCreates a new <code>Rectangle</code> with its top-left corner in the …\nCreates a new <code>Shell</code> with the provided buffer of messages.\nCreates a new  <code>Size</code> with the given width and height.\nCreates a new <code>Vector</code> with the given components.\nConstructs inline variant of <code>SmolStr</code>.\nConstructs a <code>SmolStr</code> from a statically allocated string.\nThe offset of the shadow.\nCreates an orthographic projection.\nDisplay interactive elements on top of other widgets.\nSpace stuff around the perimeter.\nParses a <code>Color</code> from a hex string.\nReturns the position of the top left corner of the …\nPublish the given <code>Message</code> for an application to process it.\nRed component, 0.0 - 1.0\nReturns the angle of the <code>Rotation</code> in <code>Radians</code>.\nReturns a mutable reference to the angle of the <code>Rotation</code> …\nReturns the request a redraw should happen, if any.\nWrite your own renderer.\nRequests a new frame to be drawn.\nTriggers the given function if the layout is invalid, …\nRotates the <code>Rectangle</code> and returns the smallest <code>Rectangle</code> …\nRotates the given <code>Size</code> and returns the minimum <code>Size</code> …\nCreates a uniform scaling transformation.\nScales the alpha channel of the <code>Background</code> by the given …\nScales the alpha channel of the <code>Color</code> by the given factor.\nReturns the scale factor of the <code>Transformation</code>.\nShrinks the <code>Rectangle</code> a given amount.\nReturns the <code>Size</code> of the <code>Rectangle</code>.\nSnaps the <code>Rectangle</code> to <strong>unsigned</strong> integer coordinates.\nLoad and draw vector graphics.\nDraw and interact with text.\nUse the built-in theme and styles.\nKeep track of time, both in native and web platforms!\nCalculates the line in which the angle intercepts the …\nBuild touch events.\nCreates a translate transformation.\nReturns the translation of the <code>Transformation</code>.\nComputes the union with the given <code>Rectangle</code>.\nCreate custom widgets and operate on them.\nWidth of the rectangle.\nThe width.\nBuild window-based GUI applications.\nCreates a new square <code>Rectangle</code> with the center at the …\nCreates a new <code>Rectangle</code> with its top-left corner at the …\nCreates a new axis-aligned <code>Rectangle</code> from the given …\nThe X coordinate.\nX coordinate of the top-left corner.\nThe X component of the <code>Vector</code>\nThe Y coordinate.\nY coordinate of the top-left corner.\nThe Y component of the <code>Vector</code>\nAlignment on the axis of a container.\nAlign bottom\nAlign at the center of the axis.\nHorizontally centered\nVertically centered\nAlign at the end of the axis.\nThe horizontal <code>Alignment</code> of some resource.\nAlign left\nAlign right\nAlign at the start of the axis.\nAlign top\nThe vertical <code>Alignment</code> of some resource.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA border.\nThe border radii for the corners of a graphics primitive …\nCreates a new <code>Radius</code> with the given value as bottom left …\nSets the bottom left and bottom right values of the <code>Radius</code>.\nCreates a new <code>Radius</code> with the given bottom left value.\nSets the bottom left value of the <code>Radius</code>.\nBottom left radius\nCreates a new <code>Radius</code> with the given bottom right value.\nSets the bottom right value of the <code>Radius</code>.\nBottom right radius\nCreates a new <code>Border</code> with the given <code>Color</code>.\nSets the <code>Color</code> of the <code>Border</code>.\nThe color of the border.\nReturns the argument unchanged.\n[ radi.top_left, radi.top_right, radi.bottom_right, …\n[ radi.top_left, radi.top_right, radi.bottom_right, …\nReturns the argument unchanged.\n[ radi.top_left, radi.top_right, radi.bottom_right, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Radius</code> with the given value as top left and …\nSets the top left and bottom left values of the <code>Radius</code>.\nCreates a new <code>Radius</code> with the same value for each corner.\nCreates a new <code>Radius</code> with the same value for each corner.\nThe <code>Radius</code> of the border.\nCreates a new <code>Radius</code> with the given value as top right and …\nSets the top right and bottom right values of the <code>Radius</code>.\nCreates a new <code>Border</code> with the given <code>Radius</code>.\nSets the <code>Radius</code> of the <code>Border</code>.\nCreates a new <code>Radius</code> with the given value as top left and …\nSets the top left and top right values of the <code>Radius</code>.\nCreates a new <code>Radius</code> with the given top left value.\nSets the top left value of the <code>Radius</code>.\nTop left radius\nCreates a new <code>Radius</code> with the given top right value.\nSets the top right value of the <code>Radius</code>.\nTop right radius\nCreates a new <code>Border</code> with the given <code>width</code>.\nSets the width of the <code>Border</code>.\nThe width of the border.\nA buffer for short-term storage and transfer within and …\nA list of DnD destination rectangles.\nSource of a DnD operation.\nThe kind of <code>Clipboard</code>.\nA null implementation of the <code>Clipboard</code> trait.\nThe primary clipboard.\nThe standard clipboard.\nA surface is the source of the DnD operation.\nA widget is the source of the DnD operation.\nAppends the list of DnD destination rectangles to the …\nDowncast <code>element</code> to concrete type <code>Element&lt;(), T, R&gt;</code>\nDowncast <code>element</code> to concrete type <code>Element&lt;(), T, R&gt;</code>\nEnds a DnD operation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the list of DnD destination rectangles. This …\nCreates a new <code>DndDestinationRectangles</code>.\nReads the current content of the primary <code>Clipboard</code>.\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nPushes a new rectangle to the list of DnD destination …\nReads the current content of the <code>Clipboard</code> as text.\nReads the current content of the <code>Clipboard</code>.\nConsider using <code>read_data</code> instead Reads the current content …\nReads the current content of the primary <code>Clipboard</code>.\nStarts a DnD operation.\nRequest window size\nSet the final action for the DnD operation. Only should be …\nStarts a DnD operation. icon surface is a tuple of the …\nRegisters Dnd destinations\nCreates a new <code>DndDestinationRectangles</code> with the given …\nWrites the given text contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nAn Accesskit event for a specific Accesskit Node in an …\nThe <code>Event</code> was handled and processed by a widget.\nA DnD event.\nA user interface event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event\nA mouse event\nA platform specific event\nPlatform specific events\nThe status of an <code>Event</code> after being processed.\nA touch event\nA window event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMerges two <code>Status</code> into one.\nGlyphs in cursive fonts generally use a more informal …\nA non-monospaced sans-serif font with normal <code>Weight</code>.\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font.\nA monospaced font with normal <code>Weight</code>.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nThe width of some text.\nThe style of some text.\nThe weight of some text.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nCreates a non-monospaced <code>Font</code> with the given <code>Family::Name</code> …\nA point along the gradient vector where the specified <code>color</code>…\nA fill which transitions colors progressively along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction at …\nAdds a new <code>ColorStop</code>, defined by an offset and a color, to …\nAdds multiple <code>ColorStop</code>s to the gradient.\nHow the <code>Gradient</code> is angled within its bounds.\nThe color of the gradient at the specified <code>offset</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Linear</code> gradient with the given angle in …\nOffset along the gradient vector.\nScales the alpha channel of the <code>Gradient</code> by the given …\nScales the alpha channel of the <code>Linear</code> gradient by the …\n<code>ColorStop</code>s along the linear gradient path.\na custom id, which is equal to any <code>Id</code> with a matching …\nThe identifier of a generic widget.\nSimilar to PartialEq, but only intended for use when …\nInternal representation of an <code>Id</code>.\nXXX Do not use this as an id for an accessibility node, it …\na unique id\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nget window node id that won’t conflict with other node …\nA cheaply cloneable and sliceable chunk of contiguous …\nA handle pointing to some encoded image bytes in-memory.\nImage filtering strategy.\nA handle of some image data.\nThe image Handle to be displayed. Iced exposes its own …\nThe unique identifier of some <code>Handle</code> data.\nA raster image that can be drawn.\nBilinear interpolation.\nNearest neighbor.\nA file handle. The image data will be read from the file …\nA <code>Renderer</code> that can render raster graphics.\nA handle pointing to decoded image pixels in RGBA format.\nThe border radii of the image\nClears the buffer, removing all data.\nCreates <code>Bytes</code> instance from slice, by copying it.\nDraws an image with the given <code>Handle</code> and inside the …\nSets the filter method of the <code>Image</code>.\nThe filter method of the image.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an image <code>Handle</code> containing the encoded image data …\nCreate Bytes with a buffer whose lifetime is controlled …\nCreates an image <code>Handle</code> pointing to the image of the given …\nCreates an image <code>Handle</code> containing the decoded image …\nCreates a new <code>Bytes</code> from a static slice.\nThe handle of the image.\nReturns the unique identifier of the <code>Handle</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the <code>Bytes</code> has a length of 0.\nReturns true if this is the only reference to the data and …\nReturns the number of bytes contained in this <code>Bytes</code>.\nReturns the dimensions of an image for the given <code>Handle</code>.\nCreates a new empty <code>Bytes</code>.\nCreates a new <code>Image</code> with the given handle.\nSets the opacity of the <code>Image</code>.\nThe opacity of the image.\nSets the rotation of the <code>Image</code>.\nThe rotation to be applied to the image; on its center.\nReturns a slice of self for the provided range.\nReturns a slice of self that is equivalent to the given …\nSets whether the <code>Image</code> should be snapped to the pixel grid.\nIf set to <code>true</code>, the image will be snapped to the pixel …\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nShortens the buffer, keeping the first <code>len</code> bytes and …\nTry to convert self into <code>BytesMut</code>.\nThe height of the image.\nThe id of this handle.\nThe pixels.\nThe width of the image.\nThe “alt” key.\nThe Caps Lock key\nThe “command” key.\nThe “control” key.\nA keyboard event.\nA keyboard key was pressed.\nA keyboard key was released.\nThe “windows” key on Windows, “command” key on …\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe “shift” key.\nThe standard group of keys on the keyboard.\nGet a flags value with all known bits set.\nReturns true if the <code>ALT</code> key is pressed in the <code>Modifiers</code>.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns true if a “command key” is pressed in the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns true if the <code>CTRL</code> key is pressed in the <code>Modifiers</code>.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nReturns true if the “jump key” is pressed in the …\nIdentify keyboard keys.\nReturns true if the <code>LOGO</code> key is pressed in the <code>Modifiers</code>.\nReturns true if the “command key” is pressed on a …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns true if the <code>SHIFT</code> key is pressed in the <code>Modifiers</code>.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe key pressed with all keyboard modifiers applied, …\nThe key released with all keyboard modifiers applied, …\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe physical key pressed.\nThe physical key released.\nThe text produced by the key press, if any.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nRedo or repeat an action.\nFound on Sun’s USB keyboard.\nInitiate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nThe Application switch key, which provides a list of …\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n↓\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n←\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n→\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\n↑\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nUsed to remove the character to the left of the cursor. …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nNavigate to previous content or page in current history. (…\nSome laptops place this key to the left of the ↑ key.\nOpen the list of browser favorites. (…\nNavigate to next content or page in current history. (…\nSome laptops place this key to the right of the ↑ key.\nGo to the user’s preferred home page. (…\nThe “home” button on Android.\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe <code>Caps Lock</code> (Capital) key.\nCapsLock or ⇪\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nCode representing the location of a physical key.\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nShow the application’s context menu. This key is …\nThe application context menu key, which is typically found …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nConvert the current input method sequence.\nJapanese: 変 (henkan)\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nFound on Sun’s USB keyboard.\nThe Cursor Select key.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nFound on Sun’s USB keyboard.\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nUsed to delete the character to the right of the cursor. …\n⌦. The forward delete key. Note that on Apple keyboards, …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nToggle removable media to eject (open) and insert (close) …\nEject or ⏏. This key is placed in the function section …\nThe End key, used with keyboard entry to go to the end of …\nPage Down, End, or ↘\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\nEnter or ↵. Labeled Return on Apple keyboards.\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nThe <code>Esc</code> key. This key was originally used to initiate an …\nEsc or ⎋\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFound on Sun’s USB keyboard.\nThe Function switch <code>Fn</code> key. Activating this key …\nFn This is typically a hardware key that does not generate …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nOpen a help dialog or toggle display of help information. (…\nHelp. Not present on standard PC keyboards.\nThe Hibernate key. This key saves the current state of the …\nThe Hiragana (Japanese Kana characters) key.\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana/Katakana toggle key. (…\nThe Home key, used with keyboard entry, to go to start of …\nHome or ↖\nToggle display of information about currently selected …\nToggle between text modes for insertion or overtyping. (…\nInsert or Ins. Not present on Apple keyboards.\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kanji (Japanese name for ideographic characters of …\nThe Katakana (Japanese Kana characters) key.\nUse for dedicated カタカナ key found on some Japanese …\nA key on the keyboard.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nA macOS “scancode”.\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nA named key.\nA key with an established name.\nContains the platform-native physical key identifier.\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nAccept current input method sequence without conversion in …\nJapanese: 無変換 (muhenkan)\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nOn the Mac, this is used for the numpad Clear key.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nFound on Sun’s USB keyboard.\nScroll down or display next page of content.\nPage Down, PgDn, or ⇟\nScroll up or display previous page of content.\nPage Up, PgUp, or ⇞\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nFound on Sun’s USB keyboard.\nPause the current state or application (as appropriate).\nPause Break\n. on a US keyboard.\nRepresents the location of a physical key.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThis key is placed in the function section on some Apple …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nInitiate print-screen function.\nPrtScr SysRq or Print Screen\nThe properties (Props) key.\nFound on Sun’s USB keyboard.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nToggle between scrolling and cursor movement modes.\nScroll Lock\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\nUsed in text to insert a space between words. Usually …\n  (space)\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nThe Horizontal Tabulation <code>Tab</code> key.\nTab or ⇥\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nFound on Sun’s USB keyboard.\nAn unidentified key.\nAn unidentified code.\nThis variant is used when the key cannot be translated to …\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA Windows “scancode”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nConvert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe bounds of a <code>Node</code> and its children, using absolute …\nA set of size constraints for layouting.\nNo limits\nThe bounds of an element and its children.\nAligns the <code>Node</code> in the given space.\nMutable reference version of <code>Self::align</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nReturns the bounds of the <code>Node</code>.\nReturns the bounds of the <code>Layout</code>.\nReturns the children of the <code>Node</code>.\nReturns an iterator over the <code>Layout</code> of the children of a …\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nCreates a new <code>Node</code> that wraps a single child with some …\nDistribute elements using a flex-based layout.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nApplies a height constraint to the current <code>Limits</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemoves the minimum width constraint for the current <code>Limits</code>…\nReturns the maximum <code>Size</code> of the <code>Limits</code>.\nApplies a maximum height constraint to the current <code>Limits</code>.\nApplies a maximum width constraint to the current <code>Limits</code>.\nReturns the minimum <code>Size</code> of the <code>Limits</code>.\nApplies a minimum height constraint to the current <code>Limits</code>.\nApplies a minimum width constraint to the current <code>Limits</code>.\nMoves the <code>Node</code> to the given position.\nMutable reference version of <code>Self::move_to</code>.\nCreates new <code>Limits</code> with the given minimum and maximum <code>Size</code>.\nCreates a new <code>Node</code> with the given <code>Size</code>.\nCreates a new <code>Layout</code> for the given <code>Node</code> at the origin.\nProduces a <code>Node</code> with two children nodes one right next to …\nComputes the <code>Node</code> that fits the <code>Limits</code> given some width, …\nReturns the position of the <code>Layout</code>.\nComputes a <code>padded</code> <code>Node</code> with a positioning step.\nComputes the resulting <code>Size</code> that fits the <code>Limits</code> given …\nShrinks the current <code>Limits</code> by the given <code>Size</code>.\nReturns the <code>Size</code> of the <code>Node</code>.\nComputes the resulting <code>Node</code> that fits the <code>Limits</code> given …\nTranslates the <code>Node</code> by the given translation.\nTranslates the <code>Node</code> by the given translation.\nThe virtual offset of the layout. May represent the scroll …\nApplies a width constraint to the current <code>Limits</code>.\nCreates a new <code>Node</code> with the given <code>Size</code> and children.\nCreates a new <code>Layout</code> for the given <code>Node</code> with the provided …\nReturns a new layout with the virtual offset\nThe main axis of a flex layout.\nThe horizontal axis\nThe vertical axis\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nComputes the flex layout with the given axis and limits, …\nThe cursor has a defined position.\nThe back mouse button.\nThe button of a mouse.\nA mouse button was pressed.\nA mouse button was released.\nThe mouse cursor state.\nThe mouse cursor entered the window.\nThe mouse cursor left the window.\nThe mouse cursor was moved\nA mouse event.\nThe forward mouse button.\nThe interaction of a mouse cursor.\nThe left mouse button.\nA line-based scroll movement\nThe middle (wheel) button.\nSome other button.\nA pixel-based scroll movement\nThe right mouse button.\nA scroll movement.\nThe cursor is currently unavailable (i.e. out of bounds or …\nThe mouse wheel was scrolled.\nTrack mouse clicks.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the <code>Cursor</code> is over the given <code>bounds</code>.\nReturns the absolute position of the <code>Cursor</code>, if available.\nReturns the relative position of the <code>Cursor</code> from the given …\nReturns the relative position of the <code>Cursor</code> inside the …\nReturns the absolute position of the <code>Cursor</code>, if available …\nThe scroll movement.\nThe new position of the mouse cursor\nThe number of horizontal lines scrolled\nThe number of horizontal pixels scrolled\nThe number of vertical lines scrolled\nThe number of vertical pixels scrolled\nA mouse click.\nA double click\nThe kind of mouse click.\nA single click\nA triple click\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>Kind</code> of <code>Click</code>.\nCreates a new <code>Click</code> with the given position and previous …\nReturns the position of the <code>Click</code>.\nA generic <code>Overlay</code>.\nAn <code>Overlay</code> container that displays multiple overlay …\nAn interactive component that can be displayed on top of …\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Element</code> and its children using the given <code>Layout</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>Group</code> of overlay <code>Element</code> children.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the cursor is over the <code>Element</code>.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nComputes the layout of the <code>Element</code> in the given bounds.\nApplies a transformation to the produced message of the …\nReturns the current <code>mouse::Interaction</code> of the <code>Element</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nCreates a new <code>Element</code> containing the given <code>Overlay</code>.\nCreates an empty <code>Group</code>.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nApplies a <code>widget::Operation</code> to the <code>Element</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nReturns the nested overlay of the <code>Element</code>, if there is any.\nTurns the <code>Group</code> into an overlay <code>overlay::Element</code>.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nAdds an <code>overlay::Element</code> to the <code>Group</code>.\nCreates a <code>Group</code> with the given elements.\nAn amount of space to pad for each side of a box\nPadding of zero\nCreate a <code>Padding</code> that is equal on all sides.\nCreate some bottom <code>Padding</code>.\nSets the <code>bottom</code> of the <code>Padding</code>.\nBottom padding\nFits the <code>Padding</code> between the provided <code>inner</code> and <code>outer</code> <code>Size</code>.\n[top, rght, bottom, left]\nReturns the argument unchanged.\nReturns the total amount of horizontal <code>Padding</code>.\nCalls <code>U::from(self)</code>.\nCreate some left <code>Padding</code>.\nSets the <code>left</code> of the <code>Padding</code>.\nLeft padding\nCreate a <code>Padding</code> that is equal on all sides.\nCreate some right <code>Padding</code>.\nSets the <code>right</code> of the <code>Padding</code>.\nRight padding\nCreate some top <code>Padding</code>.\nSets the <code>top</code> of the <code>Padding</code>.\nTop padding\nReturns the total amount of vertical <code>Padding</code>.\nA polygon with four sides.\nA component that can be used by widgets to draw themselves …\nThe styling attributes of a <code>Renderer</code>.\nThe <code>Border</code> of the <code>Quad</code>. The border is drawn on the inside …\nThe bounds of the <code>Quad</code>.\nClears all of the recorded primitives in the <code>Renderer</code>.\nEnds recording a new layer.\nEnds recording a new layer.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe color to apply to symbolic icons.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe scale factor\nThe <code>Shadow</code> of the <code>Quad</code>.\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nThe text color\nDraws the primitives recorded in the given closure in a …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nIn-memory data\nThe data of a vectorial image.\nA handle of Svg data.\nFile data\nA <code>Renderer</code> that can render vector graphics.\nA raster image that can be drawn.\nSets the border radius of the <code>Svg</code>\nThe border radius for the svg\nSets the <code>Color</code> filter of the <code>Svg</code>.\nThe <code>Color</code> filter to be applied to the <code>Svg</code>.\nReturns a reference to the SVG <code>Data</code>.\nDraws an SVG with the given <code>Handle</code>, an optional <code>Color</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an SVG <code>Handle</code> from raw bytes containing either an …\nCreates an SVG <code>Handle</code> pointing to the vector image of the …\nThe handle of the <code>Svg</code>.\nReturns the unique identifier of the <code>Handle</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the default dimensions of an SVG for the given …\nCreates a new <code>Svg</code> with the given handle.\nSets the opacity of the <code>Svg</code>.\nThe opacity of the <code>Svg</code>.\nSets the rotation of the <code>Svg</code>.\nThe rotation to be applied to the image; on its center.\nThe <code>char</code> representing a ▼ icon in the built-in <code>ICON_FONT</code>.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nBorrowed data.\nA bounds difference.\nThe <code>char</code> representing a ✔ icon in the <code>ICON_FONT</code>.\nThe point was within the bounds of the returned character …\nThe difference detected in some text.\nThe <code>Editor</code> of this <code>Renderer</code>.\nThe font type used.\nA fragment of <code>Text</code>.\nWraps at the glyph level.\nA text highlight.\nThe result of hit testing on text.\nThe icon font of the backend.\nA trait for converting a value to some text <code>Fragment</code>.\nThe height of a line of text in a paragraph.\nNo wrapping.\nNo difference.\nOwned data.\nThe <code>Paragraph</code> of this <code>Renderer</code>.\nThe Raw of this <code>Renderer</code>.\nA factor of the size of the text.\nA renderer capable of measuring and drawing <code>Text</code>.\nA shape difference.\nThe shaping strategy of some text.\nA span of text.\nA paragraph.\nWraps at the word level.\nWraps at the word level, or fallback to glyph level if a …\nThe wrapping strategy of some text.\nSets the <code>Background</code> of the <code>Span</code>.\nThe <code>Background</code> of the highlight.\nSets the <code>Background</code> of the <code>Span</code>, if any.\nSets the <code>Border</code> of the <code>Span</code>.\nThe <code>Border</code> of the highlight.\nSets the <code>Border</code> of the <code>Span</code>, if any.\nThe bounds of the paragraph.\nSets the <code>Color</code> of the <code>Span</code>.\nThe <code>Color</code> of the <code>Span</code>.\nSets the <code>Color</code> of the <code>Span</code>, if any.\nThe content of the paragraph.\nComputes the cursor position of the <code>Hit</code> .\nReturns the default <code>Self::Font</code>.\nReturns the default size of <code>Text</code>.\nEdit text.\nDraws the given <code>Editor</code> at the given position and with the …\nDraws the given <code>Paragraph</code> at the given position and with …\nDraws the given Raw\nDraws the given <code>Text</code> at the given position and with the …\nSets the font of the <code>Span</code>.\nThe font of the <code>Text</code>.\nThe font of the <code>Span</code>.\nSets the font of the <code>Span</code>, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe <code>Highlight</code> of the <code>Span</code>.\nHighlight text.\nThe horizontal alignment of the <code>Text</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the value to some text <code>Fragment</code>.\nSets the <code>LineHeight</code> of the <code>Span</code>.\nThe line height of the <code>Text</code>.\nThe <code>LineHeight</code> of the <code>Span</code>.\nSets the link of the <code>Span</code>.\nThe link of the <code>Span</code>.\nSets the link of the <code>Span</code>, if any.\nCreates a new <code>Span</code> of text with the given text fragment.\nSets the <code>Padding</code> of the <code>Span</code>.\nThe <code>Padding</code> of the <code>Span</code>.\nDraw paragraphs.\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nSets the size of the <code>Span</code>.\nThe size of the <code>Text</code> in logical pixels.\nThe size of the <code>Span</code> in <code>Pixels</code>.\nSets whether the <code>Span</code> should be struck through or not.\nWhether the <code>Span</code> should be struck through or not.\nThe <code>Fragment</code> of text.\nReturns the <code>LineHeight</code> in absolute logical pixels.\nTurns the <code>Span</code> into a static one.\nSets whether the <code>Span</code> should be underlined or not.\nWhether the <code>Span</code> should be underlined or not.\nThe vertical alignment of the <code>Text</code>.\nThe <code>Wrapping</code> strategy of the <code>Text</code>.\nAn interaction with an <code>Editor</code>.\nDelete the previous character.\nCursor without a selection\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe cursor of an <code>Editor</code>.\nDelete the next character.\nA direction in some text.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nA component that can be used by widgets to edit multi-line …\nMove to the end of the line.\nBreak the current line.\nThe font of the <code>Editor</code>.\nMove to the start of the line.\nInsert the given character.\nMove left.\n&lt;-\nA cursor movement.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nMove right.\n-&gt;\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect the entire buffer.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nCursor selecting a range of text\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nReturns the current boundaries of the <code>Editor</code>.\nReturns the current <code>Cursor</code> of the <code>Editor</code>.\nReturns the current cursor position of the <code>Editor</code>.\nReturns the <code>Direction</code> of the <code>Motion</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRuns a text <code>Highlighter</code> in the <code>Editor</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>Action</code> is an editing action.\nReturns true if the <code>Editor</code> has no contents.\nReturns the text of the given line in the <code>Editor</code>, if it …\nReturns the amount of lines in the <code>Editor</code>.\nReturns the minimum boundaries to fit the current contents …\nPerforms an <code>Action</code> on the <code>Editor</code>.\nReturns the current selected text of the <code>Editor</code>.\nUpdates the <code>Editor</code> with some new attributes.\nWidens the <code>Motion</code>, if possible.\nCreates a new <code>Editor</code> laid out with the given text.\nThe amount of pixels to scroll.\nThe format of some text.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nThe highlight iterator type.\nA highlighter that highlights nothing.\nThe settings to configure the <code>Highlighter</code>.\nNotifies the <code>Highlighter</code> that the line at the given index …\nThe <code>Color</code> of the text.\nReturns the current line of the <code>Highlighter</code>.\nThe <code>Font</code> of the text.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHighlights the given line.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nThe font of this <code>Paragraph</code>.\nA text paragraph.\nA <code>Paragraph</code> of plain text.\nCompares the <code>Paragraph</code> with some desired <code>Text</code> and returns …\nReturns the argument unchanged.\nReturns the distance to the given grapheme index in the …\nTests whether the provided point is within the boundaries …\nTests whether the provided point is within the boundaries …\nReturns the horizontal alignment of the <code>Paragraph</code>.\nReturns the horizontal alignment of the <code>Paragraph</code>.\nCalls <code>U::from(self)</code>.\nReturns the minimum boundaries that can fit the contents …\nReturns the minimum boundaries that can fit the contents …\nReturns the minimum height that can fit the contents of …\nReturns the minimum width that can fit the contents of the …\nReturns the minimum width that can fit the contents of the …\nCreates a new <code>Plain</code> paragraph.\nReturns the cached <code>Paragraph</code>.\nLays out the <code>Paragraph</code> with some new boundaries.\nReturns all bounds for the provided <code>Span</code> index of the …\nUpdates the plain <code>Paragraph</code> to match the given <code>Text</code>, if …\nReturns the vertical alignment of the <code>Paragraph</code>.\nReturns the vertical alignment of the <code>Paragraph</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nCreates a new <code>Paragraph</code> laid out with the given <code>Text</code>.\nA list with all the defined themes.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nA <code>Theme</code> with a customized <code>Palette</code>.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe built-in dark variant.\nThe built-in Dracula variant.\nThe built-in Ferra variant:\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nThe built-in light variant.\nThe built-in Moonfly variant.\nThe built-in Nightfly variant.\nThe built-in Nord variant.\nThe built-in Oxocarbon variant.\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>.\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>, with a …\nReturns the <code>palette::Extended</code> of the <code>Theme</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>Custom</code> theme from the given <code>Palette</code>.\nDefine the colors of a theme.\nReturns the <code>Palette</code> of the <code>Theme</code>.\nCreates a <code>Custom</code> theme from the given <code>Palette</code> with a …\nA set of background colors.\nThe built-in Catppuccin Frappé variant of a <code>Palette</code>.\nThe built-in Catppuccin Latte variant of a <code>Palette</code>.\nThe built-in Catppuccin Macchiato variant of a <code>Palette</code>.\nThe built-in Catppuccin Mocha variant of a <code>Palette</code>.\nThe built-in dark variant of a <code>Palette</code>.\nThe built-in Dracula variant of a <code>Palette</code>.\nA set of danger colors.\nThe built-in Catppuccin Frappé variant of an <code>Extended</code> …\nThe built-in Catppuccin Latte variant of an <code>Extended</code> …\nThe built-in Catppuccin Macchiato variant of an <code>Extended</code> …\nThe built-in Catppuccin Mocha variant of an <code>Extended</code> …\nThe built-in dark variant of an <code>Extended</code> palette.\nThe built-in Dracula variant of an <code>Extended</code> palette.\nThe built-in Ferra variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Dark variant of an <code>Extended</code> palette.\nThe built-in Gruvbox Light variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Dragon variant of an <code>Extended</code> …\nThe built-in Kanagawa Lotus variant of an <code>Extended</code> palette.\nThe built-in Kanagawa Wave variant of an <code>Extended</code> palette.\nThe built-in light variant of an <code>Extended</code> palette.\nThe built-in Moonfly variant of an <code>Extended</code> palette.\nThe built-in Nightfly variant of an <code>Extended</code> palette.\nThe built-in Nord variant of an <code>Extended</code> palette.\nThe built-in Oxocarbon variant of an <code>Extended</code> palette.\nThe built-in Solarized Dark variant of an <code>Extended</code> palette.\nThe built-in Solarized Light variant of an <code>Extended</code> …\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night variant of an <code>Extended</code> palette.\nThe built-in Tokyo Night Storm variant of an <code>Extended</code> …\nAn extended set of colors generated from a <code>Palette</code>.\nThe built-in Ferra variant of a <code>Palette</code>.\nThe built-in Gruvbox Dark variant of a <code>Palette</code>.\nThe built-in Gruvbox Light variant of a <code>Palette</code>.\nThe built-in Kanagawa Dragon variant of a <code>Palette</code>.\nThe built-in Kanagawa Lotus variant of a <code>Palette</code>.\nThe built-in Kanagawa Wave variant of a <code>Palette</code>.\nThe built-in light variant of a <code>Palette</code>.\nThe built-in Moonfly variant of a <code>Palette</code>.\nThe built-in Nightfly variant of a <code>Palette</code>.\nThe built-in Nord variant of a <code>Palette</code>.\nThe built-in Oxocarbon variant of a <code>Palette</code>.\nRecommended background, icon, and text <code>Color</code>.\nA color palette.\nA set of primary colors.\nThe built-in Solarized Dark variant of a <code>Palette</code>.\nThe built-in Solarized Light variant of a <code>Palette</code>.\nA set of secondary colors.\nA set of success colors.\nThe built-in Tokyo Night variant of a <code>Palette</code>.\nThe built-in Tokyo Night Light variant of a <code>Palette</code>.\nThe built-in Tokyo Night Storm variant of a <code>Palette</code>.\nThe background <code>Color</code> of the <code>Palette</code>.\nThe set of background colors.\nThe base background color.\nThe base primary color.\nThe base secondary color.\nThe base success color.\nThe base danger color.\nThe background color.\nThe danger <code>Color</code> of the <code>Palette</code>.\nThe set of danger colors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates an <code>Extended</code> palette from a simple <code>Palette</code>.\nGenerates a set of <code>Primary</code> colors from the base, …\nGenerates a set of <code>Secondary</code> colors from the base and text …\nGenerates a set of <code>Success</code> colors from the base, …\nGenerates a set of <code>Danger</code> colors from the base, …\nThe icon color, which defaults to the text color.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the palette is dark or not.\nCreates a new <code>Pair</code> from a background <code>Color</code> and some text …\nGenerates a set of <code>Background</code> colors from the base and …\nThe primary <code>Color</code> of the <code>Palette</code>.\nThe set of primary colors.\nThe set of secondary colors.\nA stronger version of the base background color.\nA stronger version of the base primary color.\nA stronger version of the base secondary color.\nA stronger version of the base success color.\nA stronger version of the base danger color.\nThe success <code>Color</code> of the <code>Palette</code>.\nThe set of success colors.\nThe text <code>Color</code> of the <code>Palette</code>.\nThe text color.\nA weaker version of the base background color.\nA weaker version of the base primary color.\nA weaker version of the base secondary color.\nA weaker version of the base success color.\nA weaker version of the base danger color.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe duration of one nanosecond.\nThe duration of one second.\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.\nDivides <code>Duration</code> by <code>f32</code>.\nDivides <code>Duration</code> by <code>f64</code>.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new <code>Duration</code> from the specified number of hours.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of weeks.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this <code>Duration</code> spans no time.\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nCreates a new <code>Duration</code> from the specified number of whole …\nReturns an instant corresponding to “now”.\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns the amount of time elapsed from another instant to …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nReturns the amount of time elapsed from another instant to …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nA touch interaction.\nA unique identifier representing a finger on a touch …\nA touch interaction was ended.\nA touch interaction was canceled.\nAn on-going touch interaction was moved.\nA touch interaction was started.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe identifier of a generic widget.\nA component that displays information and allows …\nget the a11y nodes for the widget and its children\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nAdds the drag destination rectangles of the widget. Runs …\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nReturns the argument unchanged.\nReturns the id of the widget\nCalls <code>U::from(self)</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nCreates a custom <code>Id</code>.\nProcesses a runtime <code>Event</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nQuery or update internal widget state.\nReturns the overlay of the <code>Widget</code>, if there is any.\nresets the id counter\nSets the id of the widget This may be called while diffing …\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nText widgets display information through writing.\nStore internal widget state in a state tree to ensure …\nCreates a unique <code>Id</code>.\nThe <code>Operation</code> needs to be followed by another <code>Operation</code>.\nThe <code>Operation</code> produced no result.\nA piece of logic that can traverse the widget tree of an …\nThe result of an <code>Operation</code>.\nThe <code>Operation</code> produced some result.\nWraps the <code>Operation</code> in a black box, erasing its returning …\nOperates on a widget that contains other widgets.\nOperates on a custom widget.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nOperate on widgets that can be focused.\nOperates on a widget that can be focused.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMaps the output of an <code>Operation</code> using the given function.\nProduces an <code>Operation</code> that applies the given <code>Operation</code> to …\nOperate on widgets that can be scrolled.\nOperates on a widget that can be scrolled.\nSearch for widgets with the target Id.\nOperate on widgets that have text input.\nOperates on a widget that has text input.\nChains the output of an <code>Operation</code> with the provided …\nA summary of the focusable widgets present on a widget …\nThe internal state of a widget that can be focused.\nProduces an <code>Operation</code> that generates a <code>Count</code> and chains it …\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that focuses the widget with the …\nFocuses the widget.\nProduces an <code>Operation</code> that searches for the current …\nProduces an <code>Operation</code> that searches for the current …\nThe index of the current focused widget, if any.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns whether the widget is focused or not.\nThe total amount of focusable widgets.\nUnfocuses the widget.\nThe amount of absolute offset in each direction of a …\nA relative offset that points to the bottom-right of a …\nThe amount of relative offset in each direction of a …\nA relative offset that points to the top-left of a …\nThe internal state of a widget that can be scrolled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProduces an <code>Operation</code> that scrolls the widget with the …\nScroll the widget by the given <code>AbsoluteOffset</code> along the …\nProduces an <code>Operation</code> that scrolls the widget with the …\nScroll the widget to the given <code>AbsoluteOffset</code> along the …\nProduces an <code>Operation</code> that snaps the widget with the given …\nSnaps the scroll of the widget to the given <code>percentage</code> …\nThe amount of horizontal offset\nThe amount of horizontal offset\nThe amount of vertical offset\nThe amount of vertical offset\nProduces an <code>Operation</code> that searches for the Id\nThe internal state of a widget that has text input.\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to an arbitrary …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the end of the input …\nProduces an <code>Operation</code> that moves the cursor of the widget …\nMoves the cursor of the text input to the front of the …\nProduces an <code>Operation</code> that selects all the content of the …\nSelects all the content of the text input.\nThe theme catalog of a <code>Text</code>.\nThe item class of this <code>Catalog</code>.\nThe internal state of a <code>Text</code> widget.\nThe appearance of some text.\nA styling function for a <code>Text</code>.\nA bunch of text.\nSets the <code>alignment::Horizontal</code> of the <code>Text</code>.\nSets the <code>alignment::Vertical</code> of the <code>Text</code>.\nText with the default base color.\nCenters the <code>Text</code>, both horizontally and vertically.\nSets the style class of the <code>Text</code>.\nSets the <code>Color</code> of the <code>Text</code>.\nThe <code>Color</code> of the text.\nSets the <code>Color</code> of the <code>Text</code>, if <code>Some</code>.\nText conveying some negative information, like an error.\nThe default text styling; color is inherited.\nThe default class produced by this <code>Catalog</code>.\nDraws text using the same logic as the <code>Text</code> widget.\nSets the <code>Font</code> of the <code>Text</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the <code>Text</code> boundaries.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProduces the <code>layout::Node</code> of a <code>Text</code> widget.\nSets the <code>LineHeight</code> of the <code>Text</code>.\nCreate a new fragment of <code>Text</code> with the given contents.\nText conveying some important information, like an action.\nText conveying some secondary information, like a footnote.\nSets the <code>Shaping</code> strategy of the <code>Text</code>.\nSets the size of the <code>Text</code>.\nThe <code>Style</code> of a class with the given status.\nSets the style of the <code>Text</code>.\nText conveying some positive information, like a …\nSets the width of the <code>Text</code> boundaries.\nSets the <code>Wrapping</code> strategy of the <code>Text</code>.\nA map of named widget states.\nNo meaningful internal state.\nSome meaningful internal state.\nThe internal <code>State</code> of a widget.\nThe identifier of some widget state.\nA persistent state widget tree.\nThe children of the root widget of the <code>Tree</code>.\nReconciliates the current tree with the provided <code>Widget</code>.\nReconciles the children of the tree with the provided list …\nReconciles the children of the tree with the provided list …\nReconciles the <code>current_children</code> with the provided list of …\nDowncasts the <code>State</code> to <code>T</code> and returns a mutable reference …\nDowncasts the <code>State</code> to <code>T</code> and returns a reference to it.\nCreates an empty, stateless <code>Tree</code> with no children.\nFinds a widget state in the tree by its id.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nthe Id of the <code>Tree</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>State</code>.\nCreates a new <code>Tree</code> for the provided <code>Widget</code>.\nCreates a <code>Tag</code> for a state of type <code>T</code>.\nThe <code>State</code> of the <code>Tree</code>.\nCreates a <code>Tag</code> for a stateless widget.\nThe tag of the <code>Tree</code>.\nTakes all named widgets from the tree.\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nRedraw at the given time.\nThe window is completely centered on the screen.\nThe user has requested for the window to close.\nA window was closed.\nPlatform-specific\nThe platform-specific default position for a new window.\nA window-related event.\nA file has been dropped into the window.\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nA window was focused.\nThe application takes the whole screen of its current …\nThe application is hidden\nThe id of the window.\nPlatform-specific\nA window level groups windows with respect to their …\nThe mode of a window-based application.\nA window was moved.\nNo window will match this Id\nRedraw the next frame.\nThe default behavior.\nA window was opened.\nThe position of a window in a given screen.\nA request to redraw a window.\nA window redraw was requested.\nA window was resized.\nThe window is positioned with specific coordinates: <code>(X, Y)</code>.\nLike <code>Specific</code>, but the window is positioned with the …\nA window was unfocused.\nThe type of user attention to request.\nThe application appears in its own window.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChange the icon of a window.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfigure your windows.\nCreates a new unique window <code>Id</code>.\nThe position of the opened window. This is relative to the …\nThe size of the created window. This is its “inner” …\nProduced when the length of the <code>rgba</code> argument isn’t …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nAn error produced when using <code>from_rgba</code> with invalid …\nAn window icon normally used for the titlebar or taskbar.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBuilds an  <code>Icon</code> from its RGBA pixels in the <code>sRGB</code> color …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the raw data of the <code>Icon</code>.\nThe length of the provided RGBA data.\nThe provided height.\nThe amount of pixels of the provided RGBA data.\nThe provided width.\nThe product of <code>width</code> and <code>height</code>.\nThe platform specific window settings of an application.\nThe window settings of an application.\nSets the application id of the window.\nWhether the window should have a border, a title bar, etc. …\nWhether the window will close when the user requests it, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe icon of the window.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe window <code>Level</code>.\nThe maximum size of the window.\nThe minimum size of the window.\nWhether bypass the window manager mapping for x11 windows\nPlatform specific settings.\nThe initial position of the window.\nWhether the window should be resizable or not.\nThe border area for the drag resize handle.\nThe initial logical dimensions of the window.\nWhether the window should be transparent.\nWhether the window should be visible or not.")