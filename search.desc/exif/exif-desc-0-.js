searchState.loadedDescShard("exif", 0, "This is a pure-Rust library to parse Exif data.\nVector of slices of 8-bit bytes containing 7-bit ASCII …\nThe value of the field is blank.  Some fields have blank …\nVector of 8-bit unsigned integers.\nAn enum that indicates how a tag number is interpreted.\nA struct used to parse a DateTime field.\nDate and time when the image file was created or last …\nDate and time when the image was stored as digital data. …\nDate and time when the original image was generated (e.g., …\nVector of 64-bit (double precision) floating-point numbers.\nAn error returned when parsing of Exif data fails.\nA struct that holds the parsed Exif attributes.\nExif attributes.\nA TIFF/Exif field.\nVector of 32-bit (single precision) floating-point numbers.\nUnit of FocalPlaneXResolution and FocalPlaneYResolution …\nGPS attributes.\nAn IFD number.\nInteroperability attributes.\nInput data was malformed or truncated.\nInput data could not be read due to an I/O error and a …\nVector of 32-bit unsigned integers.\nManufacturer of the image input equipment.\nModel name or number of the image input equipment.\nExif attribute information was not found in an image file …\nThe field type is not supported and cannnot be encoded.\nTimezone offset for DateTime field.\nTimezone offset for DateTimeDigitized field.\nTimezone offset for DateTimeOriginal field.\nSensitivity of the device.\nAn unsigned rational number, which is a pair of 32-bit …\nVector of unsigned rationals. An unsigned rational number …\nA struct to parse the Exif attributes and create an <code>Exif</code> …\nUnit of XResolution and YResolution fields.\nVector of 8-bit signed integers.  Unused in the Exif …\nVector of 32-bit signed integers.\nA signed rational number, which is a pair of 32-bit signed …\nVector of signed rationals. A signed rational number is a …\nVector of 16-bit signed integers.  Unused in the Exif …\nVector of 16-bit unsigned integers.\nName and version of the software used to create the image.\nSubseconds for DateTime field.\nSubseconds for DateTimeDigitized field.\nSubseconds for DateTimeOriginal field.\nA tag of a TIFF/Exif field.\nTIFF attributes defined in the TIFF Rev. 6.0 specification.\nField values or image data are too big to encode.\nSlice of 8-bit bytes.\nThe field has an unexpected value.\nThe type is unknown to this implementation. The associated …\nA type and values of a TIFF/Exif field.\nReturns <code>UIntValue</code> if the value type is unsigned integer …\nReturns the slice that contains the TIFF data.\nReturns the context of the tag.\nReturns the default value of the tag.  <code>None</code> is returned if …\nReturns the description of the tag.\nReturns an object that implements <code>std::fmt::Display</code> for …\nReturns an object that implements <code>std::fmt::Display</code> for …\nDocumentation\nThe interfaces in this module are experimental and …\nReturns an iterator of Exif fields.\nFormatting parameters other than width are not supported.\nFormatting parameters other than width are not supported.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse an ASCII data of a DateTime field.  The range of a …\nGet the Exif attribute information segment from a JPEG …\nReturns a reference to the Exif field specified by the tag …\nReturns the unsigned integer at the given position. None …\nThe index of the IFD to which this field belongs.\nReturns the IFD number.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over the unsigned integers (BYTE, …\nReturns true if the Exif data (TIFF structure) is in the …\nThe subsecond data in nanoseconds.  If the Exif attribute …\nConstructs a new <code>Reader</code>.\nReturns the tag number.\nThe offset of the time zone in minutes.\nParse the Exif attributes in the TIFF format.\nParses an OffsetTime-like field.\nParses an SubsecTime-like field.\nReads an image file and parses the Exif attributes in it. …\nParses the Exif attributes from raw Exif data. If an error …\nThe tag of this field.\nConverts the value to an f32.\nConverts the value to an f32.\nConverts the value to an f64.\nConverts the value to an f64.\nThe value of this field.\nNews\nUpgrade Guide\nThe <code>Writer</code> struct is used to encode and write Exif data.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstructs an empty <code>Writer</code>.\nAppends a field to be written.\nSets JPEG data for the specified IFD. If this method is …\nSets TIFF strips for the specified IFD. If this method is …\nSets TIFF tiles for the specified IFD. If this method is …\nEncodes Exif data and writes it into <code>w</code>.")