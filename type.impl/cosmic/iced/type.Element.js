(function() {
    var type_impls = Object.fromEntries([["cosmic",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CColorPicker%3C'a,+Message%3E%3E-for-Element%3C'a,+Message,+Theme,+Renderer%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cosmic/widget/color_picker/mod.rs.html#939-949\">Source</a><a href=\"#impl-From%3CColorPicker%3C'a,+Message%3E%3E-for-Element%3C'a,+Message,+Theme,+Renderer%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, Message&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"cosmic/widget/struct.ColorPicker.html\" title=\"struct cosmic::widget::ColorPicker\">ColorPicker</a>&lt;'a, Message&gt;&gt; for <a class=\"type\" href=\"cosmic/iced/type.Element.html\" title=\"type cosmic::iced::Element\">Element</a>&lt;'a, Message, <a class=\"struct\" href=\"cosmic/struct.Theme.html\" title=\"struct cosmic::Theme\">Theme</a>, <a class=\"type\" href=\"cosmic/type.Renderer.html\" title=\"type cosmic::Renderer\">Renderer</a>&gt;<div class=\"where\">where\n    Message: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cosmic/widget/color_picker/mod.rs.html#944-948\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    picker: <a class=\"struct\" href=\"cosmic/widget/struct.ColorPicker.html\" title=\"struct cosmic::widget::ColorPicker\">ColorPicker</a>&lt;'a, Message&gt;,\n) -&gt; <a class=\"type\" href=\"cosmic/iced/type.Element.html\" title=\"type cosmic::iced::Element\">Element</a>&lt;'a, Message, <a class=\"struct\" href=\"cosmic/struct.Theme.html\" title=\"struct cosmic::Theme\">Theme</a>, <a class=\"type\" href=\"cosmic/type.Renderer.html\" title=\"type cosmic::Renderer\">Renderer</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ColorPicker<'a, Message>>","cosmic::Element"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[2381]}