(function() {
    var type_impls = Object.fromEntries([["euclid",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#355-362\">Source</a><a href=\"#impl-Add-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#356\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, Src, Dst&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#359-361\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#397-401\">Source</a><a href=\"#impl-Clone-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#398-400\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#405-409\">Source</a><a href=\"#impl-Debug-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#406-408\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#411-415\">Source</a><a href=\"#impl-Default-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#412-414\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#417-421\">Source</a><a href=\"#impl-Hash-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#418-420\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+B,+C%3E%3E-for-Scale%3CT,+A,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#345-352\">Source</a><a href=\"#impl-Mul%3CScale%3CT,+B,+C%3E%3E-for-Scale%3CT,+A,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, A, B, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, B, C&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, A, B&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#346\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, A, C&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#349-351\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, B, C&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, B, C>>","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#423-428\">Source</a><a href=\"#impl-One-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a>, Src, Dst&gt; <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#425-427\">Source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; Self</h4></section></div></details>","One","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#391-395\">Source</a><a href=\"#impl-Ord-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#392-394\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#377-381\">Source</a><a href=\"#impl-PartialEq-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#378-380\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#385-389\">Source</a><a href=\"#impl-PartialOrd-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#386-388\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#246-268\">Source</a><a href=\"#impl-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, Src, Dst&gt; <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#248-250\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self</h4></section><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#253-255\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#262-267\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.clamp\" class=\"fn\">clamp</a>(self, start: Self, end: Self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the point each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details></div></details>",0,"euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#270-325\">Source</a><a href=\"#impl-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>, Src, Dst&gt; <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#299-301\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.cast\" class=\"fn\">cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;NewT, Src, Dst&gt;</h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>If the source value cannot be represented by the target type <code>NewT</code>, then\nmethod panics. Use <code>try_cast</code> if that must be case.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::Scale;\n<span class=\"kw\">enum </span>Mm {};\n<span class=\"kw\">enum </span>Cm {};\n\n<span class=\"kw\">let </span>to_mm: Scale&lt;i32, Cm, Mm&gt; = Scale::new(<span class=\"number\">10</span>);\n\n<span class=\"macro\">assert_eq!</span>(to_mm.cast::&lt;f32&gt;(), Scale::new(<span class=\"number\">10.0</span>));</code></pre></div>\n<p>That conversion will panic, because <code>i32</code> not enough to store such big numbers:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::Scale;\n<span class=\"kw\">enum </span>Mm {};<span class=\"comment\">// millimeter = 10^-2 meters\n</span><span class=\"kw\">enum </span>Em {};<span class=\"comment\">// exameter   = 10^18 meters\n\n// Panics\n</span><span class=\"kw\">let </span>to_em: Scale&lt;i32, Mm, Em&gt; = Scale::new(<span class=\"number\">10e20</span>).cast();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#322-324\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.try_cast\" class=\"fn\">try_cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;NewT, Src, Dst&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.\nIf the source value cannot be represented by the target type <code>NewT</code>, then <code>None</code>\nis returned.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::Scale;\n<span class=\"kw\">enum </span>Mm {};\n<span class=\"kw\">enum </span>Cm {};\n<span class=\"kw\">enum </span>Em {};<span class=\"comment\">// Exameter = 10^18 meters\n\n</span><span class=\"kw\">let </span>to_mm: Scale&lt;i32, Cm, Mm&gt; = Scale::new(<span class=\"number\">10</span>);\n<span class=\"kw\">let </span>to_em: Scale&lt;f32, Mm, Em&gt; = Scale::new(<span class=\"number\">10e20</span>);\n\n<span class=\"macro\">assert_eq!</span>(to_mm.try_cast::&lt;f32&gt;(), <span class=\"prelude-val\">Some</span>(Scale::new(<span class=\"number\">10.0</span>)));\n<span class=\"comment\">// Integer to small to store that number\n</span><span class=\"macro\">assert_eq!</span>(to_em.try_cast::&lt;i32&gt;(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>",0,"euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#58-244\">Source</a><a href=\"#impl-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Src, Dst&gt; <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#60-62\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"euclid/struct.Scale.html#tymethod.new\" class=\"fn\">new</a>(x: T) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.identity\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#66-71\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.identity\" class=\"fn\">identity</a>() -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates an identity scale (1.0).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_point\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#87-92\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.transform_point\" class=\"fn\">transform_point</a>(self, point: <a class=\"struct\" href=\"euclid/struct.Point2D.html\" title=\"struct euclid::Point2D\">Point2D</a>&lt;T, Src&gt;) -&gt; <a class=\"struct\" href=\"euclid/struct.Point2D.html\" title=\"struct euclid::Point2D\">Point2D</a>&lt;T::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, Dst&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the given point transformed by this scale.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::{Scale, point2};\n<span class=\"kw\">enum </span>Mm {};\n<span class=\"kw\">enum </span>Cm {};\n\n<span class=\"kw\">let </span>to_mm: Scale&lt;i32, Cm, Mm&gt; = Scale::new(<span class=\"number\">10</span>);\n\n<span class=\"macro\">assert_eq!</span>(to_mm.transform_point(point2(<span class=\"number\">42</span>, -<span class=\"number\">42</span>)), point2(<span class=\"number\">420</span>, -<span class=\"number\">420</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_point3d\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#96-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.transform_point3d\" class=\"fn\">transform_point3d</a>(\n    self,\n    point: <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, Src&gt;,\n) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, Dst&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the given point transformed by this scale.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#117-122\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.transform_vector\" class=\"fn\">transform_vector</a>(self, vec: <a class=\"struct\" href=\"euclid/struct.Vector2D.html\" title=\"struct euclid::Vector2D\">Vector2D</a>&lt;T, Src&gt;) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector2D.html\" title=\"struct euclid::Vector2D\">Vector2D</a>&lt;T::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, Dst&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the given vector transformed by this scale.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::{Scale, vec2};\n<span class=\"kw\">enum </span>Mm {};\n<span class=\"kw\">enum </span>Cm {};\n\n<span class=\"kw\">let </span>to_mm: Scale&lt;i32, Cm, Mm&gt; = Scale::new(<span class=\"number\">10</span>);\n\n<span class=\"macro\">assert_eq!</span>(to_mm.transform_vector(vec2(<span class=\"number\">42</span>, -<span class=\"number\">42</span>)), vec2(<span class=\"number\">420</span>, -<span class=\"number\">420</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_size\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#138-143\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.transform_size\" class=\"fn\">transform_size</a>(self, size: <a class=\"struct\" href=\"euclid/struct.Size2D.html\" title=\"struct euclid::Size2D\">Size2D</a>&lt;T, Src&gt;) -&gt; <a class=\"struct\" href=\"euclid/struct.Size2D.html\" title=\"struct euclid::Size2D\">Size2D</a>&lt;T::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, Dst&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the given size transformed by this scale.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::{Scale, size2};\n<span class=\"kw\">enum </span>Mm {};\n<span class=\"kw\">enum </span>Cm {};\n\n<span class=\"kw\">let </span>to_mm: Scale&lt;i32, Cm, Mm&gt; = Scale::new(<span class=\"number\">10</span>);\n\n<span class=\"macro\">assert_eq!</span>(to_mm.transform_size(size2(<span class=\"number\">42</span>, -<span class=\"number\">42</span>)), size2(<span class=\"number\">420</span>, -<span class=\"number\">420</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_rect\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#159-167\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.transform_rect\" class=\"fn\">transform_rect</a>(self, rect: &amp;<a class=\"struct\" href=\"euclid/struct.Rect.html\" title=\"struct euclid::Rect\">Rect</a>&lt;T, Src&gt;) -&gt; <a class=\"struct\" href=\"euclid/struct.Rect.html\" title=\"struct euclid::Rect\">Rect</a>&lt;T::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, Dst&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the given rect transformed by this scale.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::{Scale, rect};\n<span class=\"kw\">enum </span>Mm {};\n<span class=\"kw\">enum </span>Cm {};\n\n<span class=\"kw\">let </span>to_mm: Scale&lt;i32, Cm, Mm&gt; = Scale::new(<span class=\"number\">10</span>);\n\n<span class=\"macro\">assert_eq!</span>(to_mm.transform_rect(<span class=\"kw-2\">&amp;</span>rect(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">42</span>, -<span class=\"number\">42</span>)), rect(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">420</span>, -<span class=\"number\">420</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_box2d\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#171-179\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.transform_box2d\" class=\"fn\">transform_box2d</a>(self, b: &amp;<a class=\"struct\" href=\"euclid/struct.Box2D.html\" title=\"struct euclid::Box2D\">Box2D</a>&lt;T, Src&gt;) -&gt; <a class=\"struct\" href=\"euclid/struct.Box2D.html\" title=\"struct euclid::Box2D\">Box2D</a>&lt;T::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, Dst&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the given box transformed by this scale.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_box3d\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#183-191\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.transform_box3d\" class=\"fn\">transform_box3d</a>(self, b: &amp;<a class=\"struct\" href=\"euclid/struct.Box3D.html\" title=\"struct euclid::Box3D\">Box3D</a>&lt;T, Src&gt;) -&gt; <a class=\"struct\" href=\"euclid/struct.Box3D.html\" title=\"struct euclid::Box3D\">Box3D</a>&lt;T::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, Dst&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the given box transformed by this scale.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_identity\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#211-216\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.is_identity\" class=\"fn\">is_identity</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this scale has no effect.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::Scale;\n<span class=\"kw\">use </span>euclid::num::One;\n<span class=\"kw\">enum </span>Mm {};\n<span class=\"kw\">enum </span>Cm {};\n\n<span class=\"kw\">let </span>cm_per_mm: Scale&lt;f32, Mm, Cm&gt; = Scale::new(<span class=\"number\">0.1</span>);\n<span class=\"kw\">let </span>mm_per_mm: Scale&lt;f32, Mm, Mm&gt; = Scale::new(<span class=\"number\">1.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(cm_per_mm.is_identity(), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(mm_per_mm.is_identity(), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(mm_per_mm, Scale::one());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#220-222\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the underlying scalar scale factor.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#237-243\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Scale.html#tymethod.inverse\" class=\"fn\">inverse</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, Dst, Src&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h4></section></summary><div class=\"docblock\"><p>The inverse Scale (1.0 / self).</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::Scale;\n<span class=\"kw\">enum </span>Mm {};\n<span class=\"kw\">enum </span>Cm {};\n\n<span class=\"kw\">let </span>cm_per_mm: Scale&lt;f32, Cm, Mm&gt; = Scale::new(<span class=\"number\">0.1</span>);\n\n<span class=\"macro\">assert_eq!</span>(cm_per_mm.inverse(), Scale::new(<span class=\"number\">10.0</span>));</code></pre></div>\n</div></details></div></details>",0,"euclid::default::Scale"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#365-372\">Source</a><a href=\"#impl-Sub-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#366\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, Src, Dst&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#369-371\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","euclid::default::Scale"],["<section id=\"impl-Copy-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#403\">Source</a><a href=\"#impl-Copy-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section>","Copy","euclid::default::Scale"],["<section id=\"impl-Eq-for-Scale%3CT,+Src,+Dst%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/scale.rs.html#383\">Source</a><a href=\"#impl-Eq-for-Scale%3CT,+Src,+Dst%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, Src, Dst&gt;</h3></section>","Eq","euclid::default::Scale"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[54763]}