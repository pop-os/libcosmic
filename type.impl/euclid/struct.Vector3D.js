(function() {
    var type_impls = Object.fromEntries([["euclid",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1692-1699\">Source</a><a href=\"#impl-Add%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U: 'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1693\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1696-1698\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Vector3D<T, U>>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1683-1690\">Source</a><a href=\"#impl-Add-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1684\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1687-1689\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1713-1718\">Source</a><a href=\"#impl-AddAssign-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T, Output = T&gt;, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1715-1717\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ApproxEq%3CVector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1828-1844\">Source</a><a href=\"#impl-ApproxEq%3CVector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/approxeq/trait.ApproxEq.html\" title=\"trait euclid::approxeq::ApproxEq\">ApproxEq</a>&lt;T&gt;, U&gt; <a class=\"trait\" href=\"euclid/approxeq/trait.ApproxEq.html\" title=\"trait euclid::approxeq::ApproxEq\">ApproxEq</a>&lt;<a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1830-1836\">Source</a><a href=\"#method.approx_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/approxeq/trait.ApproxEq.html#tymethod.approx_epsilon\" class=\"fn\">approx_epsilon</a>() -&gt; Self</h4></section></summary><div class='docblock'>Default epsilon value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq_eps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1839-1843\">Source</a><a href=\"#method.approx_eq_eps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/approxeq/trait.ApproxEq.html#tymethod.approx_eq_eps\" class=\"fn\">approx_eq_eps</a>(&amp;self, other: &amp;Self, eps: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this object is approximately equal to the other one, using\na provided epsilon value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/approxeq.rs.html#21-23\">Source</a><a href=\"#method.approx_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/approxeq/trait.ApproxEq.html#method.approx_eq\" class=\"fn\">approx_eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if this object is approximately equal to the other one, using\nthe <a href=\"euclid/approxeq/trait.ApproxEq.html#tymethod.approx_epsilon\" title=\"associated function euclid::approxeq::ApproxEq::approx_epsilon\"><code>approx_epsilon</code></a> epsilon value.</div></details></div></details>","ApproxEq<Vector3D<T, U>>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1812-1818\">Source</a><a href=\"#impl-Ceil-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1815-1817\">Source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Ceil.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/struct.Vector3D.html#method.ceil\" title=\"method euclid::Vector3D::ceil\"><code>Vector3D::ceil</code></a>.</p>\n</div></details></div></details>","Ceil","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#960-969\">Source</a><a href=\"#impl-Clone-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#961-968\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1049-1057\">Source</a><a href=\"#impl-Debug-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1050-1056\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1059-1063\">Source</a><a href=\"#impl-Default-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1060-1062\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1786-1793\">Source</a><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1787\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1790-1792\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1770-1777\">Source</a><a href=\"#impl-Div%3CT%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1771\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1774-1776\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1795-1802\">Source</a><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1797-1801\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1779-1784\">Source</a><a href=\"#impl-DivAssign%3CT%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T, Output = T&gt;, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1781-1783\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scale: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1820-1826\">Source</a><a href=\"#impl-Floor-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1823-1825\">Source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Floor.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/struct.Vector3D.html#method.floor\" title=\"method euclid::Vector3D::floor\"><code>Vector3D::floor</code></a>.</p>\n</div></details></div></details>","Floor","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1852-1856\">Source</a><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1853-1855\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>([x, y, z]: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">[T; 3]</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T)%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1864-1868\">Source</a><a href=\"#impl-From%3C(T,+T,+T)%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(T, T, T)</a>&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1865-1867\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T)>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTranslation3D%3CT,+Src,+Dst%3E%3E-for-Vector3D%3CT,+Src%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/translation.rs.html#805-809\">Source</a><a href=\"#impl-From%3CTranslation3D%3CT,+Src,+Dst%3E%3E-for-Vector3D%3CT,+Src%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Src, Dst&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"euclid/struct.Translation3D.html\" title=\"struct euclid::Translation3D\">Translation3D</a>&lt;T, Src, Dst&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, Src&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/translation.rs.html#806-808\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: <a class=\"struct\" href=\"euclid/struct.Translation3D.html\" title=\"struct euclid::Translation3D\">Translation3D</a>&lt;T, Src, Dst&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Translation3D<T, Src, Dst>>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1033-1039\">Source</a><a href=\"#impl-Hash-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1034-1038\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1752-1759\">Source</a><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Vector3D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U1&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1753\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1756-1758\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U1, U2&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1736-1743\">Source</a><a href=\"#impl-Mul%3CT%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1737\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1740-1742\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1761-1768\">Source</a><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1763-1767\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scale: <a class=\"struct\" href=\"euclid/struct.Scale.html\" title=\"struct euclid::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1745-1750\">Source</a><a href=\"#impl-MulAssign%3CT%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T, Output = T&gt;, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1747-1749\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scale: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1674-1681\">Source</a><a href=\"#impl-Neg-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1675\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1678-1680\">Source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1027-1031\">Source</a><a href=\"#impl-PartialEq-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1028-1030\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1804-1810\">Source</a><a href=\"#impl-Round-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1807-1809\">Source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Round.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/struct.Vector3D.html#method.round\" title=\"method euclid::Vector3D::round\"><code>Vector3D::round</code></a>.</p>\n</div></details></div></details>","Round","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1720-1727\">Source</a><a href=\"#impl-Sub-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1721\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1724-1726\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1729-1734\">Source</a><a href=\"#impl-SubAssign-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T, Output = T&gt;, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1731-1733\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1707-1711\">Source</a><a href=\"#impl-Sum%3C%26Vector3D%3CT,+U%3E%3E-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U: 'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1708-1710\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum<&'a Vector3D<T, U>>","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1701-1705\">Source</a><a href=\"#impl-Sum-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1702-1704\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum","euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1065-1191\">Source</a><a href=\"#impl-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1068-1073\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor, setting all components to zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1077-1082\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.one\" class=\"fn\">one</a>() -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor, setting all components to one.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1086-1093\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"euclid/struct.Vector3D.html#tymethod.new\" class=\"fn\">new</a>(x: T, y: T, z: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values directly.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1096-1106\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.splat\" class=\"fn\">splat</a>(v: T) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1110-1112\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.from_lengths\" class=\"fn\">from_lengths</a>(\n    x: <a class=\"struct\" href=\"euclid/struct.Length.html\" title=\"struct euclid::Length\">Length</a>&lt;T, U&gt;,\n    y: <a class=\"struct\" href=\"euclid/struct.Length.html\" title=\"struct euclid::Length\">Length</a>&lt;T, U&gt;,\n    z: <a class=\"struct\" href=\"euclid/struct.Length.html\" title=\"struct euclid::Length\">Length</a>&lt;T, U&gt;,\n) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking properly  Lengths instead of scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1116-1118\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.from_untyped\" class=\"fn\">from_untyped</a>(p: <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1133-1135\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.map\" class=\"fn\">map</a>&lt;V, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; V&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;V, U&gt;</h4></section></summary><div class=\"docblock\"><p>Apply the function <code>f</code> to each component of this vector.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<p>This may be used to perform unusual arithmetic which is not already offered as methods.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::default::Vector3D;\n\n<span class=\"kw\">let </span>p = Vector3D::&lt;u32&gt;::new(<span class=\"number\">5</span>, <span class=\"number\">11</span>, <span class=\"number\">15</span>);\n<span class=\"macro\">assert_eq!</span>(p.map(|coord| coord.saturating_sub(<span class=\"number\">10</span>)), Vector3D::new(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1151-1153\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.zip\" class=\"fn\">zip</a>&lt;V, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T, T) -&gt; V&gt;(self, rhs: Self, f: F) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;V, U&gt;</h4></section></summary><div class=\"docblock\"><p>Apply the function <code>f</code> to each pair of components of this point and <code>rhs</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<p>This may be used to perform unusual arithmetic which is not already offered as methods.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::default::Vector3D;\n\n<span class=\"kw\">let </span>a: Vector3D&lt;u8&gt; = Vector3D::new(<span class=\"number\">50</span>, <span class=\"number\">200</span>, <span class=\"number\">10</span>);\n<span class=\"kw\">let </span>b: Vector3D&lt;u8&gt; = Vector3D::new(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(a.zip(b, u8::saturating_add), Vector3D::new(<span class=\"number\">150</span>, <span class=\"number\">255</span>, <span class=\"number\">10</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1176-1181\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Computes the vector with absolute values of each component.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>U {}\n\n<span class=\"macro\">assert_eq!</span>(vec3::&lt;<span class=\"kw\">_</span>, U&gt;(-<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>).abs(), vec3(<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>));\n\n<span class=\"kw\">let </span>vec = vec3::&lt;<span class=\"kw\">_</span>, U&gt;(f32::NAN, <span class=\"number\">0.0</span>, -f32::MAX).abs();\n<span class=\"macro\">assert!</span>(vec.x.is_nan());\n<span class=\"macro\">assert_eq!</span>(vec.y, <span class=\"number\">0.0</span>);\n<span class=\"macro\">assert_eq!</span>(vec.z, f32::MAX);</code></pre></div>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>The behavior for each component follows the scalar type’s implementation of\n<code>num_traits::Signed::abs</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dot\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1185-1190\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.dot\" class=\"fn\">dot</a>(self, other: Self) -&gt; T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Dot product.</p>\n</div></details></div></details>",0,"euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1193-1364\">Source</a><a href=\"#impl-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cross\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1196-1205\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.cross\" class=\"fn\">cross</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Cross product.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.component_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1209-1214\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.component_mul\" class=\"fn\">component_mul</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the component-wise multiplication of the two vectors.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.component_div\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1218-1223\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.component_div\" class=\"fn\">component_div</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the component-wise division of the two vectors.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_point\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1229-1231\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_point\" class=\"fn\">to_point</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Point3D.html\" title=\"struct euclid::Point3D\">Point3D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast this vector into a point.</p>\n<p>Equivalent to adding this vector to the origin.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xy\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1235-1237\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.xy\" class=\"fn\">xy</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector2D.html\" title=\"struct euclid::Vector2D\">Vector2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a 2d vector using this vector’s x and y coordinates</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xz\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1241-1243\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.xz\" class=\"fn\">xz</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector2D.html\" title=\"struct euclid::Vector2D\">Vector2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a 2d vector using this vector’s x and z coordinates</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.yz\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1247-1249\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.yz\" class=\"fn\">yz</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector2D.html\" title=\"struct euclid::Vector2D\">Vector2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a 2d vector using this vector’s x and z coordinates</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1253-1255\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_array\" class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class=\"docblock\"><p>Cast into an array with x, y and z.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array_4d\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1259-1264\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_array_4d\" class=\"fn\">to_array_4d</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>Cast into an array with x, y, z and 0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1268-1270\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_tuple\" class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class=\"docblock\"><p>Cast into a tuple with x, y and z.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple_4d\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1274-1279\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_tuple_4d\" class=\"fn\">to_tuple_4d</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(T, T, T, T)</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>Cast into a tuple with x, y, z and 0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1283-1285\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_untyped\" class=\"fn\">to_untyped</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1289-1291\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.cast_unit\" class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_2d\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1295-1297\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_2d\" class=\"fn\">to_2d</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector2D.html\" title=\"struct euclid::Vector2D\">Vector2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Convert into a 2d vector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1311-1316\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(vec3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>).round(), vec3::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1330-1335\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(vec3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>).ceil(), vec3::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1349-1354\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(vec3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>).floor(), vec3::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_transform\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1358-1363\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_transform\" class=\"fn\">to_transform</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Transform3D.html\" title=\"struct euclid::Transform3D\">Transform3D</a>&lt;T, U, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a> + <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates translation by this vector in vector units</p>\n</div></details></div></details>",0,"euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1366-1386\">Source</a><a href=\"#impl-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T, Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.square_length\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1372-1374\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.square_length\" class=\"fn\">square_length</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the vector’s length squared.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_onto_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1380-1385\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.project_onto_vector\" class=\"fn\">project_onto_vector</a>(self, onto: Self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T, Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns this vector projected onto another one.</p>\n<p>Projecting onto a nil vector will cause a division by zero.</p>\n</div></details></div></details>",0,"euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1388-1407\">Source</a><a href=\"#impl-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.robust_normalize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1392-1400\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.robust_normalize\" class=\"fn\">robust_normalize</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return the normalized vector even if the length is larger than the max value of Float.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1404-1406\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all members are finite.</p>\n</div></details></div></details>",0,"euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1409-1479\">Source</a><a href=\"#impl-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/real/trait.Real.html\" title=\"trait num_traits::real::Real\">Real</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.angle_to\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1413-1421\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.angle_to\" class=\"fn\">angle_to</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/struct.Angle.html\" title=\"struct euclid::Angle\">Angle</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/trait.Trig.html\" title=\"trait euclid::Trig\">Trig</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the positive angle between this vector and another vector.</p>\n<p>The returned angle is between 0 and PI.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.length\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1425-1427\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.length\" class=\"fn\">length</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the vector length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.normalize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1432-1434\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.normalize\" class=\"fn\">normalize</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the vector with length of one unit</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_normalize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1442-1449\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.try_normalize\" class=\"fn\">try_normalize</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the vector with length of one unit.</p>\n<p>Unlike <a href=\"euclid/struct.Vector2D.html#method.normalize\" title=\"method euclid::Vector2D::normalize\"><code>Vector2D::normalize</code></a>, this returns <code>None</code> in the case that the\nlength of the vector is zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_max_length\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1453-1460\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.with_max_length\" class=\"fn\">with_max_length</a>(self, max_length: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return this vector capped to a maximum length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_min_length\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1464-1471\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.with_min_length\" class=\"fn\">with_min_length</a>(self, min_length: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return this vector with a minimum length applied.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp_length\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1475-1478\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.clamp_length\" class=\"fn\">clamp_length</a>(self, min: T, max: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return this vector with minimum and maximum lengths applied.</p>\n</div></details></div></details>",0,"euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1481-1514\">Source</a><a href=\"#impl-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1503-1506\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, other: Self, t: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Linearly interpolate each component between this vector and another vector.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::vec3;\n<span class=\"kw\">use </span>euclid::default::Vector3D;\n\n<span class=\"kw\">let </span>from: Vector3D&lt;<span class=\"kw\">_</span>&gt; = vec3(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>, -<span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>to:  Vector3D&lt;<span class=\"kw\">_</span>&gt; = vec3(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>,  <span class=\"number\">0.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), vec3(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>, -<span class=\"number\">2.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), vec3( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>, -<span class=\"number\">1.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), vec3( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>, -<span class=\"number\">0.5</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), vec3( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>,  <span class=\"number\">0.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), vec3(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>,  <span class=\"number\">1.0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1510-1513\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.reflect\" class=\"fn\">reflect</a>(self, normal: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a reflection vector using an incident ray and a surface normal.</p>\n</div></details></div></details>",0,"euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1516-1568\">Source</a><a href=\"#impl-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1519-1525\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the vector each component of which are minimum of this vector and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1529-1535\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the vector each component of which are maximum of this vector and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1542-1547\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.clamp\" class=\"fn\">clamp</a>(self, start: Self, end: Self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the vector each component of which is clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.greater_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1551-1557\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.greater_than\" class=\"fn\">greater_than</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/struct.BoolVector3D.html\" title=\"struct euclid::BoolVector3D\">BoolVector3D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “greater than” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1561-1567\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.lower_than\" class=\"fn\">lower_than</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/struct.BoolVector3D.html\" title=\"struct euclid::BoolVector3D\">BoolVector3D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “lower than” operation on each component.</p>\n</div></details></div></details>",0,"euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1570-1590\">Source</a><a href=\"#impl-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1573-1579\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.equal\" class=\"fn\">equal</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/struct.BoolVector3D.html\" title=\"struct euclid::BoolVector3D\">BoolVector3D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “equal” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1583-1589\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.not_equal\" class=\"fn\">not_equal</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/struct.BoolVector3D.html\" title=\"struct euclid::BoolVector3D\">BoolVector3D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “not equal” operation on each component.</p>\n</div></details></div></details>",0,"euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1592-1672\">Source</a><a href=\"#impl-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1599-1601\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.cast\" class=\"fn\">cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;NewT, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating vector to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1608-1617\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.try_cast\" class=\"fn\">try_cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;NewT, U&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating vector to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1623-1625\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_f32\" class=\"fn\">to_f32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> vector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1629-1631\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> vector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1639-1641\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_usize\" class=\"fn\">to_usize</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>usize</code> vector, truncating decimals if any.</p>\n<p>When casting from floating vector vectors, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1649-1651\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_u32\" class=\"fn\">to_u32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> vector, truncating decimals if any.</p>\n<p>When casting from floating vector vectors, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1659-1661\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_i32\" class=\"fn\">to_i32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i32</code> vector, truncating decimals if any.</p>\n<p>When casting from floating vector vectors, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1669-1671\">Source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/struct.Vector3D.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i64</code> vector, truncating decimals if any.</p>\n<p>When casting from floating vector vectors, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"euclid::default::Vector3D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1041-1047\">Source</a><a href=\"#impl-Zero-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1044-1046\">Source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructor, setting all components to zero.</p>\n</div></details></div></details>","Zero","euclid::default::Vector3D"],["<section id=\"impl-Copy-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#958\">Source</a><a href=\"#impl-Copy-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section>","Copy","euclid::default::Vector3D"],["<section id=\"impl-Eq-for-Vector3D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/vector.rs.html#1025\">Source</a><a href=\"#impl-Eq-for-Vector3D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"euclid/struct.Vector3D.html\" title=\"struct euclid::Vector3D\">Vector3D</a>&lt;T, U&gt;</h3></section>","Eq","euclid::default::Vector3D"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[110286]}